var mn=Object.defineProperty;var ps=h=>{throw TypeError(h)};var gn=(h,P,w)=>P in h?mn(h,P,{enumerable:!0,configurable:!0,writable:!0,value:w}):h[P]=w;var k=(h,P,w)=>gn(h,typeof P!="symbol"?P+"":P,w),ls=(h,P,w)=>P.has(h)||ps("Cannot "+w);var B=(h,P,w)=>(ls(h,P,"read from private field"),w?w.call(h):P.get(h)),ee=(h,P,w)=>P.has(h)?ps("Cannot add the same private member more than once"):P instanceof WeakSet?P.add(h):P.set(h,w),G=(h,P,w,p)=>(ls(h,P,"write to private field"),p?p.call(h,w):P.set(h,w),w);(function(){const P=document.createElement("link").relList;if(P&&P.supports&&P.supports("modulepreload"))return;for(const y of document.querySelectorAll('link[rel="modulepreload"]'))p(y);new MutationObserver(y=>{for(const g of y)if(g.type==="childList")for(const u of g.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&p(u)}).observe(document,{childList:!0,subtree:!0});function w(y){const g={};return y.integrity&&(g.integrity=y.integrity),y.referrerPolicy&&(g.referrerPolicy=y.referrerPolicy),y.crossOrigin==="use-credentials"?g.credentials="include":y.crossOrigin==="anonymous"?g.credentials="omit":g.credentials="same-origin",g}function p(y){if(y.ep)return;y.ep=!0;const g=w(y);fetch(y.href,g)}})();var re=(h=>(h.GETRouterRTPCapabilities="getRouterRtpCapabilities",h.CreateProducerTransport="createProducerTransport",h.ConnectProducerTransport="connectProducerTransport",h.PRODUCE="produce",h.CreateConsumerTransport="createConsumerTransport",h.ConnectConsumerTransport="connectConsumerTransport",h.CONSUME="consume",h.RESUME="resume",h.RouterCapabilities="routerCapabilities",h.ProducerTransportCreated="producerTransportCreated",h.SubTransportCreated="subTransportCreated",h.RESUMED="resumed",h.SUBSCRIBED="subscribed",h))(re||{}),kr={},zt={exports:{}},Er,us;function _n(){if(us)return Er;us=1;var h=1e3,P=h*60,w=P*60,p=w*24,y=p*7,g=p*365.25;Er=function(_,o){o=o||{};var v=typeof _;if(v==="string"&&_.length>0)return u(_);if(v==="number"&&isFinite(_))return o.long?R(_):m(_);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(_))};function u(_){if(_=String(_),!(_.length>100)){var o=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(_);if(o){var v=parseFloat(o[1]),T=(o[2]||"ms").toLowerCase();switch(T){case"years":case"year":case"yrs":case"yr":case"y":return v*g;case"weeks":case"week":case"w":return v*y;case"days":case"day":case"d":return v*p;case"hours":case"hour":case"hrs":case"hr":case"h":return v*w;case"minutes":case"minute":case"mins":case"min":case"m":return v*P;case"seconds":case"second":case"secs":case"sec":case"s":return v*h;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return v;default:return}}}}function m(_){var o=Math.abs(_);return o>=p?Math.round(_/p)+"d":o>=w?Math.round(_/w)+"h":o>=P?Math.round(_/P)+"m":o>=h?Math.round(_/h)+"s":_+"ms"}function R(_){var o=Math.abs(_);return o>=p?S(_,o,p,"day"):o>=w?S(_,o,w,"hour"):o>=P?S(_,o,P,"minute"):o>=h?S(_,o,h,"second"):_+" ms"}function S(_,o,v,T){var D=o>=v*1.5;return Math.round(_/v)+" "+T+(D?"s":"")}return Er}var xr,hs;function wn(){if(hs)return xr;hs=1;function h(P){p.debug=p,p.default=p,p.coerce=S,p.disable=m,p.enable=g,p.enabled=R,p.humanize=_n(),p.destroy=_,Object.keys(P).forEach(o=>{p[o]=P[o]}),p.names=[],p.skips=[],p.formatters={};function w(o){let v=0;for(let T=0;T<o.length;T++)v=(v<<5)-v+o.charCodeAt(T),v|=0;return p.colors[Math.abs(v)%p.colors.length]}p.selectColor=w;function p(o){let v,T=null,D,n;function i(...e){if(!i.enabled)return;const t=i,r=Number(new Date),s=r-(v||r);t.diff=s,t.prev=v,t.curr=r,v=r,e[0]=p.coerce(e[0]),typeof e[0]!="string"&&e.unshift("%O");let a=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(c,f)=>{if(c==="%%")return"%";a++;const l=p.formatters[f];if(typeof l=="function"){const b=e[a];c=l.call(t,b),e.splice(a,1),a--}return c}),p.formatArgs.call(t,e),(t.log||p.log).apply(t,e)}return i.namespace=o,i.useColors=p.useColors(),i.color=p.selectColor(o),i.extend=y,i.destroy=p.destroy,Object.defineProperty(i,"enabled",{enumerable:!0,configurable:!1,get:()=>T!==null?T:(D!==p.namespaces&&(D=p.namespaces,n=p.enabled(o)),n),set:e=>{T=e}}),typeof p.init=="function"&&p.init(i),i}function y(o,v){const T=p(this.namespace+(typeof v>"u"?":":v)+o);return T.log=this.log,T}function g(o){p.save(o),p.namespaces=o,p.names=[],p.skips=[];const v=(typeof o=="string"?o:"").trim().replace(/\s+/g,",").split(",").filter(Boolean);for(const T of v)T[0]==="-"?p.skips.push(T.slice(1)):p.names.push(T)}function u(o,v){let T=0,D=0,n=-1,i=0;for(;T<o.length;)if(D<v.length&&(v[D]===o[T]||v[D]==="*"))v[D]==="*"?(n=D,i=T,D++):(T++,D++);else if(n!==-1)D=n+1,i++,T=i;else return!1;for(;D<v.length&&v[D]==="*";)D++;return D===v.length}function m(){const o=[...p.names,...p.skips.map(v=>"-"+v)].join(",");return p.enable(""),o}function R(o){for(const v of p.skips)if(u(o,v))return!1;for(const v of p.names)if(u(o,v))return!0;return!1}function S(o){return o instanceof Error?o.stack||o.message:o}function _(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return p.enable(p.load()),p}return xr=h,xr}var fs;function dr(){return fs||(fs=1,function(h,P){var w={};P.formatArgs=y,P.save=g,P.load=u,P.useColors=p,P.storage=m(),P.destroy=(()=>{let S=!1;return()=>{S||(S=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),P.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function p(){if(typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs))return!0;if(typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let S;return typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&(S=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(S[1],10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function y(S){if(S[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+S[0]+(this.useColors?"%c ":" ")+"+"+h.exports.humanize(this.diff),!this.useColors)return;const _="color: "+this.color;S.splice(1,0,_,"color: inherit");let o=0,v=0;S[0].replace(/%[a-zA-Z%]/g,T=>{T!=="%%"&&(o++,T==="%c"&&(v=o))}),S.splice(v,0,_)}P.log=console.debug||console.log||(()=>{});function g(S){try{S?P.storage.setItem("debug",S):P.storage.removeItem("debug")}catch{}}function u(){let S;try{S=P.storage.getItem("debug")||P.storage.getItem("DEBUG")}catch{}return!S&&typeof process<"u"&&"env"in process&&(S=w.DEBUG),S}function m(){try{return localStorage}catch{}}h.exports=wn()(P);const{formatters:R}=h.exports;R.j=function(S){try{return JSON.stringify(S)}catch(_){return"[UnexpectedJSONParseError]: "+_.message}}}(zt,zt.exports)),zt.exports}var Ee={},xe={},Mt={exports:{}},vn=Mt.exports,ms;function Sn(){return ms||(ms=1,function(h,P){(function(w,p){var y="2.0.3",g=500,u="user-agent",m="",R="?",S="function",_="undefined",o="object",v="string",T="browser",D="cpu",n="device",i="engine",e="os",t="result",r="name",s="type",a="vendor",d="version",c="architecture",f="major",l="model",b="console",E="mobile",x="tablet",C="smarttv",L="wearable",M="xr",I="embedded",O="inapp",U="brands",H="formFactors",Q="fullVersionList",pe="platform",je="platformVersion",te="bitness",ae="sec-ch-ua",Ge=ae+"-full-version-list",Ot=ae+"-arch",Qe=ae+"-"+te,At=ae+"-form-factors",Ne=ae+"-"+E,cn=ae+"-"+l,Vr=ae+"-"+pe,dn=Vr+"-version",Kr=[U,Q,E,l,pe,je,c,H,te],jt="Amazon",Fe="Apple",Gr="ASUS",Qr="BlackBerry",ke="Google",Wr="Huawei",Yr="Lenovo",Xr="Honor",Nt="LG",fr="Microsoft",mr="Motorola",gr="Nvidia",Jr="OnePlus",_r="OPPO",We="Samsung",Zr="Sharp",Ye="Sony",wr="Xiaomi",vr="Zebra",es="Chrome",ts="Chromium",be="Chromecast",pn="Edge",Xe="Firefox",Je="Opera",Sr="Facebook",rs="Sogou",Ue="Mobile ",Ze=" Browser",br="Windows",ss=typeof w!==_,oe=ss&&w.navigator?w.navigator:p,ye=oe&&oe.userAgentData?oe.userAgentData:p,ln=function(A,j){var N={},z=j;if(!Ut(j)){z={};for(var q in j)for(var K in j[q])z[K]=j[q][K].concat(z[K]?z[K]:[])}for(var F in A)N[F]=z[F]&&z[F].length%2===0?z[F].concat(A[F]):A[F];return N},Ft=function(A){for(var j={},N=0;N<A.length;N++)j[A[N].toUpperCase()]=A[N];return j},yr=function(A,j){if(typeof A===o&&A.length>0){for(var N in A)if(_e(A[N])==_e(j))return!0;return!1}return qe(A)?_e(j).indexOf(_e(A))!==-1:!1},Ut=function(A,j){for(var N in A)return/^(browser|cpu|device|engine|os)$/.test(N)||(j?Ut(A[N]):!1)},qe=function(A){return typeof A===v},Rr=function(A){if(!A)return p;for(var j=[],N=Be(/\\?\"/g,A).split(","),z=0;z<N.length;z++)if(N[z].indexOf(";")>-1){var q=tt(N[z]).split(";v=");j[z]={brand:q[0],version:q[1]}}else j[z]=tt(N[z]);return j},_e=function(A){return qe(A)?A.toLowerCase():A},Cr=function(A){return qe(A)?Be(/[^\d\.]/g,A).split(".")[0]:p},we=function(A){for(var j in A){var N=A[j];typeof N==o&&N.length==2?this[N[0]]=N[1]:this[N]=p}return this},Be=function(A,j){return qe(j)?j.replace(A,m):j},et=function(A){return Be(/\\?\"/g,A)},tt=function(A,j){if(qe(A))return A=Be(/^\s\s*/,A),typeof j===_?A:A.substring(0,g)},Tr=function(A,j){if(!(!A||!j))for(var N=0,z,q,K,F,V,$;N<j.length&&!V;){var W=j[N],ve=j[N+1];for(z=q=0;z<W.length&&!V&&W[z];)if(V=W[z++].exec(A),V)for(K=0;K<ve.length;K++)$=V[++q],F=ve[K],typeof F===o&&F.length>0?F.length===2?typeof F[1]==S?this[F[0]]=F[1].call(this,$):this[F[0]]=F[1]:F.length===3?typeof F[1]===S&&!(F[1].exec&&F[1].test)?this[F[0]]=$?F[1].call(this,$,F[2]):p:this[F[0]]=$?$.replace(F[1],F[2]):p:F.length===4&&(this[F[0]]=$?F[3].call(this,$.replace(F[1],F[2])):p):this[F]=$||p;N+=2}},Re=function(A,j){for(var N in j)if(typeof j[N]===o&&j[N].length>0){for(var z=0;z<j[N].length;z++)if(yr(j[N][z],A))return N===R?p:N}else if(yr(j[N],A))return N===R?p:N;return j.hasOwnProperty("*")?j["*"]:A},is={ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2e3:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2","8.1":"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"},ns={embedded:"Automotive",mobile:"Mobile",tablet:["Tablet","EInk"],smarttv:"TV",wearable:"Watch",xr:["VR","XR"],"?":["Desktop","Unknown"],"*":p},as={browser:[[/\b(?:crmo|crios)\/([\w\.]+)/i],[d,[r,Ue+"Chrome"]],[/edg(?:e|ios|a)?\/([\w\.]+)/i],[d,[r,"Edge"]],[/(opera mini)\/([-\w\.]+)/i,/(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,/(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i],[r,d],[/opios[\/ ]+([\w\.]+)/i],[d,[r,Je+" Mini"]],[/\bop(?:rg)?x\/([\w\.]+)/i],[d,[r,Je+" GX"]],[/\bopr\/([\w\.]+)/i],[d,[r,Je]],[/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i],[d,[r,"Baidu"]],[/\b(?:mxbrowser|mxios|myie2)\/?([-\w\.]*)\b/i],[d,[r,"Maxthon"]],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\/ ]?([\w\.]*)/i,/(avant|iemobile|slim(?:browser|boat|jet))[\/ ]?([\d\.]*)/i,/(?:ms|\()(ie) ([\w\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon|otter|dooble|(?:lg |qute)browser)\/([-\w\.]+)/i,/(heytap|ovi|115|surf)browser\/([\d\.]+)/i,/(ecosia|weibo)(?:__| \w+@)([\d\.]+)/i],[r,d],[/quark(?:pc)?\/([-\w\.]+)/i],[d,[r,"Quark"]],[/\bddg\/([\w\.]+)/i],[d,[r,"DuckDuckGo"]],[/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],[d,[r,"UCBrowser"]],[/microm.+\bqbcore\/([\w\.]+)/i,/\bqbcore\/([\w\.]+).+microm/i,/micromessenger\/([\w\.]+)/i],[d,[r,"WeChat"]],[/konqueror\/([\w\.]+)/i],[d,[r,"Konqueror"]],[/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],[d,[r,"IE"]],[/ya(?:search)?browser\/([\w\.]+)/i],[d,[r,"Yandex"]],[/slbrowser\/([\w\.]+)/i],[d,[r,"Smart "+Yr+Ze]],[/(avast|avg)\/([\w\.]+)/i],[[r,/(.+)/,"$1 Secure"+Ze],d],[/\bfocus\/([\w\.]+)/i],[d,[r,Xe+" Focus"]],[/\bopt\/([\w\.]+)/i],[d,[r,Je+" Touch"]],[/coc_coc\w+\/([\w\.]+)/i],[d,[r,"Coc Coc"]],[/dolfin\/([\w\.]+)/i],[d,[r,"Dolphin"]],[/coast\/([\w\.]+)/i],[d,[r,Je+" Coast"]],[/miuibrowser\/([\w\.]+)/i],[d,[r,"MIUI"+Ze]],[/fxios\/([\w\.-]+)/i],[d,[r,Ue+Xe]],[/\bqihoobrowser\/?([\w\.]*)/i],[d,[r,"360"]],[/\b(qq)\/([\w\.]+)/i],[[r,/(.+)/,"$1Browser"],d],[/(oculus|sailfish|huawei|vivo|pico)browser\/([\w\.]+)/i],[[r,/(.+)/,"$1"+Ze],d],[/samsungbrowser\/([\w\.]+)/i],[d,[r,We+" Internet"]],[/metasr[\/ ]?([\d\.]+)/i],[d,[r,rs+" Explorer"]],[/(sogou)mo\w+\/([\d\.]+)/i],[[r,rs+" Mobile"],d],[/(electron)\/([\w\.]+) safari/i,/(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,/m?(qqbrowser|2345(?=browser|chrome|explorer))\w*[\/ ]?v?([\w\.]+)/i],[r,d],[/(lbbrowser|rekonq)/i],[r],[/ome\/([\w\.]+) \w* ?(iron) saf/i,/ome\/([\w\.]+).+qihu (360)[es]e/i],[d,r],[/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],[[r,Sr],d,[s,O]],[/(Klarna)\/([\w\.]+)/i,/(kakao(?:talk|story))[\/ ]([\w\.]+)/i,/(naver)\(.*?(\d+\.[\w\.]+).*\)/i,/(daum)apps[\/ ]([\w\.]+)/i,/safari (line)\/([\w\.]+)/i,/\b(line)\/([\w\.]+)\/iab/i,/(alipay)client\/([\w\.]+)/i,/(twitter)(?:and| f.+e\/([\w\.]+))/i,/(instagram|snapchat)[\/ ]([-\w\.]+)/i],[r,d,[s,O]],[/\bgsa\/([\w\.]+) .*safari\//i],[d,[r,"GSA"],[s,O]],[/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],[d,[r,"TikTok"],[s,O]],[/\[(linkedin)app\]/i],[r,[s,O]],[/(chromium)[\/ ]([-\w\.]+)/i],[r,d],[/headlesschrome(?:\/([\w\.]+)| )/i],[d,[r,es+" Headless"]],[/ wv\).+(chrome)\/([\w\.]+)/i],[[r,es+" WebView"],d],[/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],[d,[r,"Android"+Ze]],[/chrome\/([\w\.]+) mobile/i],[d,[r,Ue+"Chrome"]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],[r,d],[/version\/([\w\.\,]+) .*mobile(?:\/\w+ | ?)safari/i],[d,[r,Ue+"Safari"]],[/iphone .*mobile(?:\/\w+ | ?)safari/i],[[r,Ue+"Safari"]],[/version\/([\w\.\,]+) .*(safari)/i],[d,r],[/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],[r,[d,"1"]],[/(webkit|khtml)\/([\w\.]+)/i],[r,d],[/(?:mobile|tablet);.*(firefox)\/([\w\.-]+)/i],[[r,Ue+Xe],d],[/(navigator|netscape\d?)\/([-\w\.]+)/i],[[r,"Netscape"],d],[/(wolvic|librewolf)\/([\w\.]+)/i],[r,d],[/mobile vr; rv:([\w\.]+)\).+firefox/i],[d,[r,Xe+" Reality"]],[/ekiohf.+(flow)\/([\w\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\/ ]?([\w\.\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,/(firefox)\/([\w\.]+)/i,/(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,/(amaya|dillo|doris|icab|ladybird|lynx|mosaic|netsurf|obigo|polaris|w3m|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,/\b(links) \(([\w\.]+)/i],[r,[d,/_/g,"."]],[/(cobalt)\/([\w\.]+)/i],[r,[d,/[^\d\.]+./,m]]],cpu:[[/\b((amd|x|x86[-_]?|wow|win)64)\b/i],[[c,"amd64"]],[/(ia32(?=;))/i,/\b((i[346]|x)86)(pc)?\b/i],[[c,"ia32"]],[/\b(aarch64|arm(v?[89]e?l?|_?64))\b/i],[[c,"arm64"]],[/\b(arm(v[67])?ht?n?[fl]p?)\b/i],[[c,"armhf"]],[/( (ce|mobile); ppc;|\/[\w\.]+arm\b)/i],[[c,"arm"]],[/((ppc|powerpc)(64)?)( mac|;|\))/i],[[c,/ower/,m,_e]],[/ sun4\w[;\)]/i],[[c,"sparc"]],[/\b(avr32|ia64(?=;)|68k(?=\))|\barm(?=v([1-7]|[5-7]1)l?|;|eabi)|(irix|mips|sparc)(64)?\b|pa-risc)/i],[[c,_e]]],device:[[/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i],[l,[a,We],[s,x]],[/\b((?:s[cgp]h|gt|sm)-(?![lr])\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,/samsung[- ]((?!sm-[lr])[-\w]+)/i,/sec-(sgh\w+)/i],[l,[a,We],[s,E]],[/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],[l,[a,Fe],[s,E]],[/\((ipad);[-\w\),; ]+apple/i,/applecoremedia\/[\w\.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i],[l,[a,Fe],[s,x]],[/(macintosh);/i],[l,[a,Fe]],[/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],[l,[a,Zr],[s,E]],[/\b((?:brt|eln|hey2?|gdi|jdn)-a?[lnw]09|(?:ag[rm]3?|jdn2|kob2)-a?[lw]0[09]hn)(?: bui|\)|;)/i],[l,[a,Xr],[s,x]],[/honor([-\w ]+)[;\)]/i],[l,[a,Xr],[s,E]],[/\b((?:ag[rs][2356]?k?|bah[234]?|bg[2o]|bt[kv]|cmr|cpn|db[ry]2?|jdn2|got|kob2?k?|mon|pce|scm|sht?|[tw]gr|vrd)-[ad]?[lw][0125][09]b?|605hw|bg2-u03|(?:gem|fdr|m2|ple|t1)-[7a]0[1-4][lu]|t1-a2[13][lw]|mediapad[\w\. ]*(?= bui|\)))\b(?!.+d\/s)/i],[l,[a,Wr],[s,x]],[/(?:huawei)([-\w ]+)[;\)]/i,/\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i],[l,[a,Wr],[s,E]],[/oid[^\)]+; (2[\dbc]{4}(182|283|rp\w{2})[cgl]|m2105k81a?c)(?: bui|\))/i,/\b((?:red)?mi[-_ ]?pad[\w- ]*)(?: bui|\))/i],[[l,/_/g," "],[a,wr],[s,x]],[/\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,/\b; (\w+) build\/hm\1/i,/\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,/\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,/oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,/\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\))/i,/ ([\w ]+) miui\/v?\d/i],[[l,/_/g," "],[a,wr],[s,E]],[/; (\w+) bui.+ oppo/i,/\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i],[l,[a,_r],[s,E]],[/\b(opd2(\d{3}a?))(?: bui|\))/i],[l,[a,Re,{OnePlus:["304","403","203"],"*":_r}],[s,x]],[/(vivo (5r?|6|8l?|go|one|s|x[il]?[2-4]?)[\w\+ ]*)(?: bui|\))/i],[l,[a,"BLU"],[s,E]],[/; vivo (\w+)(?: bui|\))/i,/\b(v[12]\d{3}\w?[at])(?: bui|;)/i],[l,[a,"Vivo"],[s,E]],[/\b(rmx[1-3]\d{3})(?: bui|;|\))/i],[l,[a,"Realme"],[s,E]],[/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,/\bmot(?:orola)?[- ](\w*)/i,/((?:moto(?! 360)[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i],[l,[a,mr],[s,E]],[/\b(mz60\d|xoom[2 ]{0,2}) build\//i],[l,[a,mr],[s,x]],[/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i],[l,[a,Nt],[s,x]],[/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,/\blg[-e;\/ ]+(?!.*(?:browser|netcast|android tv|watch))(\w+)/i,/\blg-?([\d\w]+) bui/i],[l,[a,Nt],[s,E]],[/(ideatab[-\w ]+|602lv|d-42a|a101lv|a2109a|a3500-hv|s[56]000|pb-6505[my]|tb-?x?\d{3,4}(?:f[cu]|xu|[av])|yt\d?-[jx]?\d+[lfmx])( bui|;|\)|\/)/i,/lenovo ?(b[68]0[08]0-?[hf]?|tab(?:[\w- ]+?)|tb[\w-]{6,7})( bui|;|\)|\/)/i],[l,[a,Yr],[s,x]],[/(nokia) (t[12][01])/i],[a,l,[s,x]],[/(?:maemo|nokia).*(n900|lumia \d+|rm-\d+)/i,/nokia[-_ ]?(([-\w\. ]*))/i],[[l,/_/g," "],[s,E],[a,"Nokia"]],[/(pixel (c|tablet))\b/i],[l,[a,ke],[s,x]],[/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],[l,[a,ke],[s,E]],[/droid.+; (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i],[l,[a,Ye],[s,E]],[/sony tablet [ps]/i,/\b(?:sony)?sgp\w+(?: bui|\))/i],[[l,"Xperia Tablet"],[a,Ye],[s,x]],[/ (kb2005|in20[12]5|be20[12][59])\b/i,/(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i],[l,[a,Jr],[s,E]],[/(alexa)webm/i,/(kf[a-z]{2}wi|aeo(?!bc)\w\w)( bui|\))/i,/(kf[a-z]+)( bui|\)).+silk\//i],[l,[a,jt],[s,x]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],[[l,/(.+)/g,"Fire Phone $1"],[a,jt],[s,E]],[/(playbook);[-\w\),; ]+(rim)/i],[l,a,[s,x]],[/\b((?:bb[a-f]|st[hv])100-\d)/i,/\(bb10; (\w+)/i],[l,[a,Qr],[s,E]],[/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i],[l,[a,Gr],[s,x]],[/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],[l,[a,Gr],[s,E]],[/(nexus 9)/i],[l,[a,"HTC"],[s,x]],[/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,/(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i],[a,[l,/_/g," "],[s,E]],[/tcl (xess p17aa)/i,/droid [\w\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])(_\w(\w|\w\w))?(\)| bui)/i],[l,[a,"TCL"],[s,x]],[/droid [\w\.]+; (418(?:7d|8v)|5087z|5102l|61(?:02[dh]|25[adfh]|27[ai]|56[dh]|59k|65[ah])|a509dl|t(?:43(?:0w|1[adepqu])|50(?:6d|7[adju])|6(?:09dl|10k|12b|71[efho]|76[hjk])|7(?:66[ahju]|67[hw]|7[045][bh]|71[hk]|73o|76[ho]|79w|81[hks]?|82h|90[bhsy]|99b)|810[hs]))(_\w(\w|\w\w))?(\)| bui)/i],[l,[a,"TCL"],[s,E]],[/(itel) ((\w+))/i],[[a,_e],l,[s,Re,{tablet:["p10001l","w7001"],"*":"mobile"}]],[/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],[l,[a,"Acer"],[s,x]],[/droid.+; (m[1-5] note) bui/i,/\bmz-([-\w]{2,})/i],[l,[a,"Meizu"],[s,E]],[/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i],[l,[a,"Ulefone"],[s,E]],[/; (energy ?\w+)(?: bui|\))/i,/; energizer ([\w ]+)(?: bui|\))/i],[l,[a,"Energizer"],[s,E]],[/; cat (b35);/i,/; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\))/i],[l,[a,"Cat"],[s,E]],[/((?:new )?andromax[\w- ]+)(?: bui|\))/i],[l,[a,"Smartfren"],[s,E]],[/droid.+; (a(?:015|06[35]|142p?))/i],[l,[a,"Nothing"],[s,E]],[/; (x67 5g|tikeasy \w+|ac[1789]\d\w+)( b|\))/i,/archos ?(5|gamepad2?|([\w ]*[t1789]|hello) ?\d+[\w ]*)( b|\))/i],[l,[a,"Archos"],[s,x]],[/archos ([\w ]+)( b|\))/i,/; (ac[3-6]\d\w{2,8})( b|\))/i],[l,[a,"Archos"],[s,E]],[/(imo) (tab \w+)/i,/(infinix) (x1101b?)/i],[a,l,[s,x]],[/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus(?! zenw)|dell|jolla|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\w]*)/i,/; (blu|hmd|imo|tcl)[_ ]([\w\+ ]+?)(?: bui|\)|; r)/i,/(hp) ([\w ]+\w)/i,/(microsoft); (lumia[\w ]+)/i,/(lenovo)[-_ ]?([-\w ]+?)(?: bui|\)|\/)/i,/(oppo) ?([\w ]+) bui/i],[a,l,[s,E]],[/(kobo)\s(ereader|touch)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\/([\w\.]+)/i],[a,l,[s,x]],[/(surface duo)/i],[l,[a,fr],[s,x]],[/droid [\d\.]+; (fp\du?)(?: b|\))/i],[l,[a,"Fairphone"],[s,E]],[/((?:tegranote|shield t(?!.+d tv))[\w- ]*?)(?: b|\))/i],[l,[a,gr],[s,x]],[/(sprint) (\w+)/i],[a,l,[s,E]],[/(kin\.[onetw]{3})/i],[[l,/\./g," "],[a,fr],[s,E]],[/droid.+; ([c6]+|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],[l,[a,vr],[s,x]],[/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],[l,[a,vr],[s,E]],[/smart-tv.+(samsung)/i],[a,[s,C]],[/hbbtv.+maple;(\d+)/i],[[l,/^/,"SmartTV"],[a,We],[s,C]],[/tcast.+(lg)e?. ([-\w]+)/i],[a,l,[s,C]],[/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],[[a,Nt],[s,C]],[/(apple) ?tv/i],[a,[l,Fe+" TV"],[s,C]],[/crkey.*devicetype\/chromecast/i],[[l,be+" Third Generation"],[a,ke],[s,C]],[/crkey.*devicetype\/([^/]*)/i],[[l,/^/,"Chromecast "],[a,ke],[s,C]],[/fuchsia.*crkey/i],[[l,be+" Nest Hub"],[a,ke],[s,C]],[/crkey/i],[[l,be],[a,ke],[s,C]],[/(portaltv)/i],[l,[a,Sr],[s,C]],[/droid.+aft(\w+)( bui|\))/i],[l,[a,jt],[s,C]],[/(shield \w+ tv)/i],[l,[a,gr],[s,C]],[/\(dtv[\);].+(aquos)/i,/(aquos-tv[\w ]+)\)/i],[l,[a,Zr],[s,C]],[/(bravia[\w ]+)( bui|\))/i],[l,[a,Ye],[s,C]],[/(mi(tv|box)-?\w+) bui/i],[l,[a,wr],[s,C]],[/Hbbtv.*(technisat) (.*);/i],[a,l,[s,C]],[/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,/hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i],[[a,tt],[l,tt],[s,C]],[/droid.+; ([\w- ]+) (?:android tv|smart[- ]?tv)/i],[l,[s,C]],[/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],[[s,C]],[/(ouya)/i,/(nintendo) (\w+)/i],[a,l,[s,b]],[/droid.+; (shield)( bui|\))/i],[l,[a,gr],[s,b]],[/(playstation \w+)/i],[l,[a,Ye],[s,b]],[/\b(xbox(?: one)?(?!; xbox))[\); ]/i],[l,[a,fr],[s,b]],[/\b(sm-[lr]\d\d[0156][fnuw]?s?|gear live)\b/i],[l,[a,We],[s,L]],[/((pebble))app/i,/(asus|google|lg|oppo) ((pixel |zen)?watch[\w ]*)( bui|\))/i],[a,l,[s,L]],[/(ow(?:19|20)?we?[1-3]{1,3})/i],[l,[a,_r],[s,L]],[/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],[l,[a,Fe],[s,L]],[/(opwwe\d{3})/i],[l,[a,Jr],[s,L]],[/(moto 360)/i],[l,[a,mr],[s,L]],[/(smartwatch 3)/i],[l,[a,Ye],[s,L]],[/(g watch r)/i],[l,[a,Nt],[s,L]],[/droid.+; (wt63?0{2,3})\)/i],[l,[a,vr],[s,L]],[/droid.+; (glass) \d/i],[l,[a,ke],[s,M]],[/(pico) (4|neo3(?: link|pro)?)/i],[a,l,[s,M]],[/(quest( \d| pro)?s?).+vr/i],[l,[a,Sr],[s,M]],[/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],[a,[s,I]],[/(aeobc)\b/i],[l,[a,jt],[s,I]],[/(homepod).+mac os/i],[l,[a,Fe],[s,I]],[/windows iot/i],[[s,I]],[/droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+?(mobile|vr|\d) safari/i],[l,[s,Re,{mobile:"Mobile",xr:"VR","*":x}]],[/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],[[s,x]],[/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i],[[s,E]],[/droid .+?; ([\w\. -]+)( bui|\))/i],[l,[a,"Generic"]]],engine:[[/windows.+ edge\/([\w\.]+)/i],[d,[r,pn+"HTML"]],[/(arkweb)\/([\w\.]+)/i],[r,d],[/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],[d,[r,"Blink"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\/([\w\.]+)/i,/ekioh(flow)\/([\w\.]+)/i,/(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,/(icab)[\/ ]([23]\.[\d\.]+)/i,/\b(libweb)/i],[r,d],[/ladybird\//i],[[r,"LibWeb"]],[/rv\:([\w\.]{1,9})\b.+(gecko)/i],[d,r]],os:[[/microsoft (windows) (vista|xp)/i],[r,d],[/(windows (?:phone(?: os)?|mobile|iot))[\/ ]?([\d\.\w ]*)/i],[r,[d,Re,is]],[/windows nt 6\.2; (arm)/i,/windows[\/ ]([ntce\d\. ]+\w)(?!.+xbox)/i,/(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i],[[d,Re,is],[r,br]],[/[adehimnop]{4,7}\b(?:.*os ([\w]+) like mac|; opera)/i,/(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,/cfnetwork\/.+darwin/i],[[d,/_/g,"."],[r,"iOS"]],[/(mac os x) ?([\w\. ]*)/i,/(macintosh|mac_powerpc\b)(?!.+haiku)/i],[[r,"macOS"],[d,/_/g,"."]],[/android ([\d\.]+).*crkey/i],[d,[r,be+" Android"]],[/fuchsia.*crkey\/([\d\.]+)/i],[d,[r,be+" Fuchsia"]],[/crkey\/([\d\.]+).*devicetype\/smartspeaker/i],[d,[r,be+" SmartSpeaker"]],[/linux.*crkey\/([\d\.]+)/i],[d,[r,be+" Linux"]],[/crkey\/([\d\.]+)/i],[d,[r,be]],[/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],[d,r],[/(ubuntu) ([\w\.]+) like android/i],[[r,/(.+)/,"$1 Touch"],d],[/(android|bada|blackberry|kaios|maemo|meego|openharmony|qnx|rim tablet os|sailfish|series40|symbian|tizen|webos)\w*[-\/\.; ]?([\d\.]*)/i],[r,d],[/\(bb(10);/i],[d,[r,Qr]],[/(?:symbian ?os|symbos|s60(?=;)|series ?60)[-\/ ]?([\w\.]*)/i],[d,[r,"Symbian"]],[/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i],[d,[r,Xe+" OS"]],[/web0s;.+rt(tv)/i,/\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],[d,[r,"webOS"]],[/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],[d,[r,"watchOS"]],[/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],[[r,"Chrome OS"],d],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\/(\d+\.[\w\.]+)/i,/(nintendo|playstation) (\w+)/i,/(xbox); +xbox ([^\);]+)/i,/(pico) .+os([\w\.]+)/i,/\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,/(mint)[\/\(\) ]?(\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,/(hurd|linux)(?: arm\w*| x86\w*| ?)([\w\.]*)/i,/(gnu) ?([\w\.]*)/i,/\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,/(haiku) (\w+)/i],[r,d],[/(sunos) ?([\w\.\d]*)/i],[[r,"Solaris"],d],[/((?:open)?solaris)[-\/ ]?([\w\.]*)/i,/(aix) ((\d)(?=\.|\)| )[\w\.])*/i,/\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,/(unix) ?([\w\.]*)/i],[r,d]]},qt=function(){var A={init:{},isIgnore:{},isIgnoreRgx:{},toString:{}};return we.call(A.init,[[T,[r,d,f,s]],[D,[c]],[n,[s,l,a]],[i,[r,d]],[e,[r,d]]]),we.call(A.isIgnore,[[T,[d,f]],[i,[d]],[e,[d]]]),we.call(A.isIgnoreRgx,[[T,/ ?browser$/i],[e,/ ?os$/i]]),we.call(A.toString,[[T,[r,d]],[D,[c]],[n,[a,l]],[i,[r,d]],[e,[r,d]]]),A}(),un=function(A,j){var N=qt.init[j],z=qt.isIgnore[j]||0,q=qt.isIgnoreRgx[j]||0,K=qt.toString[j]||0;function F(){we.call(this,N)}return F.prototype.getItem=function(){return A},F.prototype.withClientHints=function(){return ye?ye.getHighEntropyValues(Kr).then(function(V){return A.setCH(new os(V,!1)).parseCH().get()}):A.parseCH().get()},F.prototype.withFeatureCheck=function(){return A.detectFeature().get()},j!=t&&(F.prototype.is=function(V){var $=!1;for(var W in this)if(this.hasOwnProperty(W)&&!yr(z,W)&&_e(q?Be(q,this[W]):this[W])==_e(q?Be(q,V):V)){if($=!0,V!=_)break}else if(V==_&&$){$=!$;break}return $},F.prototype.toString=function(){var V=m;for(var $ in K)typeof this[K[$]]!==_&&(V+=(V?" ":m)+this[K[$]]);return V||_}),ye||(F.prototype.then=function(V){var $=this,W=function(){for(var Ce in $)$.hasOwnProperty(Ce)&&(this[Ce]=$[Ce])};W.prototype={is:F.prototype.is,toString:F.prototype.toString};var ve=new W;return V(ve),ve}),new F};function os(A,j){if(A=A||{},we.call(this,Kr),j)we.call(this,[[U,Rr(A[ae])],[Q,Rr(A[Ge])],[E,/\?1/.test(A[Ne])],[l,et(A[cn])],[pe,et(A[Vr])],[je,et(A[dn])],[c,et(A[Ot])],[H,Rr(A[At])],[te,et(A[Qe])]]);else for(var N in A)this.hasOwnProperty(N)&&typeof A[N]!==_&&(this[N]=A[N])}function cs(A,j,N,z){return this.get=function(q){return q?this.data.hasOwnProperty(q)?this.data[q]:p:this.data},this.set=function(q,K){return this.data[q]=K,this},this.setCH=function(q){return this.uaCH=q,this},this.detectFeature=function(){if(oe&&oe.userAgent==this.ua)switch(this.itemType){case T:oe.brave&&typeof oe.brave.isBrave==S&&this.set(r,"Brave");break;case n:!this.get(s)&&ye&&ye[E]&&this.set(s,E),this.get(l)=="Macintosh"&&oe&&typeof oe.standalone!==_&&oe.maxTouchPoints&&oe.maxTouchPoints>2&&this.set(l,"iPad").set(s,x);break;case e:!this.get(r)&&ye&&ye[pe]&&this.set(r,ye[pe]);break;case t:var q=this.data,K=function(F){return q[F].getItem().detectFeature().get()};this.set(T,K(T)).set(D,K(D)).set(n,K(n)).set(i,K(i)).set(e,K(e))}return this},this.parseUA=function(){return this.itemType!=t&&Tr.call(this.data,this.ua,this.rgxMap),this.itemType==T&&this.set(f,Cr(this.get(d))),this},this.parseCH=function(){var q=this.uaCH,K=this.rgxMap;switch(this.itemType){case T:case i:var F=q[Q]||q[U],V;if(F)for(var $ in F){var W=F[$].brand||F[$],ve=F[$].version;this.itemType==T&&!/not.a.brand/i.test(W)&&(!V||/chrom/i.test(V)&&W!=ts)&&(W=Re(W,{Chrome:"Google Chrome",Edge:"Microsoft Edge","Chrome WebView":"Android WebView","Chrome Headless":"HeadlessChrome","Huawei Browser":"HuaweiBrowser","MIUI Browser":"Miui Browser","Opera Mobi":"OperaMobile",Yandex:"YaBrowser"}),this.set(r,W).set(d,ve).set(f,Cr(ve)),V=W),this.itemType==i&&W==ts&&this.set(d,ve)}break;case D:var Ce=q[c];Ce&&(Ce&&q[te]=="64"&&(Ce+="64"),Tr.call(this.data,Ce+";",K));break;case n:if(q[E]&&this.set(s,E),q[l]&&(this.set(l,q[l]),!this.get(s)||!this.get(a))){var rt={};Tr.call(rt,"droid 9; "+q[l]+")",K),!this.get(s)&&rt.type&&this.set(s,rt.type),!this.get(a)&&rt.vendor&&this.set(a,rt.vendor)}if(q[H]){var $t;if(typeof q[H]!="string")for(var ds=0;!$t&&ds<q[H].length;)$t=Re(q[H][ds++],ns);else $t=Re(q[H],ns);this.set(s,$t)}break;case e:var Dr=q[pe];if(Dr){var Pr=q[je];Dr==br&&(Pr=parseInt(Cr(Pr),10)>=13?"11":"10"),this.set(r,Dr).set(d,Pr)}this.get(r)==br&&q[l]=="Xbox"&&this.set(r,"Xbox").set(d,p);break;case t:var hn=this.data,st=function(fn){return hn[fn].getItem().setCH(q).parseCH().get()};this.set(T,st(T)).set(D,st(D)).set(n,st(n)).set(i,st(i)).set(e,st(e))}return this},we.call(this,[["itemType",A],["ua",j],["uaCH",z],["rgxMap",N],["data",un(this,A)]]),this}function ue(A,j,N){if(typeof A===o?(Ut(A,!0)?(typeof j===o&&(N=j),j=A):(N=A,j=p),A=p):typeof A===v&&!Ut(j,!0)&&(N=j,j=p),N&&typeof N.append===S){var z={};N.forEach(function($,W){z[W]=$}),N=z}if(!(this instanceof ue))return new ue(A,j,N).getResult();var q=typeof A===v?A:N&&N[u]?N[u]:oe&&oe.userAgent?oe.userAgent:m,K=new os(N,!0),F=j?ln(as,j):as,V=function($){return $==t?function(){return new cs($,q,F,K).set("ua",q).set(T,this.getBrowser()).set(D,this.getCPU()).set(n,this.getDevice()).set(i,this.getEngine()).set(e,this.getOS()).get()}:function(){return new cs($,q,F[$],K).parseUA().get()}};return we.call(this,[["getBrowser",V(T)],["getCPU",V(D)],["getDevice",V(n)],["getEngine",V(i)],["getOS",V(e)],["getResult",V(t)],["getUA",function(){return q}],["setUA",function($){return qe($)&&(q=$.length>g?tt($,g):$),this}]]).setUA(q),this}ue.VERSION=y,ue.BROWSER=Ft([r,d,f,s]),ue.CPU=Ft([c]),ue.DEVICE=Ft([l,a,s,b,E,C,x,L,I]),ue.ENGINE=ue.OS=Ft([r,d]),h.exports&&(P=h.exports=ue),P.UAParser=ue;var $e=ss&&(w.jQuery||w.Zepto);if($e&&!$e.ua){var Bt=new ue;$e.ua=Bt.getResult(),$e.ua.get=function(){return Bt.getUA()},$e.ua.set=function(A){Bt.setUA(A);var j=Bt.getResult();for(var N in j)$e.ua[N]=j[N]}}})(typeof window=="object"?window:vn)}(Mt,Mt.exports)),Mt.exports}var it={},gs;function Y(){if(gs)return it;gs=1,Object.defineProperty(it,"__esModule",{value:!0}),it.Logger=void 0;const h=dr(),P="mediasoup-client";class w{constructor(y){k(this,"_debug");k(this,"_warn");k(this,"_error");y?(this._debug=(0,h.default)(`${P}:${y}`),this._warn=(0,h.default)(`${P}:WARN:${y}`),this._error=(0,h.default)(`${P}:ERROR:${y}`)):(this._debug=(0,h.default)(P),this._warn=(0,h.default)(`${P}:WARN`),this._error=(0,h.default)(`${P}:ERROR`)),this._debug.log=console.info.bind(console),this._warn.log=console.warn.bind(console),this._error.log=console.error.bind(console)}get debug(){return this._debug}get warn(){return this._warn}get error(){return this._error}}return it.Logger=w,it}var nt={},Ht={exports:{}},_s;function bn(){if(_s)return Ht.exports;_s=1;var h=typeof Reflect=="object"?Reflect:null,P=h&&typeof h.apply=="function"?h.apply:function(a,d,c){return Function.prototype.apply.call(a,d,c)},w;h&&typeof h.ownKeys=="function"?w=h.ownKeys:Object.getOwnPropertySymbols?w=function(a){return Object.getOwnPropertyNames(a).concat(Object.getOwnPropertySymbols(a))}:w=function(a){return Object.getOwnPropertyNames(a)};function p(s){console&&console.warn&&console.warn(s)}var y=Number.isNaN||function(a){return a!==a};function g(){g.init.call(this)}Ht.exports=g,Ht.exports.once=e,g.EventEmitter=g,g.prototype._events=void 0,g.prototype._eventsCount=0,g.prototype._maxListeners=void 0;var u=10;function m(s){if(typeof s!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof s)}Object.defineProperty(g,"defaultMaxListeners",{enumerable:!0,get:function(){return u},set:function(s){if(typeof s!="number"||s<0||y(s))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+s+".");u=s}}),g.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},g.prototype.setMaxListeners=function(a){if(typeof a!="number"||a<0||y(a))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+a+".");return this._maxListeners=a,this};function R(s){return s._maxListeners===void 0?g.defaultMaxListeners:s._maxListeners}g.prototype.getMaxListeners=function(){return R(this)},g.prototype.emit=function(a){for(var d=[],c=1;c<arguments.length;c++)d.push(arguments[c]);var f=a==="error",l=this._events;if(l!==void 0)f=f&&l.error===void 0;else if(!f)return!1;if(f){var b;if(d.length>0&&(b=d[0]),b instanceof Error)throw b;var E=new Error("Unhandled error."+(b?" ("+b.message+")":""));throw E.context=b,E}var x=l[a];if(x===void 0)return!1;if(typeof x=="function")P(x,this,d);else for(var C=x.length,L=D(x,C),c=0;c<C;++c)P(L[c],this,d);return!0};function S(s,a,d,c){var f,l,b;if(m(d),l=s._events,l===void 0?(l=s._events=Object.create(null),s._eventsCount=0):(l.newListener!==void 0&&(s.emit("newListener",a,d.listener?d.listener:d),l=s._events),b=l[a]),b===void 0)b=l[a]=d,++s._eventsCount;else if(typeof b=="function"?b=l[a]=c?[d,b]:[b,d]:c?b.unshift(d):b.push(d),f=R(s),f>0&&b.length>f&&!b.warned){b.warned=!0;var E=new Error("Possible EventEmitter memory leak detected. "+b.length+" "+String(a)+" listeners added. Use emitter.setMaxListeners() to increase limit");E.name="MaxListenersExceededWarning",E.emitter=s,E.type=a,E.count=b.length,p(E)}return s}g.prototype.addListener=function(a,d){return S(this,a,d,!1)},g.prototype.on=g.prototype.addListener,g.prototype.prependListener=function(a,d){return S(this,a,d,!0)};function _(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function o(s,a,d){var c={fired:!1,wrapFn:void 0,target:s,type:a,listener:d},f=_.bind(c);return f.listener=d,c.wrapFn=f,f}g.prototype.once=function(a,d){return m(d),this.on(a,o(this,a,d)),this},g.prototype.prependOnceListener=function(a,d){return m(d),this.prependListener(a,o(this,a,d)),this},g.prototype.removeListener=function(a,d){var c,f,l,b,E;if(m(d),f=this._events,f===void 0)return this;if(c=f[a],c===void 0)return this;if(c===d||c.listener===d)--this._eventsCount===0?this._events=Object.create(null):(delete f[a],f.removeListener&&this.emit("removeListener",a,c.listener||d));else if(typeof c!="function"){for(l=-1,b=c.length-1;b>=0;b--)if(c[b]===d||c[b].listener===d){E=c[b].listener,l=b;break}if(l<0)return this;l===0?c.shift():n(c,l),c.length===1&&(f[a]=c[0]),f.removeListener!==void 0&&this.emit("removeListener",a,E||d)}return this},g.prototype.off=g.prototype.removeListener,g.prototype.removeAllListeners=function(a){var d,c,f;if(c=this._events,c===void 0)return this;if(c.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):c[a]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete c[a]),this;if(arguments.length===0){var l=Object.keys(c),b;for(f=0;f<l.length;++f)b=l[f],b!=="removeListener"&&this.removeAllListeners(b);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(d=c[a],typeof d=="function")this.removeListener(a,d);else if(d!==void 0)for(f=d.length-1;f>=0;f--)this.removeListener(a,d[f]);return this};function v(s,a,d){var c=s._events;if(c===void 0)return[];var f=c[a];return f===void 0?[]:typeof f=="function"?d?[f.listener||f]:[f]:d?i(f):D(f,f.length)}g.prototype.listeners=function(a){return v(this,a,!0)},g.prototype.rawListeners=function(a){return v(this,a,!1)},g.listenerCount=function(s,a){return typeof s.listenerCount=="function"?s.listenerCount(a):T.call(s,a)},g.prototype.listenerCount=T;function T(s){var a=this._events;if(a!==void 0){var d=a[s];if(typeof d=="function")return 1;if(d!==void 0)return d.length}return 0}g.prototype.eventNames=function(){return this._eventsCount>0?w(this._events):[]};function D(s,a){for(var d=new Array(a),c=0;c<a;++c)d[c]=s[c];return d}function n(s,a){for(;a+1<s.length;a++)s[a]=s[a+1];s.pop()}function i(s){for(var a=new Array(s.length),d=0;d<a.length;++d)a[d]=s[d].listener||s[d];return a}function e(s,a){return new Promise(function(d,c){function f(b){s.removeListener(a,l),c(b)}function l(){typeof s.removeListener=="function"&&s.removeListener("error",f),d([].slice.call(arguments))}r(s,a,l,{once:!0}),a!=="error"&&t(s,f,{once:!0})})}function t(s,a,d){typeof s.on=="function"&&r(s,"error",a,d)}function r(s,a,d,c){if(typeof s.on=="function")c.once?s.once(a,d):s.on(a,d);else if(typeof s.addEventListener=="function")s.addEventListener(a,function f(l){c.once&&s.removeEventListener(a,f),d(l)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof s)}return Ht.exports}var ws;function Te(){if(ws)return nt;ws=1,Object.defineProperty(nt,"__esModule",{value:!0}),nt.EnhancedEventEmitter=void 0;const h=bn(),P=Y(),w=new P.Logger("EnhancedEventEmitter");class p extends h.EventEmitter{constructor(){super(),this.setMaxListeners(1/0)}emit(g,...u){return super.emit(g,...u)}safeEmit(g,...u){try{return super.emit(g,...u)}catch(m){w.error("safeEmit() | event listener threw an error [eventName:%s]:%o",g,m);try{super.emit("listenererror",g,m)}catch{}return!!super.listenerCount(g)}}on(g,u){return super.on(g,u),this}off(g,u){return super.off(g,u),this}addListener(g,u){return super.on(g,u),this}prependListener(g,u){return super.prependListener(g,u),this}once(g,u){return super.once(g,u),this}prependOnceListener(g,u){return super.prependOnceListener(g,u),this}removeListener(g,u){return super.off(g,u),this}removeAllListeners(g){return super.removeAllListeners(g),this}listenerCount(g){return super.listenerCount(g)}listeners(g){return super.listeners(g)}rawListeners(g){return super.rawListeners(g)}}return nt.EnhancedEventEmitter=p,nt}var Le={},vs;function se(){if(vs)return Le;vs=1,Object.defineProperty(Le,"__esModule",{value:!0}),Le.InvalidStateError=Le.UnsupportedError=void 0;class h extends Error{constructor(p){super(p),this.name="UnsupportedError",Error.hasOwnProperty("captureStackTrace")?Error.captureStackTrace(this,h):this.stack=new Error(p).stack}}Le.UnsupportedError=h;class P extends Error{constructor(p){super(p),this.name="InvalidStateError",Error.hasOwnProperty("captureStackTrace")?Error.captureStackTrace(this,P):this.stack=new Error(p).stack}}return Le.InvalidStateError=P,Le}var ze={},Ss;function J(){if(Ss)return ze;Ss=1,Object.defineProperty(ze,"__esModule",{value:!0}),ze.clone=h,ze.generateRandomNumber=P,ze.deepFreeze=w;function h(p){if(p!==void 0)return Number.isNaN(p)?NaN:typeof structuredClone=="function"?structuredClone(p):JSON.parse(JSON.stringify(p))}function P(){return Math.round(Math.random()*1e7)}function w(p){const y=Reflect.ownKeys(p);for(const g of y){const u=p[g];(u&&typeof u=="object"||typeof u=="function")&&w(u)}return Object.freeze(p)}return ze}var ne={},Z={},Ie={},bs;function yn(){if(bs)return Ie;bs=1;var h=Ie&&Ie.__importDefault||function(y){return y&&y.__esModule?y:{default:y}};Object.defineProperty(Ie,"__esModule",{value:!0}),Ie.Logger=void 0;const P=h(dr()),w="h264-profile-level-id";class p{constructor(g){g?(this._debug=(0,P.default)(`${w}:${g}`),this._warn=(0,P.default)(`${w}:WARN:${g}`),this._error=(0,P.default)(`${w}:ERROR:${g}`)):(this._debug=(0,P.default)(w),this._warn=(0,P.default)(`${w}:WARN`),this._error=(0,P.default)(`${w}:ERROR`)),this._debug.log=console.info.bind(console),this._warn.log=console.warn.bind(console),this._error.log=console.error.bind(console)}get debug(){return this._debug}get warn(){return this._warn}get error(){return this._error}}return Ie.Logger=p,Ie}var ys;function Rn(){if(ys)return Z;ys=1,Object.defineProperty(Z,"__esModule",{value:!0}),Z.ProfileLevelId=Z.Level=Z.Profile=void 0,Z.parseProfileLevelId=_,Z.profileLevelIdToString=o,Z.profileToString=v,Z.levelToString=T,Z.parseSdpProfileLevelId=D,Z.isSameProfile=n,Z.isSameProfileAndLevel=i,Z.generateProfileLevelIdStringForAnswer=e,Z.supportedLevel=t;const h=yn(),P=new h.Logger;var w;(function(c){c[c.ConstrainedBaseline=1]="ConstrainedBaseline",c[c.Baseline=2]="Baseline",c[c.Main=3]="Main",c[c.ConstrainedHigh=4]="ConstrainedHigh",c[c.High=5]="High",c[c.PredictiveHigh444=6]="PredictiveHigh444"})(w||(Z.Profile=w={}));var p;(function(c){c[c.L1_b=0]="L1_b",c[c.L1=10]="L1",c[c.L1_1=11]="L1_1",c[c.L1_2=12]="L1_2",c[c.L1_3=13]="L1_3",c[c.L2=20]="L2",c[c.L2_1=21]="L2_1",c[c.L2_2=22]="L2_2",c[c.L3=30]="L3",c[c.L3_1=31]="L3_1",c[c.L3_2=32]="L3_2",c[c.L4=40]="L4",c[c.L4_1=41]="L4_1",c[c.L4_2=42]="L4_2",c[c.L5=50]="L5",c[c.L5_1=51]="L5_1",c[c.L5_2=52]="L5_2"})(p||(Z.Level=p={}));class y{constructor(f,l){this.profile=f,this.level=l}}Z.ProfileLevelId=y;const g=new y(w.ConstrainedBaseline,p.L3_1);class u{constructor(f){this.mask=~r("x",f),this.masked_value=r("1",f)}isMatch(f){return this.masked_value===(f&this.mask)}}class m{constructor(f,l,b){this.profile_idc=f,this.profile_iop=l,this.profile=b}}const R=[new m(66,new u("x1xx0000"),w.ConstrainedBaseline),new m(77,new u("1xxx0000"),w.ConstrainedBaseline),new m(88,new u("11xx0000"),w.ConstrainedBaseline),new m(66,new u("x0xx0000"),w.Baseline),new m(88,new u("10xx0000"),w.Baseline),new m(77,new u("0x0x0000"),w.Main),new m(100,new u("00000000"),w.High),new m(100,new u("00001100"),w.ConstrainedHigh),new m(244,new u("00000000"),w.PredictiveHigh444)],S=[{max_macroblocks_per_second:1485,max_macroblock_frame_size:99,level:p.L1},{max_macroblocks_per_second:1485,max_macroblock_frame_size:99,level:p.L1_b},{max_macroblocks_per_second:3e3,max_macroblock_frame_size:396,level:p.L1_1},{max_macroblocks_per_second:6e3,max_macroblock_frame_size:396,level:p.L1_2},{max_macroblocks_per_second:11880,max_macroblock_frame_size:396,level:p.L1_3},{max_macroblocks_per_second:11880,max_macroblock_frame_size:396,level:p.L2},{max_macroblocks_per_second:19800,max_macroblock_frame_size:792,level:p.L2_1},{max_macroblocks_per_second:20250,max_macroblock_frame_size:1620,level:p.L2_2},{max_macroblocks_per_second:40500,max_macroblock_frame_size:1620,level:p.L3},{max_macroblocks_per_second:108e3,max_macroblock_frame_size:3600,level:p.L3_1},{max_macroblocks_per_second:216e3,max_macroblock_frame_size:5120,level:p.L3_2},{max_macroblocks_per_second:245760,max_macroblock_frame_size:8192,level:p.L4},{max_macroblocks_per_second:245760,max_macroblock_frame_size:8192,level:p.L4_1},{max_macroblocks_per_second:522240,max_macroblock_frame_size:8704,level:p.L4_2},{max_macroblocks_per_second:589824,max_macroblock_frame_size:22080,level:p.L5},{max_macroblocks_per_second:983040,max_macroblock_frame_size:36864,level:p.L5_1},{max_macroblocks_per_second:2073600,max_macroblock_frame_size:36864,level:p.L5_2}];function _(c){if(typeof c!="string"||c.length!==6)return;const l=parseInt(c,16);if(l===0)return;const b=l&255,E=l>>8&255,x=l>>16&255;let C;switch(b){case p.L1_1:{C=(E&16)!==0?p.L1_b:p.L1_1;break}case p.L1:case p.L1_2:case p.L1_3:case p.L2:case p.L2_1:case p.L2_2:case p.L3:case p.L3_1:case p.L3_2:case p.L4:case p.L4_1:case p.L4_2:case p.L5:case p.L5_1:case p.L5_2:{C=b;break}default:{P.warn(`parseProfileLevelId() | unrecognized level_idc [str:${c}, level_idc:${b}]`);return}}for(const L of R)if(x===L.profile_idc&&L.profile_iop.isMatch(E))return P.debug(`parseProfileLevelId() | result [str:${c}, profile:${L.profile}, level:${C}]`),new y(L.profile,C);P.warn(`parseProfileLevelId() | unrecognized profile_idc/profile_iop combination [str:${c}, profile_idc:${x}, profile_iop:${E}]`)}function o(c){if(c.level==p.L1_b)switch(c.profile){case w.ConstrainedBaseline:return"42f00b";case w.Baseline:return"42100b";case w.Main:return"4d100b";default:{P.warn(`profileLevelIdToString() | Level 1_b not is allowed for profile ${c.profile}`);return}}let f;switch(c.profile){case w.ConstrainedBaseline:{f="42e0";break}case w.Baseline:{f="4200";break}case w.Main:{f="4d00";break}case w.ConstrainedHigh:{f="640c";break}case w.High:{f="6400";break}case w.PredictiveHigh444:{f="f400";break}default:{P.warn(`profileLevelIdToString() | unrecognized profile ${c.profile}`);return}}let l=c.level.toString(16);return l.length===1&&(l=`0${l}`),`${f}${l}`}function v(c){switch(c){case w.ConstrainedBaseline:return"ConstrainedBaseline";case w.Baseline:return"Baseline";case w.Main:return"Main";case w.ConstrainedHigh:return"ConstrainedHigh";case w.High:return"High";case w.PredictiveHigh444:return"PredictiveHigh444";default:{P.warn(`profileToString() | unrecognized profile ${c}`);return}}}function T(c){switch(c){case p.L1_b:return"1b";case p.L1:return"1";case p.L1_1:return"1.1";case p.L1_2:return"1.2";case p.L1_3:return"1.3";case p.L2:return"2";case p.L2_1:return"2.1";case p.L2_2:return"2.2";case p.L3:return"3";case p.L3_1:return"3.1";case p.L3_2:return"3.2";case p.L4:return"4";case p.L4_1:return"4.1";case p.L4_2:return"4.2";case p.L5:return"5";case p.L5_1:return"5.1";case p.L5_2:return"5.2";default:{P.warn(`levelToString() | unrecognized level ${c}`);return}}}function D(c={}){const f=c["profile-level-id"];return f?_(f):g}function n(c={},f={}){const l=D(c),b=D(f);return!!(l&&b&&l.profile===b.profile)}function i(c={},f={}){const l=D(c),b=D(f);return!!(l&&b&&l.profile===b.profile&&l.level==b.level)}function e(c={},f={}){if(!c["profile-level-id"]&&!f["profile-level-id"]){P.warn("generateProfileLevelIdStringForAnswer() | profile-level-id missing in local and remote params");return}const l=D(c),b=D(f);if(!l)throw new TypeError("invalid local_profile_level_id");if(!b)throw new TypeError("invalid remote_profile_level_id");if(l.profile!==b.profile)throw new TypeError("H264 Profile mismatch");const E=d(c)&&d(f),x=l.level,C=b.level,L=a(x,C),M=E?x:L;return P.debug(`generateProfileLevelIdStringForAnswer() | result [profile:${l.profile}, level:${M}]`),o(new y(l.profile,M))}function t(c,f){for(let b=S.length-1;b>=0;--b){const E=S[b];if(E.max_macroblock_frame_size*256<=c&&E.max_macroblocks_per_second<=f*E.max_macroblock_frame_size)return P.debug(`supportedLevel() | result [max_frame_pixel_count:${c}, max_fps:${f}, level:${E.level}]`),E.level}P.warn(`supportedLevel() | no level supported [max_frame_pixel_count:${c}, max_fps:${f}]`)}function r(c,f){return+(f[0]===c)<<7|+(f[1]===c)<<6|+(f[2]===c)<<5|+(f[3]===c)<<4|+(f[4]===c)<<3|+(f[5]===c)<<2|+(f[6]===c)<<1|+(f[7]===c)<<0}function s(c,f){return c===p.L1_b?f!==p.L1&&f!==p.L1_b:f===p.L1_b?c!==p.L1:c<f}function a(c,f){return s(c,f)?c:f}function d(c={}){const f=c["level-asymmetry-allowed"];return f===!0||f===1||f==="1"}return Z}var Rs;function ie(){if(Rs)return ne;Rs=1,Object.defineProperty(ne,"__esModule",{value:!0}),ne.validateRtpCapabilities=g,ne.validateRtpParameters=u,ne.validateSctpStreamParameters=m,ne.validateSctpCapabilities=R,ne.getExtendedRtpCapabilities=S,ne.getRecvRtpCapabilities=_,ne.getSendingRtpParameters=o,ne.getSendingRemoteRtpParameters=v,ne.reduceCodecs=T,ne.generateProbatorRtpParameters=D,ne.canSend=n,ne.canReceive=i;const h=Rn(),P=J(),w="probator",p=1234,y=127;function g(C){if(typeof C!="object")throw new TypeError("caps is not an object");if(C.codecs&&!Array.isArray(C.codecs))throw new TypeError("caps.codecs is not an array");C.codecs||(C.codecs=[]);for(const L of C.codecs)e(L);if(C.headerExtensions&&!Array.isArray(C.headerExtensions))throw new TypeError("caps.headerExtensions is not an array");C.headerExtensions||(C.headerExtensions=[]);for(const L of C.headerExtensions)r(L)}function u(C){if(typeof C!="object")throw new TypeError("params is not an object");if(C.mid&&typeof C.mid!="string")throw new TypeError("params.mid is not a string");if(!Array.isArray(C.codecs))throw new TypeError("missing params.codecs");for(const L of C.codecs)s(L);if(C.headerExtensions&&!Array.isArray(C.headerExtensions))throw new TypeError("params.headerExtensions is not an array");C.headerExtensions||(C.headerExtensions=[]);for(const L of C.headerExtensions)a(L);if(C.encodings&&!Array.isArray(C.encodings))throw new TypeError("params.encodings is not an array");C.encodings||(C.encodings=[]);for(const L of C.encodings)d(L);if(C.rtcp&&typeof C.rtcp!="object")throw new TypeError("params.rtcp is not an object");C.rtcp||(C.rtcp={}),c(C.rtcp)}function m(C){if(typeof C!="object")throw new TypeError("params is not an object");if(typeof C.streamId!="number")throw new TypeError("missing params.streamId");let L=!1;if(typeof C.ordered=="boolean"?L=!0:C.ordered=!0,C.maxPacketLifeTime&&typeof C.maxPacketLifeTime!="number")throw new TypeError("invalid params.maxPacketLifeTime");if(C.maxRetransmits&&typeof C.maxRetransmits!="number")throw new TypeError("invalid params.maxRetransmits");if(C.maxPacketLifeTime&&C.maxRetransmits)throw new TypeError("cannot provide both maxPacketLifeTime and maxRetransmits");if(L&&C.ordered&&(C.maxPacketLifeTime||C.maxRetransmits))throw new TypeError("cannot be ordered with maxPacketLifeTime or maxRetransmits");if(!L&&(C.maxPacketLifeTime||C.maxRetransmits)&&(C.ordered=!1),C.label&&typeof C.label!="string")throw new TypeError("invalid params.label");if(C.protocol&&typeof C.protocol!="string")throw new TypeError("invalid params.protocol")}function R(C){if(typeof C!="object")throw new TypeError("caps is not an object");if(!C.numStreams||typeof C.numStreams!="object")throw new TypeError("missing caps.numStreams");f(C.numStreams)}function S(C,L,M){const I={codecs:[],headerExtensions:[]};if(M)for(const O of C.codecs??[]){if(l(O))continue;const U=(L.codecs??[]).find(Q=>b(Q,O,{strict:!0,modify:!0}));if(!U)continue;const H={mimeType:O.mimeType,kind:O.kind,clockRate:O.clockRate,channels:O.channels,localPayloadType:O.preferredPayloadType,localRtxPayloadType:void 0,remotePayloadType:U.preferredPayloadType,remoteRtxPayloadType:void 0,localParameters:O.parameters,remoteParameters:U.parameters,rtcpFeedback:x(O,U)};I.codecs.push(H)}else for(const O of L.codecs??[]){if(l(O))continue;const U=(C.codecs??[]).find(Q=>b(Q,O,{strict:!0,modify:!0}));if(!U)continue;const H={mimeType:U.mimeType,kind:U.kind,clockRate:U.clockRate,channels:U.channels,localPayloadType:U.preferredPayloadType,localRtxPayloadType:void 0,remotePayloadType:O.preferredPayloadType,remoteRtxPayloadType:void 0,localParameters:U.parameters,remoteParameters:O.parameters,rtcpFeedback:x(U,O)};I.codecs.push(H)}for(const O of I.codecs){const U=C.codecs.find(Q=>l(Q)&&Q.parameters.apt===O.localPayloadType),H=L.codecs.find(Q=>l(Q)&&Q.parameters.apt===O.remotePayloadType);U&&H&&(O.localRtxPayloadType=U.preferredPayloadType,O.remoteRtxPayloadType=H.preferredPayloadType)}for(const O of L.headerExtensions){const U=C.headerExtensions.find(Q=>E(Q,O));if(!U)continue;const H={kind:O.kind,uri:O.uri,sendId:U.preferredId,recvId:O.preferredId,encrypt:U.preferredEncrypt,direction:"sendrecv"};switch(O.direction){case"sendrecv":{H.direction="sendrecv";break}case"recvonly":{H.direction="sendonly";break}case"sendonly":{H.direction="recvonly";break}case"inactive":{H.direction="inactive";break}}I.headerExtensions.push(H)}return I}function _(C){const L={codecs:[],headerExtensions:[]};for(const M of C.codecs){const I={mimeType:M.mimeType,kind:M.kind,preferredPayloadType:M.remotePayloadType,clockRate:M.clockRate,channels:M.channels,parameters:M.localParameters,rtcpFeedback:M.rtcpFeedback};if(L.codecs.push(I),!M.remoteRtxPayloadType)continue;const O={mimeType:`${M.kind}/rtx`,kind:M.kind,preferredPayloadType:M.remoteRtxPayloadType,clockRate:M.clockRate,parameters:{apt:M.remotePayloadType},rtcpFeedback:[]};L.codecs.push(O)}for(const M of C.headerExtensions){if(M.direction!=="sendrecv"&&M.direction!=="recvonly")continue;const I={kind:M.kind,uri:M.uri,preferredId:M.recvId,preferredEncrypt:M.encrypt,direction:M.direction};L.headerExtensions.push(I)}return L}function o(C,L){const M={mid:void 0,codecs:[],headerExtensions:[],encodings:[],rtcp:{}};for(const I of L.codecs){if(I.kind!==C)continue;const O={mimeType:I.mimeType,payloadType:I.localPayloadType,clockRate:I.clockRate,channels:I.channels,parameters:I.localParameters,rtcpFeedback:I.rtcpFeedback};if(M.codecs.push(O),I.localRtxPayloadType){const U={mimeType:`${I.kind}/rtx`,payloadType:I.localRtxPayloadType,clockRate:I.clockRate,parameters:{apt:I.localPayloadType},rtcpFeedback:[]};M.codecs.push(U)}}for(const I of L.headerExtensions){if(I.kind&&I.kind!==C||I.direction!=="sendrecv"&&I.direction!=="sendonly")continue;const O={uri:I.uri,id:I.sendId,encrypt:I.encrypt,parameters:{}};M.headerExtensions.push(O)}return M}function v(C,L){const M={mid:void 0,codecs:[],headerExtensions:[],encodings:[],rtcp:{}};for(const I of L.codecs){if(I.kind!==C)continue;const O={mimeType:I.mimeType,payloadType:I.localPayloadType,clockRate:I.clockRate,channels:I.channels,parameters:I.remoteParameters,rtcpFeedback:I.rtcpFeedback};if(M.codecs.push(O),I.localRtxPayloadType){const U={mimeType:`${I.kind}/rtx`,payloadType:I.localRtxPayloadType,clockRate:I.clockRate,parameters:{apt:I.localPayloadType},rtcpFeedback:[]};M.codecs.push(U)}}for(const I of L.headerExtensions){if(I.kind&&I.kind!==C||I.direction!=="sendrecv"&&I.direction!=="sendonly")continue;const O={uri:I.uri,id:I.sendId,encrypt:I.encrypt,parameters:{}};M.headerExtensions.push(O)}if(M.headerExtensions.some(I=>I.uri==="http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01"))for(const I of M.codecs)I.rtcpFeedback=(I.rtcpFeedback??[]).filter(O=>O.type!=="goog-remb");else if(M.headerExtensions.some(I=>I.uri==="http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time"))for(const I of M.codecs)I.rtcpFeedback=(I.rtcpFeedback??[]).filter(O=>O.type!=="transport-cc");else for(const I of M.codecs)I.rtcpFeedback=(I.rtcpFeedback??[]).filter(O=>O.type!=="transport-cc"&&O.type!=="goog-remb");return M}function T(C,L){const M=[];if(!L)M.push(C[0]),l(C[1])&&M.push(C[1]);else{for(let I=0;I<C.length;++I)if(b(C[I],L,{strict:!0})){M.push(C[I]),l(C[I+1])&&M.push(C[I+1]);break}if(M.length===0)throw new TypeError("no matching codec found")}return M}function D(C){C=P.clone(C),u(C);const L={mid:w,codecs:[],headerExtensions:[],encodings:[{ssrc:p}],rtcp:{cname:"probator"}};return L.codecs.push(C.codecs[0]),L.codecs[0].payloadType=y,L.headerExtensions=C.headerExtensions,L}function n(C,L){return L.codecs.some(M=>M.kind===C)}function i(C,L){if(u(C),C.codecs.length===0)return!1;const M=C.codecs[0];return L.codecs.some(I=>I.remotePayloadType===M.payloadType)}function e(C){const L=new RegExp("^(audio|video)/(.+)","i");if(typeof C!="object")throw new TypeError("codec is not an object");if(!C.mimeType||typeof C.mimeType!="string")throw new TypeError("missing codec.mimeType");const M=L.exec(C.mimeType);if(!M)throw new TypeError("invalid codec.mimeType");if(C.kind=M[1].toLowerCase(),C.preferredPayloadType&&typeof C.preferredPayloadType!="number")throw new TypeError("invalid codec.preferredPayloadType");if(typeof C.clockRate!="number")throw new TypeError("missing codec.clockRate");C.kind==="audio"?typeof C.channels!="number"&&(C.channels=1):delete C.channels,(!C.parameters||typeof C.parameters!="object")&&(C.parameters={});for(const I of Object.keys(C.parameters)){let O=C.parameters[I];if(O===void 0&&(C.parameters[I]="",O=""),typeof O!="string"&&typeof O!="number")throw new TypeError(`invalid codec parameter [key:${I}s, value:${O}]`);if(I==="apt"&&typeof O!="number")throw new TypeError("invalid codec apt parameter")}(!C.rtcpFeedback||!Array.isArray(C.rtcpFeedback))&&(C.rtcpFeedback=[]);for(const I of C.rtcpFeedback)t(I)}function t(C){if(typeof C!="object")throw new TypeError("fb is not an object");if(!C.type||typeof C.type!="string")throw new TypeError("missing fb.type");(!C.parameter||typeof C.parameter!="string")&&(C.parameter="")}function r(C){if(typeof C!="object")throw new TypeError("ext is not an object");if(C.kind!=="audio"&&C.kind!=="video")throw new TypeError("invalid ext.kind");if(!C.uri||typeof C.uri!="string")throw new TypeError("missing ext.uri");if(typeof C.preferredId!="number")throw new TypeError("missing ext.preferredId");if(C.preferredEncrypt&&typeof C.preferredEncrypt!="boolean")throw new TypeError("invalid ext.preferredEncrypt");if(C.preferredEncrypt||(C.preferredEncrypt=!1),C.direction&&typeof C.direction!="string")throw new TypeError("invalid ext.direction");C.direction||(C.direction="sendrecv")}function s(C){const L=new RegExp("^(audio|video)/(.+)","i");if(typeof C!="object")throw new TypeError("codec is not an object");if(!C.mimeType||typeof C.mimeType!="string")throw new TypeError("missing codec.mimeType");const M=L.exec(C.mimeType);if(!M)throw new TypeError("invalid codec.mimeType");if(typeof C.payloadType!="number")throw new TypeError("missing codec.payloadType");if(typeof C.clockRate!="number")throw new TypeError("missing codec.clockRate");M[1].toLowerCase()==="audio"?typeof C.channels!="number"&&(C.channels=1):delete C.channels,(!C.parameters||typeof C.parameters!="object")&&(C.parameters={});for(const O of Object.keys(C.parameters)){let U=C.parameters[O];if(U===void 0&&(C.parameters[O]="",U=""),typeof U!="string"&&typeof U!="number")throw new TypeError(`invalid codec parameter [key:${O}s, value:${U}]`);if(O==="apt"&&typeof U!="number")throw new TypeError("invalid codec apt parameter")}(!C.rtcpFeedback||!Array.isArray(C.rtcpFeedback))&&(C.rtcpFeedback=[]);for(const O of C.rtcpFeedback)t(O)}function a(C){if(typeof C!="object")throw new TypeError("ext is not an object");if(!C.uri||typeof C.uri!="string")throw new TypeError("missing ext.uri");if(typeof C.id!="number")throw new TypeError("missing ext.id");if(C.encrypt&&typeof C.encrypt!="boolean")throw new TypeError("invalid ext.encrypt");C.encrypt||(C.encrypt=!1),(!C.parameters||typeof C.parameters!="object")&&(C.parameters={});for(const L of Object.keys(C.parameters)){let M=C.parameters[L];if(M===void 0&&(C.parameters[L]="",M=""),typeof M!="string"&&typeof M!="number")throw new TypeError("invalid header extension parameter")}}function d(C){if(typeof C!="object")throw new TypeError("encoding is not an object");if(C.ssrc&&typeof C.ssrc!="number")throw new TypeError("invalid encoding.ssrc");if(C.rid&&typeof C.rid!="string")throw new TypeError("invalid encoding.rid");if(C.rtx&&typeof C.rtx!="object")throw new TypeError("invalid encoding.rtx");if(C.rtx&&typeof C.rtx.ssrc!="number")throw new TypeError("missing encoding.rtx.ssrc");if((!C.dtx||typeof C.dtx!="boolean")&&(C.dtx=!1),C.scalabilityMode&&typeof C.scalabilityMode!="string")throw new TypeError("invalid encoding.scalabilityMode")}function c(C){if(typeof C!="object")throw new TypeError("rtcp is not an object");if(C.cname&&typeof C.cname!="string")throw new TypeError("invalid rtcp.cname");(!C.reducedSize||typeof C.reducedSize!="boolean")&&(C.reducedSize=!0)}function f(C){if(typeof C!="object")throw new TypeError("numStreams is not an object");if(typeof C.OS!="number")throw new TypeError("missing numStreams.OS");if(typeof C.MIS!="number")throw new TypeError("missing numStreams.MIS")}function l(C){return C?/.+\/rtx$/i.test(C.mimeType):!1}function b(C,L,{strict:M=!1,modify:I=!1}={}){const O=C.mimeType.toLowerCase(),U=L.mimeType.toLowerCase();if(O!==U||C.clockRate!==L.clockRate||C.channels!==L.channels)return!1;switch(O){case"video/h264":{if(M){const H=C.parameters["packetization-mode"]??0,Q=L.parameters["packetization-mode"]??0;if(H!==Q||!h.isSameProfile(C.parameters,L.parameters))return!1;let pe;try{pe=h.generateProfileLevelIdStringForAnswer(C.parameters,L.parameters)}catch{return!1}I&&(pe?(C.parameters["profile-level-id"]=pe,L.parameters["profile-level-id"]=pe):(delete C.parameters["profile-level-id"],delete L.parameters["profile-level-id"]))}break}case"video/vp9":{if(M){const H=C.parameters["profile-id"]??0,Q=L.parameters["profile-id"]??0;if(H!==Q)return!1}break}}return!0}function E(C,L){return!(C.kind&&L.kind&&C.kind!==L.kind||C.uri!==L.uri)}function x(C,L){const M=[];for(const I of C.rtcpFeedback??[]){const O=(L.rtcpFeedback??[]).find(U=>U.type===I.type&&(U.parameter===I.parameter||!U.parameter&&!I.parameter));O&&M.push(O)}return M}return ne}var at={},Lr={},ot={},ct={},Cs;function Cn(){if(Cs)return ct;Cs=1,Object.defineProperty(ct,"__esModule",{value:!0}),ct.Logger=void 0;const h=dr(),P="awaitqueue";let w=class{constructor(y){k(this,"_debug");k(this,"_warn");k(this,"_error");y?(this._debug=h(`${P}:${y}`),this._warn=h(`${P}:WARN:${y}`),this._error=h(`${P}:ERROR:${y}`)):(this._debug=h(P),this._warn=h(`${P}:WARN`),this._error=h(`${P}:ERROR`)),this._debug.log=console.info.bind(console),this._warn.log=console.warn.bind(console),this._error.log=console.error.bind(console)}get debug(){return this._debug}get warn(){return this._warn}get error(){return this._error}};return ct.Logger=w,ct}var Me={},Ts;function ji(){if(Ts)return Me;Ts=1,Object.defineProperty(Me,"__esModule",{value:!0}),Me.AwaitQueueRemovedTaskError=Me.AwaitQueueStoppedError=void 0;class h extends Error{constructor(p){super(p??"queue stopped"),this.name="AwaitQueueStoppedError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,h)}}Me.AwaitQueueStoppedError=h;class P extends Error{constructor(p){super(p??"queue task removed"),this.name="AwaitQueueRemovedTaskError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,P)}}return Me.AwaitQueueRemovedTaskError=P,Me}var Ds;function Tn(){if(Ds)return ot;Ds=1,Object.defineProperty(ot,"__esModule",{value:!0}),ot.AwaitQueue=void 0;const h=Cn(),P=ji(),w=new h.Logger("AwaitQueue");let p=class{constructor(){k(this,"pendingTasks",new Map);k(this,"nextTaskId",0);k(this,"stopping",!1);w.debug("constructor()")}get size(){return this.pendingTasks.size}async push(g,u){if(u=u??g.name,w.debug(`push() [name:${u}]`),typeof g!="function")throw new TypeError("given task is not a function");if(u)try{Object.defineProperty(g,"name",{value:u})}catch{}return new Promise((m,R)=>{const S={id:this.nextTaskId++,task:g,name:u,enqueuedAt:Date.now(),executedAt:void 0,completed:!1,resolve:_=>{if(S.completed)return;S.completed=!0,this.pendingTasks.delete(S.id),w.debug(`resolving task [name:${S.name}]`),m(_);const[o]=this.pendingTasks.values();o&&!o.executedAt&&this.execute(o)},reject:_=>{if(!S.completed&&(S.completed=!0,this.pendingTasks.delete(S.id),w.debug(`rejecting task [name:${S.name}]: %s`,String(_)),R(_),!this.stopping)){const[o]=this.pendingTasks.values();o&&!o.executedAt&&this.execute(o)}}};this.pendingTasks.set(S.id,S),this.pendingTasks.size===1&&this.execute(S)})}stop(){w.debug("stop()"),this.stopping=!0;for(const g of this.pendingTasks.values())w.debug(`stop() | stopping task [name:${g.name}]`),g.reject(new P.AwaitQueueStoppedError);this.stopping=!1}remove(g){w.debug(`remove() [taskIdx:${g}]`);const u=Array.from(this.pendingTasks.values())[g];if(!u){w.debug(`stop() | no task with given idx [taskIdx:${g}]`);return}u.reject(new P.AwaitQueueRemovedTaskError)}dump(){const g=Date.now();let u=0;return Array.from(this.pendingTasks.values()).map(m=>({idx:u++,task:m.task,name:m.name,enqueuedTime:m.executedAt?m.executedAt-m.enqueuedAt:g-m.enqueuedAt,executionTime:m.executedAt?g-m.executedAt:0}))}async execute(g){if(w.debug(`execute() [name:${g.name}]`),g.executedAt)throw new Error("task already being executed");g.executedAt=Date.now();try{const u=await g.task();g.resolve(u)}catch(u){g.reject(u)}}};return ot.AwaitQueue=p,ot}var Ps;function Dn(){return Ps||(Ps=1,function(h){Object.defineProperty(h,"__esModule",{value:!0}),h.AwaitQueueRemovedTaskError=h.AwaitQueueStoppedError=h.AwaitQueue=void 0;var P=Tn();Object.defineProperty(h,"AwaitQueue",{enumerable:!0,get:function(){return P.AwaitQueue}});var w=ji();Object.defineProperty(h,"AwaitQueueStoppedError",{enumerable:!0,get:function(){return w.AwaitQueueStoppedError}}),Object.defineProperty(h,"AwaitQueueRemovedTaskError",{enumerable:!0,get:function(){return w.AwaitQueueRemovedTaskError}})}(Lr)),Lr}var dt={},ks;function Ni(){if(ks)return dt;ks=1,Object.defineProperty(dt,"__esModule",{value:!0}),dt.Producer=void 0;const h=Y(),P=Te(),w=se(),p=new h.Logger("Producer");let y=class extends P.EnhancedEventEmitter{constructor({id:m,localId:R,rtpSender:S,track:_,rtpParameters:o,stopTracks:v,disableTrackOnPause:T,zeroRtpOnPause:D,appData:n}){super();k(this,"_id");k(this,"_localId");k(this,"_closed",!1);k(this,"_rtpSender");k(this,"_track");k(this,"_kind");k(this,"_rtpParameters");k(this,"_paused");k(this,"_maxSpatialLayer");k(this,"_stopTracks");k(this,"_disableTrackOnPause");k(this,"_zeroRtpOnPause");k(this,"_appData");k(this,"_observer",new P.EnhancedEventEmitter);p.debug("constructor()"),this._id=m,this._localId=R,this._rtpSender=S,this._track=_,this._kind=_.kind,this._rtpParameters=o,this._paused=T?!_.enabled:!1,this._maxSpatialLayer=void 0,this._stopTracks=v,this._disableTrackOnPause=T,this._zeroRtpOnPause=D,this._appData=n??{},this.onTrackEnded=this.onTrackEnded.bind(this),this.handleTrack()}get id(){return this._id}get localId(){return this._localId}get closed(){return this._closed}get kind(){return this._kind}get rtpSender(){return this._rtpSender}get track(){return this._track}get rtpParameters(){return this._rtpParameters}get paused(){return this._paused}get maxSpatialLayer(){return this._maxSpatialLayer}get appData(){return this._appData}set appData(m){this._appData=m}get observer(){return this._observer}close(){this._closed||(p.debug("close()"),this._closed=!0,this.destroyTrack(),this.emit("@close"),this._observer.safeEmit("close"))}transportClosed(){this._closed||(p.debug("transportClosed()"),this._closed=!0,this.destroyTrack(),this.safeEmit("transportclose"),this._observer.safeEmit("close"))}async getStats(){if(this._closed)throw new w.InvalidStateError("closed");return new Promise((m,R)=>{this.safeEmit("@getstats",m,R)})}pause(){if(p.debug("pause()"),this._closed){p.error("pause() | Producer closed");return}this._paused=!0,this._track&&this._disableTrackOnPause&&(this._track.enabled=!1),this._zeroRtpOnPause&&new Promise((m,R)=>{this.safeEmit("@pause",m,R)}).catch(()=>{}),this._observer.safeEmit("pause")}resume(){if(p.debug("resume()"),this._closed){p.error("resume() | Producer closed");return}this._paused=!1,this._track&&this._disableTrackOnPause&&(this._track.enabled=!0),this._zeroRtpOnPause&&new Promise((m,R)=>{this.safeEmit("@resume",m,R)}).catch(()=>{}),this._observer.safeEmit("resume")}async replaceTrack({track:m}){if(p.debug("replaceTrack() [track:%o]",m),this._closed){if(m&&this._stopTracks)try{m.stop()}catch{}throw new w.InvalidStateError("closed")}else if(m&&m.readyState==="ended")throw new w.InvalidStateError("track ended");if(m===this._track){p.debug("replaceTrack() | same track, ignored");return}await new Promise((R,S)=>{this.safeEmit("@replacetrack",m,R,S)}),this.destroyTrack(),this._track=m,this._track&&this._disableTrackOnPause&&(this._paused?this._paused&&(this._track.enabled=!1):this._track.enabled=!0),this.handleTrack()}async setMaxSpatialLayer(m){if(this._closed)throw new w.InvalidStateError("closed");if(this._kind!=="video")throw new w.UnsupportedError("not a video Producer");if(typeof m!="number")throw new TypeError("invalid spatialLayer");m!==this._maxSpatialLayer&&(await new Promise((R,S)=>{this.safeEmit("@setmaxspatiallayer",m,R,S)}).catch(()=>{}),this._maxSpatialLayer=m)}async setRtpEncodingParameters(m){if(this._closed)throw new w.InvalidStateError("closed");if(typeof m!="object")throw new TypeError("invalid params");await new Promise((R,S)=>{this.safeEmit("@setrtpencodingparameters",m,R,S)})}onTrackEnded(){p.debug('track "ended" event'),this.safeEmit("trackended"),this._observer.safeEmit("trackended")}handleTrack(){this._track&&this._track.addEventListener("ended",this.onTrackEnded)}destroyTrack(){if(this._track)try{this._track.removeEventListener("ended",this.onTrackEnded),this._stopTracks&&this._track.stop()}catch{}}};return dt.Producer=y,dt}var pt={},Es;function Fi(){if(Es)return pt;Es=1,Object.defineProperty(pt,"__esModule",{value:!0}),pt.Consumer=void 0;const h=Y(),P=Te(),w=se(),p=new h.Logger("Consumer");let y=class extends P.EnhancedEventEmitter{constructor({id:m,localId:R,producerId:S,rtpReceiver:_,track:o,rtpParameters:v,appData:T}){super();k(this,"_id");k(this,"_localId");k(this,"_producerId");k(this,"_closed",!1);k(this,"_rtpReceiver");k(this,"_track");k(this,"_rtpParameters");k(this,"_paused");k(this,"_appData");k(this,"_observer",new P.EnhancedEventEmitter);p.debug("constructor()"),this._id=m,this._localId=R,this._producerId=S,this._rtpReceiver=_,this._track=o,this._rtpParameters=v,this._paused=!o.enabled,this._appData=T??{},this.onTrackEnded=this.onTrackEnded.bind(this),this.handleTrack()}get id(){return this._id}get localId(){return this._localId}get producerId(){return this._producerId}get closed(){return this._closed}get kind(){return this._track.kind}get rtpReceiver(){return this._rtpReceiver}get track(){return this._track}get rtpParameters(){return this._rtpParameters}get paused(){return this._paused}get appData(){return this._appData}set appData(m){this._appData=m}get observer(){return this._observer}close(){this._closed||(p.debug("close()"),this._closed=!0,this.destroyTrack(),this.emit("@close"),this._observer.safeEmit("close"))}transportClosed(){this._closed||(p.debug("transportClosed()"),this._closed=!0,this.destroyTrack(),this.safeEmit("transportclose"),this._observer.safeEmit("close"))}async getStats(){if(this._closed)throw new w.InvalidStateError("closed");return new Promise((m,R)=>{this.safeEmit("@getstats",m,R)})}pause(){if(p.debug("pause()"),this._closed){p.error("pause() | Consumer closed");return}if(this._paused){p.debug("pause() | Consumer is already paused");return}this._paused=!0,this._track.enabled=!1,this.emit("@pause"),this._observer.safeEmit("pause")}resume(){if(p.debug("resume()"),this._closed){p.error("resume() | Consumer closed");return}if(!this._paused){p.debug("resume() | Consumer is already resumed");return}this._paused=!1,this._track.enabled=!0,this.emit("@resume"),this._observer.safeEmit("resume")}onTrackEnded(){p.debug('track "ended" event'),this.safeEmit("trackended"),this._observer.safeEmit("trackended")}handleTrack(){this._track.addEventListener("ended",this.onTrackEnded)}destroyTrack(){try{this._track.removeEventListener("ended",this.onTrackEnded),this._track.stop()}catch{}}};return pt.Consumer=y,pt}var lt={},xs;function Ui(){if(xs)return lt;xs=1,Object.defineProperty(lt,"__esModule",{value:!0}),lt.DataProducer=void 0;const h=Y(),P=Te(),w=se(),p=new h.Logger("DataProducer");let y=class extends P.EnhancedEventEmitter{constructor({id:m,dataChannel:R,sctpStreamParameters:S,appData:_}){super();k(this,"_id");k(this,"_dataChannel");k(this,"_closed",!1);k(this,"_sctpStreamParameters");k(this,"_appData");k(this,"_observer",new P.EnhancedEventEmitter);p.debug("constructor()"),this._id=m,this._dataChannel=R,this._sctpStreamParameters=S,this._appData=_??{},this.handleDataChannel()}get id(){return this._id}get closed(){return this._closed}get sctpStreamParameters(){return this._sctpStreamParameters}get readyState(){return this._dataChannel.readyState}get label(){return this._dataChannel.label}get protocol(){return this._dataChannel.protocol}get bufferedAmount(){return this._dataChannel.bufferedAmount}get bufferedAmountLowThreshold(){return this._dataChannel.bufferedAmountLowThreshold}set bufferedAmountLowThreshold(m){this._dataChannel.bufferedAmountLowThreshold=m}get appData(){return this._appData}set appData(m){this._appData=m}get observer(){return this._observer}close(){this._closed||(p.debug("close()"),this._closed=!0,this._dataChannel.close(),this.emit("@close"),this._observer.safeEmit("close"))}transportClosed(){this._closed||(p.debug("transportClosed()"),this._closed=!0,this._dataChannel.close(),this.safeEmit("transportclose"),this._observer.safeEmit("close"))}send(m){if(p.debug("send()"),this._closed)throw new w.InvalidStateError("closed");this._dataChannel.send(m)}handleDataChannel(){this._dataChannel.addEventListener("open",()=>{this._closed||(p.debug('DataChannel "open" event'),this.safeEmit("open"))}),this._dataChannel.addEventListener("error",m=>{if(this._closed)return;let{error:R}=m;R||(R=new Error("unknown DataChannel error")),R.errorDetail==="sctp-failure"?p.error("DataChannel SCTP error [sctpCauseCode:%s]: %s",R.sctpCauseCode,R.message):p.error('DataChannel "error" event: %o',R),this.safeEmit("error",R)}),this._dataChannel.addEventListener("close",()=>{this._closed||(p.warn('DataChannel "close" event'),this._closed=!0,this.emit("@close"),this.safeEmit("close"),this._observer.safeEmit("close"))}),this._dataChannel.addEventListener("message",()=>{this._closed||p.warn('DataChannel "message" event in a DataProducer, message discarded')}),this._dataChannel.addEventListener("bufferedamountlow",()=>{this._closed||this.safeEmit("bufferedamountlow")})}};return lt.DataProducer=y,lt}var ut={},Ls;function qi(){if(Ls)return ut;Ls=1,Object.defineProperty(ut,"__esModule",{value:!0}),ut.DataConsumer=void 0;const h=Y(),P=Te(),w=new h.Logger("DataConsumer");let p=class extends P.EnhancedEventEmitter{constructor({id:u,dataProducerId:m,dataChannel:R,sctpStreamParameters:S,appData:_}){super();k(this,"_id");k(this,"_dataProducerId");k(this,"_dataChannel");k(this,"_closed",!1);k(this,"_sctpStreamParameters");k(this,"_appData");k(this,"_observer",new P.EnhancedEventEmitter);w.debug("constructor()"),this._id=u,this._dataProducerId=m,this._dataChannel=R,this._sctpStreamParameters=S,this._appData=_??{},this.handleDataChannel()}get id(){return this._id}get dataProducerId(){return this._dataProducerId}get closed(){return this._closed}get sctpStreamParameters(){return this._sctpStreamParameters}get readyState(){return this._dataChannel.readyState}get label(){return this._dataChannel.label}get protocol(){return this._dataChannel.protocol}get binaryType(){return this._dataChannel.binaryType}set binaryType(u){this._dataChannel.binaryType=u}get appData(){return this._appData}set appData(u){this._appData=u}get observer(){return this._observer}close(){this._closed||(w.debug("close()"),this._closed=!0,this._dataChannel.close(),this.emit("@close"),this._observer.safeEmit("close"))}transportClosed(){this._closed||(w.debug("transportClosed()"),this._closed=!0,this._dataChannel.close(),this.safeEmit("transportclose"),this._observer.safeEmit("close"))}handleDataChannel(){this._dataChannel.addEventListener("open",()=>{this._closed||(w.debug('DataChannel "open" event'),this.safeEmit("open"))}),this._dataChannel.addEventListener("error",u=>{if(this._closed)return;let{error:m}=u;m||(m=new Error("unknown DataChannel error")),m.errorDetail==="sctp-failure"?w.error("DataChannel SCTP error [sctpCauseCode:%s]: %s",m.sctpCauseCode,m.message):w.error('DataChannel "error" event: %o',m),this.safeEmit("error",m)}),this._dataChannel.addEventListener("close",()=>{this._closed||(w.warn('DataChannel "close" event'),this._closed=!0,this.emit("@close"),this.safeEmit("close"),this._observer.safeEmit("close"))}),this._dataChannel.addEventListener("message",u=>{this._closed||this.safeEmit("message",u.data)})}};return ut.DataConsumer=p,ut}var Is;function Bi(){if(Is)return at;Is=1,Object.defineProperty(at,"__esModule",{value:!0}),at.Transport=void 0;const h=Dn(),P=Y(),w=Te(),p=se(),y=J(),g=ie(),u=Ni(),m=Fi(),R=Ui(),S=qi(),_=new P.Logger("Transport");class o{constructor(D){k(this,"consumerOptions");k(this,"promise");k(this,"resolve");k(this,"reject");this.consumerOptions=D,this.promise=new Promise((n,i)=>{this.resolve=n,this.reject=i})}}let v=class extends w.EnhancedEventEmitter{constructor({direction:n,id:i,iceParameters:e,iceCandidates:t,dtlsParameters:r,sctpParameters:s,iceServers:a,iceTransportPolicy:d,additionalSettings:c,proprietaryConstraints:f,appData:l,handlerFactory:b,extendedRtpCapabilities:E,canProduceByKind:x}){super();k(this,"_id");k(this,"_closed",!1);k(this,"_direction");k(this,"_extendedRtpCapabilities");k(this,"_canProduceByKind");k(this,"_maxSctpMessageSize");k(this,"_handler");k(this,"_iceGatheringState","new");k(this,"_connectionState","new");k(this,"_appData");k(this,"_producers",new Map);k(this,"_consumers",new Map);k(this,"_dataProducers",new Map);k(this,"_dataConsumers",new Map);k(this,"_probatorConsumerCreated",!1);k(this,"_awaitQueue",new h.AwaitQueue);k(this,"_pendingConsumerTasks",[]);k(this,"_consumerCreationInProgress",!1);k(this,"_pendingPauseConsumers",new Map);k(this,"_consumerPauseInProgress",!1);k(this,"_pendingResumeConsumers",new Map);k(this,"_consumerResumeInProgress",!1);k(this,"_pendingCloseConsumers",new Map);k(this,"_consumerCloseInProgress",!1);k(this,"_observer",new w.EnhancedEventEmitter);_.debug("constructor() [id:%s, direction:%s]",i,n),this._id=i,this._direction=n,this._extendedRtpCapabilities=E,this._canProduceByKind=x,this._maxSctpMessageSize=s?s.maxMessageSize:null;const C=y.clone(c)??{};delete C.iceServers,delete C.iceTransportPolicy,delete C.bundlePolicy,delete C.rtcpMuxPolicy,delete C.sdpSemantics,this._handler=b(),this._handler.run({direction:n,iceParameters:e,iceCandidates:t,dtlsParameters:r,sctpParameters:s,iceServers:a,iceTransportPolicy:d,additionalSettings:C,proprietaryConstraints:f,extendedRtpCapabilities:E}),this._appData=l??{},this.handleHandler()}get id(){return this._id}get closed(){return this._closed}get direction(){return this._direction}get handler(){return this._handler}get iceGatheringState(){return this._iceGatheringState}get connectionState(){return this._connectionState}get appData(){return this._appData}set appData(n){this._appData=n}get observer(){return this._observer}close(){if(!this._closed){_.debug("close()"),this._closed=!0,this._awaitQueue.stop(),this._handler.close(),this._connectionState="closed";for(const n of this._producers.values())n.transportClosed();this._producers.clear();for(const n of this._consumers.values())n.transportClosed();this._consumers.clear();for(const n of this._dataProducers.values())n.transportClosed();this._dataProducers.clear();for(const n of this._dataConsumers.values())n.transportClosed();this._dataConsumers.clear(),this._observer.safeEmit("close")}}async getStats(){if(this._closed)throw new p.InvalidStateError("closed");return this._handler.getTransportStats()}async restartIce({iceParameters:n}){if(_.debug("restartIce()"),this._closed)throw new p.InvalidStateError("closed");if(!n)throw new TypeError("missing iceParameters");return this._awaitQueue.push(async()=>await this._handler.restartIce(n),"transport.restartIce()")}async updateIceServers({iceServers:n}={}){if(_.debug("updateIceServers()"),this._closed)throw new p.InvalidStateError("closed");if(!Array.isArray(n))throw new TypeError("missing iceServers");return this._awaitQueue.push(async()=>this._handler.updateIceServers(n),"transport.updateIceServers()")}async produce({track:n,encodings:i,codecOptions:e,codec:t,stopTracks:r=!0,disableTrackOnPause:s=!0,zeroRtpOnPause:a=!1,onRtpSender:d,appData:c={}}={}){if(_.debug("produce() [track:%o]",n),this._closed)throw new p.InvalidStateError("closed");if(n){if(this._direction!=="send")throw new p.UnsupportedError("not a sending Transport");if(this._canProduceByKind[n.kind]){if(n.readyState==="ended")throw new p.InvalidStateError("track ended");if(this.listenerCount("connect")===0&&this._connectionState==="new")throw new TypeError('no "connect" listener set into this transport');if(this.listenerCount("produce")===0)throw new TypeError('no "produce" listener set into this transport');if(c&&typeof c!="object")throw new TypeError("if given, appData must be an object")}else throw new p.UnsupportedError(`cannot produce ${n.kind}`)}else throw new TypeError("missing track");return this._awaitQueue.push(async()=>{let f;if(i&&!Array.isArray(i))throw TypeError("encodings must be an array");i&&i.length===0?f=void 0:i&&(f=i.map(x=>{const C={active:!0};return x.active===!1&&(C.active=!1),typeof x.dtx=="boolean"&&(C.dtx=x.dtx),typeof x.scalabilityMode=="string"&&(C.scalabilityMode=x.scalabilityMode),typeof x.scaleResolutionDownBy=="number"&&(C.scaleResolutionDownBy=x.scaleResolutionDownBy),typeof x.maxBitrate=="number"&&(C.maxBitrate=x.maxBitrate),typeof x.maxFramerate=="number"&&(C.maxFramerate=x.maxFramerate),typeof x.adaptivePtime=="boolean"&&(C.adaptivePtime=x.adaptivePtime),typeof x.priority=="string"&&(C.priority=x.priority),typeof x.networkPriority=="string"&&(C.networkPriority=x.networkPriority),C}));const{localId:l,rtpParameters:b,rtpSender:E}=await this._handler.send({track:n,encodings:f,codecOptions:e,codec:t,onRtpSender:d});try{g.validateRtpParameters(b);const{id:x}=await new Promise((L,M)=>{this.safeEmit("produce",{kind:n.kind,rtpParameters:b,appData:c},L,M)}),C=new u.Producer({id:x,localId:l,rtpSender:E,track:n,rtpParameters:b,stopTracks:r,disableTrackOnPause:s,zeroRtpOnPause:a,appData:c});return this._producers.set(C.id,C),this.handleProducer(C),this._observer.safeEmit("newproducer",C),C}catch(x){throw this._handler.stopSending(l).catch(()=>{}),x}},"transport.produce()").catch(f=>{if(r)try{n.stop()}catch{}throw f})}async consume({id:n,producerId:i,kind:e,rtpParameters:t,streamId:r,onRtpReceiver:s,appData:a={}}){if(_.debug("consume()"),this._closed)throw new p.InvalidStateError("closed");if(this._direction!=="recv")throw new p.UnsupportedError("not a receiving Transport");if(typeof n!="string")throw new TypeError("missing id");if(typeof i!="string")throw new TypeError("missing producerId");if(e!=="audio"&&e!=="video")throw new TypeError(`invalid kind '${e}'`);if(this.listenerCount("connect")===0&&this._connectionState==="new")throw new TypeError('no "connect" listener set into this transport');if(a&&typeof a!="object")throw new TypeError("if given, appData must be an object");const d=y.clone(t);if(!g.canReceive(d,this._extendedRtpCapabilities))throw new p.UnsupportedError("cannot consume this Producer");const f=new o({id:n,producerId:i,kind:e,rtpParameters:d,streamId:r,onRtpReceiver:s,appData:a});return this._pendingConsumerTasks.push(f),queueMicrotask(()=>{this._closed||this._consumerCreationInProgress===!1&&this.createPendingConsumers()}),f.promise}async produceData({ordered:n=!0,maxPacketLifeTime:i,maxRetransmits:e,label:t="",protocol:r="",appData:s={}}={}){if(_.debug("produceData()"),this._closed)throw new p.InvalidStateError("closed");if(this._direction!=="send")throw new p.UnsupportedError("not a sending Transport");if(this._maxSctpMessageSize){if(this.listenerCount("connect")===0&&this._connectionState==="new")throw new TypeError('no "connect" listener set into this transport');if(this.listenerCount("producedata")===0)throw new TypeError('no "producedata" listener set into this transport');if(s&&typeof s!="object")throw new TypeError("if given, appData must be an object")}else throw new p.UnsupportedError("SCTP not enabled by remote Transport");return(i||e)&&(n=!1),this._awaitQueue.push(async()=>{const{dataChannel:a,sctpStreamParameters:d}=await this._handler.sendDataChannel({ordered:n,maxPacketLifeTime:i,maxRetransmits:e,label:t,protocol:r});g.validateSctpStreamParameters(d);const{id:c}=await new Promise((l,b)=>{this.safeEmit("producedata",{sctpStreamParameters:d,label:t,protocol:r,appData:s},l,b)}),f=new R.DataProducer({id:c,dataChannel:a,sctpStreamParameters:d,appData:s});return this._dataProducers.set(f.id,f),this.handleDataProducer(f),this._observer.safeEmit("newdataproducer",f),f},"transport.produceData()")}async consumeData({id:n,dataProducerId:i,sctpStreamParameters:e,label:t="",protocol:r="",appData:s={}}){if(_.debug("consumeData()"),this._closed)throw new p.InvalidStateError("closed");if(this._direction!=="recv")throw new p.UnsupportedError("not a receiving Transport");if(this._maxSctpMessageSize){if(typeof n!="string")throw new TypeError("missing id");if(typeof i!="string")throw new TypeError("missing dataProducerId");if(this.listenerCount("connect")===0&&this._connectionState==="new")throw new TypeError('no "connect" listener set into this transport');if(s&&typeof s!="object")throw new TypeError("if given, appData must be an object")}else throw new p.UnsupportedError("SCTP not enabled by remote Transport");const a=y.clone(e);return g.validateSctpStreamParameters(a),this._awaitQueue.push(async()=>{const{dataChannel:d}=await this._handler.receiveDataChannel({sctpStreamParameters:a,label:t,protocol:r}),c=new S.DataConsumer({id:n,dataProducerId:i,dataChannel:d,sctpStreamParameters:a,appData:s});return this._dataConsumers.set(c.id,c),this.handleDataConsumer(c),this._observer.safeEmit("newdataconsumer",c),c},"transport.consumeData()")}createPendingConsumers(){this._consumerCreationInProgress=!0,this._awaitQueue.push(async()=>{if(this._pendingConsumerTasks.length===0){_.debug("createPendingConsumers() | there is no Consumer to be created");return}const n=[...this._pendingConsumerTasks];this._pendingConsumerTasks=[];let i;const e=[];for(const t of n){const{id:r,kind:s,rtpParameters:a,streamId:d,onRtpReceiver:c}=t.consumerOptions;e.push({trackId:r,kind:s,rtpParameters:a,streamId:d,onRtpReceiver:c})}try{const t=await this._handler.receive(e);for(let r=0;r<t.length;++r){const s=n[r],a=t[r],{id:d,producerId:c,kind:f,rtpParameters:l,appData:b}=s.consumerOptions,{localId:E,rtpReceiver:x,track:C}=a,L=new m.Consumer({id:d,localId:E,producerId:c,rtpReceiver:x,track:C,rtpParameters:l,appData:b});this._consumers.set(L.id,L),this.handleConsumer(L),!this._probatorConsumerCreated&&!i&&f==="video"&&(i=L),this._observer.safeEmit("newconsumer",L),s.resolve(L)}}catch(t){for(const r of n)r.reject(t)}if(i)try{const t=g.generateProbatorRtpParameters(i.rtpParameters);await this._handler.receive([{trackId:"probator",kind:"video",rtpParameters:t}]),_.debug("createPendingConsumers() | Consumer for RTP probation created"),this._probatorConsumerCreated=!0}catch(t){_.error("createPendingConsumers() | failed to create Consumer for RTP probation:%o",t)}},"transport.createPendingConsumers()").then(()=>{this._consumerCreationInProgress=!1,this._pendingConsumerTasks.length>0&&this.createPendingConsumers()}).catch(()=>{})}pausePendingConsumers(){this._consumerPauseInProgress=!0,this._awaitQueue.push(async()=>{if(this._pendingPauseConsumers.size===0){_.debug("pausePendingConsumers() | there is no Consumer to be paused");return}const n=Array.from(this._pendingPauseConsumers.values());this._pendingPauseConsumers.clear();try{const i=n.map(e=>e.localId);await this._handler.pauseReceiving(i)}catch(i){_.error("pausePendingConsumers() | failed to pause Consumers:",i)}},"transport.pausePendingConsumers").then(()=>{this._consumerPauseInProgress=!1,this._pendingPauseConsumers.size>0&&this.pausePendingConsumers()}).catch(()=>{})}resumePendingConsumers(){this._consumerResumeInProgress=!0,this._awaitQueue.push(async()=>{if(this._pendingResumeConsumers.size===0){_.debug("resumePendingConsumers() | there is no Consumer to be resumed");return}const n=Array.from(this._pendingResumeConsumers.values());this._pendingResumeConsumers.clear();try{const i=n.map(e=>e.localId);await this._handler.resumeReceiving(i)}catch(i){_.error("resumePendingConsumers() | failed to resume Consumers:",i)}},"transport.resumePendingConsumers").then(()=>{this._consumerResumeInProgress=!1,this._pendingResumeConsumers.size>0&&this.resumePendingConsumers()}).catch(()=>{})}closePendingConsumers(){this._consumerCloseInProgress=!0,this._awaitQueue.push(async()=>{if(this._pendingCloseConsumers.size===0){_.debug("closePendingConsumers() | there is no Consumer to be closed");return}const n=Array.from(this._pendingCloseConsumers.values());this._pendingCloseConsumers.clear();try{await this._handler.stopReceiving(n.map(i=>i.localId))}catch(i){_.error("closePendingConsumers() | failed to close Consumers:",i)}},"transport.closePendingConsumers").then(()=>{this._consumerCloseInProgress=!1,this._pendingCloseConsumers.size>0&&this.closePendingConsumers()}).catch(()=>{})}handleHandler(){const n=this._handler;n.on("@connect",({dtlsParameters:i},e,t)=>{if(this._closed){t(new p.InvalidStateError("closed"));return}this.safeEmit("connect",{dtlsParameters:i},e,t)}),n.on("@icegatheringstatechange",i=>{i!==this._iceGatheringState&&(_.debug("ICE gathering state changed to %s",i),this._iceGatheringState=i,this._closed||this.safeEmit("icegatheringstatechange",i))}),n.on("@icecandidateerror",i=>{_.warn(`ICE candidate error [url:${i.url}, localAddress:${i.address}, localPort:${i.port}]: ${i.errorCode} "${i.errorText}"`),this.safeEmit("icecandidateerror",i)}),n.on("@connectionstatechange",i=>{i!==this._connectionState&&(_.debug("connection state changed to %s",i),this._connectionState=i,this._closed||this.safeEmit("connectionstatechange",i))})}handleProducer(n){n.on("@close",()=>{this._producers.delete(n.id),!this._closed&&this._awaitQueue.push(async()=>await this._handler.stopSending(n.localId),"producer @close event").catch(i=>_.warn("producer.close() failed:%o",i))}),n.on("@pause",(i,e)=>{this._awaitQueue.push(async()=>await this._handler.pauseSending(n.localId),"producer @pause event").then(i).catch(e)}),n.on("@resume",(i,e)=>{this._awaitQueue.push(async()=>await this._handler.resumeSending(n.localId),"producer @resume event").then(i).catch(e)}),n.on("@replacetrack",(i,e,t)=>{this._awaitQueue.push(async()=>await this._handler.replaceTrack(n.localId,i),"producer @replacetrack event").then(e).catch(t)}),n.on("@setmaxspatiallayer",(i,e,t)=>{this._awaitQueue.push(async()=>await this._handler.setMaxSpatialLayer(n.localId,i),"producer @setmaxspatiallayer event").then(e).catch(t)}),n.on("@setrtpencodingparameters",(i,e,t)=>{this._awaitQueue.push(async()=>await this._handler.setRtpEncodingParameters(n.localId,i),"producer @setrtpencodingparameters event").then(e).catch(t)}),n.on("@getstats",(i,e)=>{if(this._closed)return e(new p.InvalidStateError("closed"));this._handler.getSenderStats(n.localId).then(i).catch(e)})}handleConsumer(n){n.on("@close",()=>{this._consumers.delete(n.id),this._pendingPauseConsumers.delete(n.id),this._pendingResumeConsumers.delete(n.id),!this._closed&&(this._pendingCloseConsumers.set(n.id,n),this._consumerCloseInProgress===!1&&this.closePendingConsumers())}),n.on("@pause",()=>{this._pendingResumeConsumers.has(n.id)&&this._pendingResumeConsumers.delete(n.id),this._pendingPauseConsumers.set(n.id,n),queueMicrotask(()=>{this._closed||this._consumerPauseInProgress===!1&&this.pausePendingConsumers()})}),n.on("@resume",()=>{this._pendingPauseConsumers.has(n.id)&&this._pendingPauseConsumers.delete(n.id),this._pendingResumeConsumers.set(n.id,n),queueMicrotask(()=>{this._closed||this._consumerResumeInProgress===!1&&this.resumePendingConsumers()})}),n.on("@getstats",(i,e)=>{if(this._closed)return e(new p.InvalidStateError("closed"));this._handler.getReceiverStats(n.localId).then(i).catch(e)})}handleDataProducer(n){n.on("@close",()=>{this._dataProducers.delete(n.id)})}handleDataConsumer(n){n.on("@close",()=>{this._dataConsumers.delete(n.id)})}};return at.Transport=v,at}var ht={},he={},Ir={},Mr={exports:{}},Ms;function zr(){if(Ms)return Mr.exports;Ms=1;var h=Mr.exports={v:[{name:"version",reg:/^(\d*)$/}],o:[{name:"origin",reg:/^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,names:["username","sessionId","sessionVersion","netType","ipVer","address"],format:"%s %s %d %s IP%d %s"}],s:[{name:"name"}],i:[{name:"description"}],u:[{name:"uri"}],e:[{name:"email"}],p:[{name:"phone"}],z:[{name:"timezones"}],r:[{name:"repeats"}],t:[{name:"timing",reg:/^(\d*) (\d*)/,names:["start","stop"],format:"%d %d"}],c:[{name:"connection",reg:/^IN IP(\d) (\S*)/,names:["version","ip"],format:"IN IP%d %s"}],b:[{push:"bandwidth",reg:/^(TIAS|AS|CT|RR|RS):(\d*)/,names:["type","limit"],format:"%s:%s"}],m:[{reg:/^(\w*) (\d*) ([\w/]*)(?: (.*))?/,names:["type","port","protocol","payloads"],format:"%s %d %s %s"}],a:[{push:"rtp",reg:/^rtpmap:(\d*) ([\w\-.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,names:["payload","codec","rate","encoding"],format:function(P){return P.encoding?"rtpmap:%d %s/%s/%s":P.rate?"rtpmap:%d %s/%s":"rtpmap:%d %s"}},{push:"fmtp",reg:/^fmtp:(\d*) ([\S| ]*)/,names:["payload","config"],format:"fmtp:%d %s"},{name:"control",reg:/^control:(.*)/,format:"control:%s"},{name:"rtcp",reg:/^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,names:["port","netType","ipVer","address"],format:function(P){return P.address!=null?"rtcp:%d %s IP%d %s":"rtcp:%d"}},{push:"rtcpFbTrrInt",reg:/^rtcp-fb:(\*|\d*) trr-int (\d*)/,names:["payload","value"],format:"rtcp-fb:%s trr-int %d"},{push:"rtcpFb",reg:/^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,names:["payload","type","subtype"],format:function(P){return P.subtype!=null?"rtcp-fb:%s %s %s":"rtcp-fb:%s %s"}},{push:"ext",reg:/^extmap:(\d+)(?:\/(\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\S*)(?: (\S*))?/,names:["value","direction","encrypt-uri","uri","config"],format:function(P){return"extmap:%d"+(P.direction?"/%s":"%v")+(P["encrypt-uri"]?" %s":"%v")+" %s"+(P.config?" %s":"")}},{name:"extmapAllowMixed",reg:/^(extmap-allow-mixed)/},{push:"crypto",reg:/^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,names:["id","suite","config","sessionConfig"],format:function(P){return P.sessionConfig!=null?"crypto:%d %s %s %s":"crypto:%d %s %s"}},{name:"setup",reg:/^setup:(\w*)/,format:"setup:%s"},{name:"connectionType",reg:/^connection:(new|existing)/,format:"connection:%s"},{name:"mid",reg:/^mid:([^\s]*)/,format:"mid:%s"},{name:"msid",reg:/^msid:(.*)/,format:"msid:%s"},{name:"ptime",reg:/^ptime:(\d*(?:\.\d*)*)/,format:"ptime:%d"},{name:"maxptime",reg:/^maxptime:(\d*(?:\.\d*)*)/,format:"maxptime:%d"},{name:"direction",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:"icelite",reg:/^(ice-lite)/},{name:"iceUfrag",reg:/^ice-ufrag:(\S*)/,format:"ice-ufrag:%s"},{name:"icePwd",reg:/^ice-pwd:(\S*)/,format:"ice-pwd:%s"},{name:"fingerprint",reg:/^fingerprint:(\S*) (\S*)/,names:["type","hash"],format:"fingerprint:%s %s"},{push:"candidates",reg:/^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,names:["foundation","component","transport","priority","ip","port","type","raddr","rport","tcptype","generation","network-id","network-cost"],format:function(P){var w="candidate:%s %d %s %d %s %d typ %s";return w+=P.raddr!=null?" raddr %s rport %d":"%v%v",w+=P.tcptype!=null?" tcptype %s":"%v",P.generation!=null&&(w+=" generation %d"),w+=P["network-id"]!=null?" network-id %d":"%v",w+=P["network-cost"]!=null?" network-cost %d":"%v",w}},{name:"endOfCandidates",reg:/^(end-of-candidates)/},{name:"remoteCandidates",reg:/^remote-candidates:(.*)/,format:"remote-candidates:%s"},{name:"iceOptions",reg:/^ice-options:(\S*)/,format:"ice-options:%s"},{push:"ssrcs",reg:/^ssrc:(\d*) ([\w_-]*)(?::(.*))?/,names:["id","attribute","value"],format:function(P){var w="ssrc:%d";return P.attribute!=null&&(w+=" %s",P.value!=null&&(w+=":%s")),w}},{push:"ssrcGroups",reg:/^ssrc-group:([\x21\x23\x24\x25\x26\x27\x2A\x2B\x2D\x2E\w]*) (.*)/,names:["semantics","ssrcs"],format:"ssrc-group:%s %s"},{name:"msidSemantic",reg:/^msid-semantic:\s?(\w*) (\S*)/,names:["semantic","token"],format:"msid-semantic: %s %s"},{push:"groups",reg:/^group:(\w*) (.*)/,names:["type","mids"],format:"group:%s %s"},{name:"rtcpMux",reg:/^(rtcp-mux)/},{name:"rtcpRsize",reg:/^(rtcp-rsize)/},{name:"sctpmap",reg:/^sctpmap:([\w_/]*) (\S*)(?: (\S*))?/,names:["sctpmapNumber","app","maxMessageSize"],format:function(P){return P.maxMessageSize!=null?"sctpmap:%s %s %s":"sctpmap:%s %s"}},{name:"xGoogleFlag",reg:/^x-google-flag:([^\s]*)/,format:"x-google-flag:%s"},{push:"rids",reg:/^rid:([\d\w]+) (\w+)(?: ([\S| ]*))?/,names:["id","direction","params"],format:function(P){return P.params?"rid:%s %s %s":"rid:%s %s"}},{push:"imageattrs",reg:new RegExp("^imageattr:(\\d+|\\*)[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?"),names:["pt","dir1","attrs1","dir2","attrs2"],format:function(P){return"imageattr:%s %s %s"+(P.dir2?" %s %s":"")}},{name:"simulcast",reg:new RegExp("^simulcast:(send|recv) ([a-zA-Z0-9\\-_~;,]+)(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?$"),names:["dir1","list1","dir2","list2"],format:function(P){return"simulcast:%s %s"+(P.dir2?" %s %s":"")}},{name:"simulcast_03",reg:/^simulcast:[\s\t]+([\S+\s\t]+)$/,names:["value"],format:"simulcast: %s"},{name:"framerate",reg:/^framerate:(\d+(?:$|\.\d+))/,format:"framerate:%s"},{name:"sourceFilter",reg:/^source-filter: *(excl|incl) (\S*) (IP4|IP6|\*) (\S*) (.*)/,names:["filterMode","netType","addressTypes","destAddress","srcList"],format:"source-filter: %s %s %s %s %s"},{name:"bundleOnly",reg:/^(bundle-only)/},{name:"label",reg:/^label:(.+)/,format:"label:%s"},{name:"sctpPort",reg:/^sctp-port:(\d+)$/,format:"sctp-port:%s"},{name:"maxMessageSize",reg:/^max-message-size:(\d+)$/,format:"max-message-size:%s"},{push:"tsRefClocks",reg:/^ts-refclk:([^\s=]*)(?:=(\S*))?/,names:["clksrc","clksrcExt"],format:function(P){return"ts-refclk:%s"+(P.clksrcExt!=null?"=%s":"")}},{name:"mediaClk",reg:/^mediaclk:(?:id=(\S*))? *([^\s=]*)(?:=(\S*))?(?: *rate=(\d+)\/(\d+))?/,names:["id","mediaClockName","mediaClockValue","rateNumerator","rateDenominator"],format:function(P){var w="mediaclk:";return w+=P.id!=null?"id=%s %s":"%v%s",w+=P.mediaClockValue!=null?"=%s":"",w+=P.rateNumerator!=null?" rate=%s":"",w+=P.rateDenominator!=null?"/%s":"",w}},{name:"keywords",reg:/^keywds:(.+)$/,format:"keywds:%s"},{name:"content",reg:/^content:(.+)/,format:"content:%s"},{name:"bfcpFloorCtrl",reg:/^floorctrl:(c-only|s-only|c-s)/,format:"floorctrl:%s"},{name:"bfcpConfId",reg:/^confid:(\d+)/,format:"confid:%s"},{name:"bfcpUserId",reg:/^userid:(\d+)/,format:"userid:%s"},{name:"bfcpFloorId",reg:/^floorid:(.+) (?:m-stream|mstrm):(.+)/,names:["id","mStream"],format:"floorid:%s mstrm:%s"},{push:"invalid",names:["value"]}]};return Object.keys(h).forEach(function(P){var w=h[P];w.forEach(function(p){p.reg||(p.reg=/(.*)/),p.format||(p.format="%s")})}),Mr.exports}var Os;function Pn(){return Os||(Os=1,function(h){var P=function(m){return String(Number(m))===m?Number(m):m},w=function(m,R,S,_){if(_&&!S)R[_]=P(m[1]);else for(var o=0;o<S.length;o+=1)m[o+1]!=null&&(R[S[o]]=P(m[o+1]))},p=function(m,R,S){var _=m.name&&m.names;m.push&&!R[m.push]?R[m.push]=[]:_&&!R[m.name]&&(R[m.name]={});var o=m.push?{}:_?R[m.name]:R;w(S.match(m.reg),o,m.names,m.name),m.push&&R[m.push].push(o)},y=zr(),g=RegExp.prototype.test.bind(/^([a-z])=(.*)/);h.parse=function(m){var R={},S=[],_=R;return m.split(/(\r\n|\r|\n)/).filter(g).forEach(function(o){var v=o[0],T=o.slice(2);v==="m"&&(S.push({rtp:[],fmtp:[]}),_=S[S.length-1]);for(var D=0;D<(y[v]||[]).length;D+=1){var n=y[v][D];if(n.reg.test(T))return p(n,_,T)}}),R.media=S,R};var u=function(m,R){var S=R.split(/=(.+)/,2);return S.length===2?m[S[0]]=P(S[1]):S.length===1&&R.length>1&&(m[S[0]]=void 0),m};h.parseParams=function(m){return m.split(/;\s?/).reduce(u,{})},h.parseFmtpConfig=h.parseParams,h.parsePayloads=function(m){return m.toString().split(" ").map(Number)},h.parseRemoteCandidates=function(m){for(var R=[],S=m.split(" ").map(P),_=0;_<S.length;_+=3)R.push({component:S[_],ip:S[_+1],port:S[_+2]});return R},h.parseImageAttributes=function(m){return m.split(" ").map(function(R){return R.substring(1,R.length-1).split(",").reduce(u,{})})},h.parseSimulcastStreamList=function(m){return m.split(";").map(function(R){return R.split(",").map(function(S){var _,o=!1;return S[0]!=="~"?_=P(S):(_=P(S.substring(1,S.length)),o=!0),{scid:_,paused:o}})})}}(Ir)),Ir}var Or,As;function kn(){if(As)return Or;As=1;var h=zr(),P=/%[sdv%]/g,w=function(u){var m=1,R=arguments,S=R.length;return u.replace(P,function(_){if(m>=S)return _;var o=R[m];switch(m+=1,_){case"%%":return"%";case"%s":return String(o);case"%d":return Number(o);case"%v":return""}})},p=function(u,m,R){var S=m.format instanceof Function?m.format(m.push?R:R[m.name]):m.format,_=[u+"="+S];if(m.names)for(var o=0;o<m.names.length;o+=1){var v=m.names[o];m.name?_.push(R[m.name][v]):_.push(R[m.names[o]])}else _.push(R[m.name]);return w.apply(null,_)},y=["v","o","s","i","u","e","p","c","b","t","r","z","a"],g=["i","c","b","a"];return Or=function(u,m){m=m||{},u.version==null&&(u.version=0),u.name==null&&(u.name=" "),u.media.forEach(function(o){o.payloads==null&&(o.payloads="")});var R=m.outerOrder||y,S=m.innerOrder||g,_=[];return R.forEach(function(o){h[o].forEach(function(v){v.name in u&&u[v.name]!=null?_.push(p(o,v,u)):v.push in u&&u[v.push]!=null&&u[v.push].forEach(function(T){_.push(p(o,v,T))})})}),u.media.forEach(function(o){_.push(p("m",h.m[0],o)),S.forEach(function(v){h[v].forEach(function(T){T.name in o&&o[T.name]!=null?_.push(p(v,T,o)):T.push in o&&o[T.push]!=null&&o[T.push].forEach(function(D){_.push(p(v,T,D))})})})}),_.join(`\r
`)+`\r
`},Or}var js;function ce(){if(js)return he;js=1;var h=Pn(),P=kn(),w=zr();return he.grammar=w,he.write=P,he.parse=h.parse,he.parseParams=h.parseParams,he.parseFmtpConfig=h.parseFmtpConfig,he.parsePayloads=h.parsePayloads,he.parseRemoteCandidates=h.parseRemoteCandidates,he.parseImageAttributes=h.parseImageAttributes,he.parseSimulcastStreamList=h.parseSimulcastStreamList,he}var Oe={},Ns;function fe(){if(Ns)return Oe;Ns=1,Object.defineProperty(Oe,"__esModule",{value:!0}),Oe.extractRtpCapabilities=P,Oe.extractDtlsParameters=w,Oe.getCname=p,Oe.applyCodecParameters=y;const h=ce();function P({sdpObject:g}){const u=new Map,m=[];let R=!1,S=!1;for(const o of g.media){const v=o.type;switch(v){case"audio":{if(R)continue;R=!0;break}case"video":{if(S)continue;S=!0;break}default:continue}for(const T of o.rtp){const D={kind:v,mimeType:`${v}/${T.codec}`,preferredPayloadType:T.payload,clockRate:T.rate,channels:T.encoding,parameters:{},rtcpFeedback:[]};u.set(D.preferredPayloadType,D)}for(const T of o.fmtp??[]){const D=h.parseParams(T.config),n=u.get(T.payload);n&&(D!=null&&D.hasOwnProperty("profile-level-id")&&(D["profile-level-id"]=String(D["profile-level-id"])),n.parameters=D)}for(const T of o.rtcpFb??[]){const D={type:T.type,parameter:T.subtype};if(D.parameter||delete D.parameter,T.payload!=="*"){const n=u.get(T.payload);if(!n)continue;n.rtcpFeedback.push(D)}else for(const n of u.values())n.kind===v&&!/.+\/rtx$/i.test(n.mimeType)&&n.rtcpFeedback.push(D)}for(const T of o.ext??[]){if(T["encrypt-uri"])continue;const D={kind:v,uri:T.uri,preferredId:T.value};m.push(D)}}return{codecs:Array.from(u.values()),headerExtensions:m}}function w({sdpObject:g}){let u=g.setup,m=g.fingerprint;if(!u||!m){const _=(g.media??[]).find(o=>o.port!==0);_&&(u??(u=_.setup),m??(m=_.fingerprint))}if(u){if(!m)throw new Error("no a=fingerprint found at SDP session or media level")}else throw new Error("no a=setup found at SDP session or media level");let R;switch(u){case"active":{R="client";break}case"passive":{R="server";break}case"actpass":{R="auto";break}}return{role:R,fingerprints:[{algorithm:m.type,value:m.hash}]}}function p({offerMediaObject:g}){const u=(g.ssrcs??[]).find(m=>m.attribute==="cname");return u?u.value:""}function y({offerRtpParameters:g,answerMediaObject:u}){for(const m of g.codecs){const R=m.mimeType.toLowerCase();if(R!=="audio/opus"||!(u.rtp??[]).find(v=>v.payload===m.payloadType))continue;u.fmtp=u.fmtp??[];let _=u.fmtp.find(v=>v.payload===m.payloadType);_||(_={payload:m.payloadType,config:""},u.fmtp.push(_));const o=h.parseParams(_.config);switch(R){case"audio/opus":{const v=m.parameters["sprop-stereo"];v!==void 0&&(o.stereo=Number(v)?1:0);break}}_.config="";for(const v of Object.keys(o))_.config&&(_.config+=";"),_.config+=`${v}=${o[v]}`}}return Oe}var ft={},Fs;function Ae(){if(Fs)return ft;Fs=1,Object.defineProperty(ft,"__esModule",{value:!0}),ft.getRtpEncodings=h,ft.addLegacySimulcast=P;function h({offerMediaObject:w}){const p=new Set;for(const u of w.ssrcs??[]){const m=u.id;p.add(m)}if(p.size===0)throw new Error("no a=ssrc lines found");const y=new Map;for(const u of w.ssrcGroups??[]){if(u.semantics!=="FID")continue;let[m,R]=u.ssrcs.split(/\s+/);m=Number(m),R=Number(R),p.has(m)&&(p.delete(m),p.delete(R),y.set(m,R))}for(const u of p)y.set(u,null);const g=[];for(const[u,m]of y){const R={ssrc:u};m&&(R.rtx={ssrc:m}),g.push(R)}return g}function P({offerMediaObject:w,numStreams:p}){if(p<=1)throw new TypeError("numStreams must be greater than 1");const y=(w.ssrcs??[]).find(T=>T.attribute==="msid");if(!y)throw new Error("a=ssrc line with msid information not found");const[g,u]=y.value.split(" "),m=Number(y.id);let R;(w.ssrcGroups??[]).some(T=>{if(T.semantics!=="FID")return!1;const D=T.ssrcs.split(/\s+/);return Number(D[0])===m?(R=Number(D[1]),!0):!1});const S=w.ssrcs.find(T=>T.attribute==="cname");if(!S)throw new Error("a=ssrc line with cname information not found");const _=S.value,o=[],v=[];for(let T=0;T<p;++T)o.push(m+T),R&&v.push(R+T);w.ssrcGroups=[],w.ssrcs=[],w.ssrcGroups.push({semantics:"SIM",ssrcs:o.join(" ")});for(const T of o)w.ssrcs.push({id:T,attribute:"cname",value:_}),w.ssrcs.push({id:T,attribute:"msid",value:`${g} ${u}`});for(let T=0;T<v.length;++T){const D=o[T],n=v[T];w.ssrcs.push({id:n,attribute:"cname",value:_}),w.ssrcs.push({id:n,attribute:"msid",value:`${g} ${u}`}),w.ssrcGroups.push({semantics:"FID",ssrcs:`${D} ${n}`})}}return ft}var Vt={},Us;function pr(){if(Us)return Vt;Us=1,Object.defineProperty(Vt,"__esModule",{value:!0}),Vt.addNackSupportForOpus=h;function h(P){var w;for(const p of P.codecs??[])(p.mimeType.toLowerCase()==="audio/opus"||p.mimeType.toLowerCase()==="audio/multiopus")&&!((w=p.rtcpFeedback)!=null&&w.some(y=>y.type==="nack"&&!y.parameter))&&(p.rtcpFeedback||(p.rtcpFeedback=[]),p.rtcpFeedback.push({type:"nack"}))}return Vt}var mt={},qs;function de(){if(qs)return mt;qs=1,Object.defineProperty(mt,"__esModule",{value:!0}),mt.HandlerInterface=void 0;const h=Te();let P=class extends h.EnhancedEventEmitter{constructor(){super()}};return mt.HandlerInterface=P,mt}var gt={},Se={},Bs;function En(){if(Bs)return Se;Bs=1,Object.defineProperty(Se,"__esModule",{value:!0}),Se.OfferMediaSection=Se.AnswerMediaSection=Se.MediaSection=void 0;const h=ce(),P=J();let w=class{constructor({iceParameters:m,iceCandidates:R,dtlsParameters:S,planB:_=!1}){k(this,"_mediaObject");k(this,"_planB");if(this._mediaObject={},this._planB=_,m&&this.setIceParameters(m),R){this._mediaObject.candidates=[];for(const o of R){const v={};v.component=1,v.foundation=o.foundation,v.ip=o.address??o.ip,v.port=o.port,v.priority=o.priority,v.transport=o.protocol,v.type=o.type,o.tcpType&&(v.tcptype=o.tcpType),this._mediaObject.candidates.push(v)}this._mediaObject.endOfCandidates="end-of-candidates",this._mediaObject.iceOptions="renomination"}S&&this.setDtlsRole(S.role)}get mid(){return String(this._mediaObject.mid)}get closed(){return this._mediaObject.port===0}getObject(){return this._mediaObject}setIceParameters(m){this._mediaObject.iceUfrag=m.usernameFragment,this._mediaObject.icePwd=m.password}pause(){this._mediaObject.direction="inactive"}disable(){this.pause(),delete this._mediaObject.ext,delete this._mediaObject.ssrcs,delete this._mediaObject.ssrcGroups,delete this._mediaObject.simulcast,delete this._mediaObject.simulcast_03,delete this._mediaObject.rids,delete this._mediaObject.extmapAllowMixed}close(){this.disable(),this._mediaObject.port=0}};Se.MediaSection=w;class p extends w{constructor({iceParameters:m,iceCandidates:R,dtlsParameters:S,sctpParameters:_,plainRtpParameters:o,planB:v=!1,offerMediaObject:T,offerRtpParameters:D,answerRtpParameters:n,codecOptions:i}){switch(super({iceParameters:m,iceCandidates:R,dtlsParameters:S,planB:v}),this._mediaObject.mid=String(T.mid),this._mediaObject.type=T.type,this._mediaObject.protocol=T.protocol,o?(this._mediaObject.connection={ip:o.ip,version:o.ipVersion},this._mediaObject.port=o.port):(this._mediaObject.connection={ip:"127.0.0.1",version:4},this._mediaObject.port=7),T.type){case"audio":case"video":{this._mediaObject.direction="recvonly",this._mediaObject.rtp=[],this._mediaObject.rtcpFb=[],this._mediaObject.fmtp=[];for(const e of n.codecs){const t={payload:e.payloadType,codec:g(e),rate:e.clockRate};e.channels>1&&(t.encoding=e.channels),this._mediaObject.rtp.push(t);const r=P.clone(e.parameters)??{};let s=P.clone(e.rtcpFeedback)??[];if(i){const{opusStereo:d,opusFec:c,opusDtx:f,opusMaxPlaybackRate:l,opusMaxAverageBitrate:b,opusPtime:E,opusNack:x,videoGoogleStartBitrate:C,videoGoogleMaxBitrate:L,videoGoogleMinBitrate:M}=i,I=D.codecs.find(O=>O.payloadType===e.payloadType);switch(e.mimeType.toLowerCase()){case"audio/opus":case"audio/multiopus":{d!==void 0&&(I.parameters["sprop-stereo"]=d?1:0,r.stereo=d?1:0),c!==void 0&&(I.parameters.useinbandfec=c?1:0,r.useinbandfec=c?1:0),f!==void 0&&(I.parameters.usedtx=f?1:0,r.usedtx=f?1:0),l!==void 0&&(r.maxplaybackrate=l),b!==void 0&&(r.maxaveragebitrate=b),E!==void 0&&(I.parameters.ptime=E,r.ptime=E),x||(I.rtcpFeedback=I.rtcpFeedback.filter(O=>O.type!=="nack"||O.parameter),s=s.filter(O=>O.type!=="nack"||O.parameter));break}case"video/vp8":case"video/vp9":case"video/h264":case"video/h265":{C!==void 0&&(r["x-google-start-bitrate"]=C),L!==void 0&&(r["x-google-max-bitrate"]=L),M!==void 0&&(r["x-google-min-bitrate"]=M);break}}}const a={payload:e.payloadType,config:""};for(const d of Object.keys(r))a.config&&(a.config+=";"),a.config+=`${d}=${r[d]}`;a.config&&this._mediaObject.fmtp.push(a);for(const d of s)this._mediaObject.rtcpFb.push({payload:e.payloadType,type:d.type,subtype:d.parameter})}this._mediaObject.payloads=n.codecs.map(e=>e.payloadType).join(" "),this._mediaObject.ext=[];for(const e of n.headerExtensions)(T.ext??[]).some(r=>r.uri===e.uri)&&this._mediaObject.ext.push({uri:e.uri,value:e.id});if(T.extmapAllowMixed==="extmap-allow-mixed"&&(this._mediaObject.extmapAllowMixed="extmap-allow-mixed"),T.simulcast){this._mediaObject.simulcast={dir1:"recv",list1:T.simulcast.list1},this._mediaObject.rids=[];for(const e of T.rids??[])e.direction==="send"&&this._mediaObject.rids.push({id:e.id,direction:"recv"})}else if(T.simulcast_03){this._mediaObject.simulcast_03={value:T.simulcast_03.value.replace(/send/g,"recv")},this._mediaObject.rids=[];for(const e of T.rids??[])e.direction==="send"&&this._mediaObject.rids.push({id:e.id,direction:"recv"})}this._mediaObject.rtcpMux="rtcp-mux",this._mediaObject.rtcpRsize="rtcp-rsize",this._planB&&this._mediaObject.type==="video"&&(this._mediaObject.xGoogleFlag="conference");break}case"application":{typeof T.sctpPort=="number"?(this._mediaObject.payloads="webrtc-datachannel",this._mediaObject.sctpPort=_.port,this._mediaObject.maxMessageSize=_.maxMessageSize):T.sctpmap&&(this._mediaObject.payloads=_.port,this._mediaObject.sctpmap={app:"webrtc-datachannel",sctpmapNumber:_.port,maxMessageSize:_.maxMessageSize});break}}}setDtlsRole(m){switch(m){case"client":{this._mediaObject.setup="active";break}case"server":{this._mediaObject.setup="passive";break}case"auto":{this._mediaObject.setup="actpass";break}}}resume(){this._mediaObject.direction="recvonly"}muxSimulcastStreams(m){var o,v;if(!((o=this._mediaObject.simulcast)!=null&&o.list1))return;const R={};for(const T of m)T.rid&&(R[T.rid]=T);const S=this._mediaObject.simulcast.list1,_=h.parseSimulcastStreamList(S);for(const T of _)for(const D of T)D.paused=!((v=R[D.scid])!=null&&v.active);this._mediaObject.simulcast.list1=_.map(T=>T.map(D=>`${D.paused?"~":""}${D.scid}`).join(",")).join(";")}}Se.AnswerMediaSection=p;class y extends w{constructor({iceParameters:m,iceCandidates:R,dtlsParameters:S,sctpParameters:_,plainRtpParameters:o,planB:v=!1,mid:T,kind:D,offerRtpParameters:n,streamId:i,trackId:e,oldDataChannelSpec:t=!1}){var r;switch(super({iceParameters:m,iceCandidates:R,dtlsParameters:S,planB:v}),this._mediaObject.mid=String(T),this._mediaObject.type=D,o?(this._mediaObject.connection={ip:o.ip,version:o.ipVersion},this._mediaObject.protocol="RTP/AVP",this._mediaObject.port=o.port):(this._mediaObject.connection={ip:"127.0.0.1",version:4},_?this._mediaObject.protocol="UDP/DTLS/SCTP":this._mediaObject.protocol="UDP/TLS/RTP/SAVPF",this._mediaObject.port=7),this._mediaObject.extmapAllowMixed="extmap-allow-mixed",D){case"audio":case"video":{this._mediaObject.direction="sendonly",this._mediaObject.rtp=[],this._mediaObject.rtcpFb=[],this._mediaObject.fmtp=[],this._planB||(this._mediaObject.msid=`${i??"-"} ${e}`);for(const c of n.codecs){const f={payload:c.payloadType,codec:g(c),rate:c.clockRate};c.channels>1&&(f.encoding=c.channels),this._mediaObject.rtp.push(f);const l={payload:c.payloadType,config:""};for(const b of Object.keys(c.parameters))l.config&&(l.config+=";"),l.config+=`${b}=${c.parameters[b]}`;l.config&&this._mediaObject.fmtp.push(l);for(const b of c.rtcpFeedback)this._mediaObject.rtcpFb.push({payload:c.payloadType,type:b.type,subtype:b.parameter})}this._mediaObject.payloads=n.codecs.map(c=>c.payloadType).join(" "),this._mediaObject.ext=[];for(const c of n.headerExtensions)this._mediaObject.ext.push({uri:c.uri,value:c.id});this._mediaObject.rtcpMux="rtcp-mux",this._mediaObject.rtcpRsize="rtcp-rsize";const s=n.encodings[0],a=s.ssrc,d=(r=s.rtx)==null?void 0:r.ssrc;this._mediaObject.ssrcs=[],this._mediaObject.ssrcGroups=[],n.rtcp.cname&&this._mediaObject.ssrcs.push({id:a,attribute:"cname",value:n.rtcp.cname}),this._planB&&this._mediaObject.ssrcs.push({id:a,attribute:"msid",value:`${i??"-"} ${e}`}),d&&(n.rtcp.cname&&this._mediaObject.ssrcs.push({id:d,attribute:"cname",value:n.rtcp.cname}),this._planB&&this._mediaObject.ssrcs.push({id:d,attribute:"msid",value:`${i??"-"} ${e}`}),this._mediaObject.ssrcGroups.push({semantics:"FID",ssrcs:`${a} ${d}`}));break}case"application":{t?(this._mediaObject.payloads=_.port,this._mediaObject.sctpmap={app:"webrtc-datachannel",sctpmapNumber:_.port,maxMessageSize:_.maxMessageSize}):(this._mediaObject.payloads="webrtc-datachannel",this._mediaObject.sctpPort=_.port,this._mediaObject.maxMessageSize=_.maxMessageSize);break}}}setDtlsRole(m){this._mediaObject.setup="actpass"}resume(){this._mediaObject.direction="sendonly"}planBReceive({offerRtpParameters:m,streamId:R,trackId:S}){var D;const _=m.encodings[0],o=_.ssrc,v=(D=_.rtx)==null?void 0:D.ssrc,T=this._mediaObject.payloads.split(" ");for(const n of m.codecs){if(T.includes(String(n.payloadType)))continue;const i={payload:n.payloadType,codec:g(n),rate:n.clockRate};n.channels>1&&(i.encoding=n.channels),this._mediaObject.rtp.push(i);const e={payload:n.payloadType,config:""};for(const t of Object.keys(n.parameters))e.config&&(e.config+=";"),e.config+=`${t}=${n.parameters[t]}`;e.config&&this._mediaObject.fmtp.push(e);for(const t of n.rtcpFeedback)this._mediaObject.rtcpFb.push({payload:n.payloadType,type:t.type,subtype:t.parameter})}this._mediaObject.payloads+=` ${m.codecs.filter(n=>!this._mediaObject.payloads.includes(n.payloadType)).map(n=>n.payloadType).join(" ")}`,this._mediaObject.payloads=this._mediaObject.payloads.trim(),m.rtcp.cname&&this._mediaObject.ssrcs.push({id:o,attribute:"cname",value:m.rtcp.cname}),this._mediaObject.ssrcs.push({id:o,attribute:"msid",value:`${R??"-"} ${S}`}),v&&(m.rtcp.cname&&this._mediaObject.ssrcs.push({id:v,attribute:"cname",value:m.rtcp.cname}),this._mediaObject.ssrcs.push({id:v,attribute:"msid",value:`${R??"-"} ${S}`}),this._mediaObject.ssrcGroups.push({semantics:"FID",ssrcs:`${o} ${v}`}))}planBStopReceiving({offerRtpParameters:m}){var o;const R=m.encodings[0],S=R.ssrc,_=(o=R.rtx)==null?void 0:o.ssrc;this._mediaObject.ssrcs=this._mediaObject.ssrcs.filter(v=>v.id!==S&&v.id!==_),_&&(this._mediaObject.ssrcGroups=this._mediaObject.ssrcGroups.filter(v=>v.ssrcs!==`${S} ${_}`))}}Se.OfferMediaSection=y;function g(u){const R=new RegExp("^(audio|video)/(.+)","i").exec(u.mimeType);if(!R)throw new TypeError("invalid codec.mimeType");return R[2]}return Se}var $s;function me(){if($s)return gt;$s=1,Object.defineProperty(gt,"__esModule",{value:!0}),gt.RemoteSdp=void 0;const h=ce(),P=Y(),w=En(),p=new P.Logger("RemoteSdp");let y=class{constructor({iceParameters:u,iceCandidates:m,dtlsParameters:R,sctpParameters:S,plainRtpParameters:_,planB:o=!1}){k(this,"_iceParameters");k(this,"_iceCandidates");k(this,"_dtlsParameters");k(this,"_sctpParameters");k(this,"_plainRtpParameters");k(this,"_planB");k(this,"_mediaSections",[]);k(this,"_midToIndex",new Map);k(this,"_firstMid");k(this,"_sdpObject");if(this._iceParameters=u,this._iceCandidates=m,this._dtlsParameters=R,this._sctpParameters=S,this._plainRtpParameters=_,this._planB=o,this._sdpObject={version:0,origin:{address:"0.0.0.0",ipVer:4,netType:"IN",sessionId:1e4,sessionVersion:0,username:"mediasoup-client"},name:"-",timing:{start:0,stop:0},media:[]},u!=null&&u.iceLite&&(this._sdpObject.icelite="ice-lite"),R){this._sdpObject.msidSemantic={semantic:"WMS",token:"*"};const v=this._dtlsParameters.fingerprints.length;this._sdpObject.fingerprint={type:R.fingerprints[v-1].algorithm,hash:R.fingerprints[v-1].value},this._sdpObject.groups=[{type:"BUNDLE",mids:""}]}_&&(this._sdpObject.origin.address=_.ip,this._sdpObject.origin.ipVer=_.ipVersion)}updateIceParameters(u){p.debug("updateIceParameters() [iceParameters:%o]",u),this._iceParameters=u,this._sdpObject.icelite=u.iceLite?"ice-lite":void 0;for(const m of this._mediaSections)m.setIceParameters(u)}updateDtlsRole(u){p.debug("updateDtlsRole() [role:%s]",u),this._dtlsParameters.role=u;for(const m of this._mediaSections)m.setDtlsRole(u)}setSessionExtmapAllowMixed(){p.debug("setSessionExtmapAllowMixed()"),this._sdpObject.extmapAllowMixed="extmap-allow-mixed"}getNextMediaSectionIdx(){for(let u=0;u<this._mediaSections.length;++u){const m=this._mediaSections[u];if(m.closed)return{idx:u,reuseMid:m.mid}}return{idx:this._mediaSections.length}}send({offerMediaObject:u,reuseMid:m,offerRtpParameters:R,answerRtpParameters:S,codecOptions:_}){const o=new w.AnswerMediaSection({iceParameters:this._iceParameters,iceCandidates:this._iceCandidates,dtlsParameters:this._dtlsParameters,plainRtpParameters:this._plainRtpParameters,planB:this._planB,offerMediaObject:u,offerRtpParameters:R,answerRtpParameters:S,codecOptions:_});m?this._replaceMediaSection(o,m):this._midToIndex.has(o.mid)?this._replaceMediaSection(o):this._addMediaSection(o)}receive({mid:u,kind:m,offerRtpParameters:R,streamId:S,trackId:_}){const o=this._midToIndex.get(u);let v;if(o!==void 0&&(v=this._mediaSections[o]),this.setSessionExtmapAllowMixed(),v)v.planBReceive({offerRtpParameters:R,streamId:S,trackId:_}),this._replaceMediaSection(v);else{v=new w.OfferMediaSection({iceParameters:this._iceParameters,iceCandidates:this._iceCandidates,dtlsParameters:this._dtlsParameters,plainRtpParameters:this._plainRtpParameters,planB:this._planB,mid:u,kind:m,offerRtpParameters:R,streamId:S,trackId:_});const T=this._mediaSections.find(D=>D.closed);T?this._replaceMediaSection(v,T.mid):this._addMediaSection(v)}}pauseMediaSection(u){this._findMediaSection(u).pause()}resumeSendingMediaSection(u){this._findMediaSection(u).resume()}resumeReceivingMediaSection(u){this._findMediaSection(u).resume()}disableMediaSection(u){this._findMediaSection(u).disable()}closeMediaSection(u){const m=this._findMediaSection(u);return u===this._firstMid?(p.debug("closeMediaSection() | cannot close first media section, disabling it instead [mid:%s]",u),this.disableMediaSection(u),!1):(m.close(),this._regenerateBundleMids(),!0)}muxMediaSectionSimulcast(u,m){const R=this._findMediaSection(u);R.muxSimulcastStreams(m),this._replaceMediaSection(R)}planBStopReceiving({mid:u,offerRtpParameters:m}){const R=this._findMediaSection(u);R.planBStopReceiving({offerRtpParameters:m}),this._replaceMediaSection(R)}sendSctpAssociation({offerMediaObject:u}){const m=new w.AnswerMediaSection({iceParameters:this._iceParameters,iceCandidates:this._iceCandidates,dtlsParameters:this._dtlsParameters,sctpParameters:this._sctpParameters,plainRtpParameters:this._plainRtpParameters,offerMediaObject:u});this._addMediaSection(m)}receiveSctpAssociation({oldDataChannelSpec:u=!1}={}){const m=new w.OfferMediaSection({iceParameters:this._iceParameters,iceCandidates:this._iceCandidates,dtlsParameters:this._dtlsParameters,sctpParameters:this._sctpParameters,plainRtpParameters:this._plainRtpParameters,mid:"datachannel",kind:"application",oldDataChannelSpec:u});this._addMediaSection(m)}getSdp(){return this._sdpObject.origin.sessionVersion++,h.write(this._sdpObject)}_addMediaSection(u){this._firstMid||(this._firstMid=u.mid),this._mediaSections.push(u),this._midToIndex.set(u.mid,this._mediaSections.length-1),this._sdpObject.media.push(u.getObject()),this._regenerateBundleMids()}_replaceMediaSection(u,m){if(typeof m=="string"){const R=this._midToIndex.get(m);if(R===void 0)throw new Error(`no media section found for reuseMid '${m}'`);const S=this._mediaSections[R];this._mediaSections[R]=u,this._midToIndex.delete(S.mid),this._midToIndex.set(u.mid,R),this._sdpObject.media[R]=u.getObject(),this._regenerateBundleMids()}else{const R=this._midToIndex.get(u.mid);if(R===void 0)throw new Error(`no media section found with mid '${u.mid}'`);this._mediaSections[R]=u,this._sdpObject.media[R]=u.getObject()}}_findMediaSection(u){const m=this._midToIndex.get(u);if(m===void 0)throw new Error(`no media section found with mid '${u}'`);return this._mediaSections[m]}_regenerateBundleMids(){this._dtlsParameters&&(this._sdpObject.groups[0].mids=this._mediaSections.filter(u=>!u.closed).map(u=>u.mid).join(" "))}};return gt.RemoteSdp=y,gt}var Kt={},zs;function De(){if(zs)return Kt;zs=1,Object.defineProperty(Kt,"__esModule",{value:!0}),Kt.parse=P;const h=new RegExp("^[LS]([1-9]\\d{0,1})T([1-9]\\d{0,1})");function P(w){const p=h.exec(w??"");return p?{spatialLayers:Number(p[1]),temporalLayers:Number(p[2])}:{spatialLayers:1,temporalLayers:1}}return Kt}var Hs;function xn(){if(Hs)return ht;Hs=1,Object.defineProperty(ht,"__esModule",{value:!0}),ht.Chrome111=void 0;const h=ce(),P=Y(),w=J(),p=ie(),y=fe(),g=Ae(),u=pr(),m=se(),R=de(),S=me(),_=De(),o=new P.Logger("Chrome111"),v="Chrome111",T={OS:1024,MIS:1024};let D=class $i extends R.HandlerInterface{constructor(){super();k(this,"_closed",!1);k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_forcedLocalDtlsRole");k(this,"_pc");k(this,"_mapMidTransceiver",new Map);k(this,"_sendStream",new MediaStream);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new $i}get name(){return v}close(){if(o.debug("close()"),!this._closed){if(this._closed=!0,this._pc)try{this._pc.close()}catch{}this.emit("@close")}}async getNativeRtpCapabilities(){o.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"});try{e.addTransceiver("audio"),e.addTransceiver("video");const t=await e.createOffer();try{e.close()}catch{}const r=h.parse(t.sdp),s=y.extractRtpCapabilities({sdpObject:r});return u.addNackSupportForOpus(s),s}catch(t){try{e.close()}catch{}throw t}}async getNativeSctpCapabilities(){return o.debug("getNativeSctpCapabilities()"),{numStreams:T}}run({direction:e,iceParameters:t,iceCandidates:r,dtlsParameters:s,sctpParameters:a,iceServers:d,iceTransportPolicy:c,additionalSettings:f,proprietaryConstraints:l,extendedRtpCapabilities:b}){this.assertNotClosed(),o.debug("run()"),this._direction=e,this._remoteSdp=new S.RemoteSdp({iceParameters:t,iceCandidates:r,dtlsParameters:s,sctpParameters:a}),this._sendingRtpParametersByKind={audio:p.getSendingRtpParameters("audio",b),video:p.getSendingRtpParameters("video",b)},this._sendingRemoteRtpParametersByKind={audio:p.getSendingRemoteRtpParameters("audio",b),video:p.getSendingRemoteRtpParameters("video",b)},s.role&&s.role!=="auto"&&(this._forcedLocalDtlsRole=s.role==="server"?"client":"server"),this._pc=new RTCPeerConnection({iceServers:d??[],iceTransportPolicy:c??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan",...f},l),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",E=>{this.emit("@icecandidateerror",E)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):(o.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.addEventListener("iceconnectionstatechange",()=>{switch(this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}}))}async updateIceServers(e){this.assertNotClosed(),o.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(this.assertNotClosed(),o.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),!!this._transportReady)if(this._direction==="send"){const t=await this._pc.createOffer({iceRestart:!0});o.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}else{const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}}async getTransportStats(){return this.assertNotClosed(),this._pc.getStats()}async send({track:e,encodings:t,codecOptions:r,codec:s,onRtpSender:a}){if(this.assertNotClosed(),this.assertSendDirection(),o.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),t&&t.length>1){let M=1;for(const I of t){const O=I.scalabilityMode?(0,_.parse)(I.scalabilityMode).temporalLayers:3;O>M&&(M=O)}t.forEach((I,O)=>{I.rid=`r${O}`,I.scalabilityMode=`L1T${M}`})}const d=w.clone(this._sendingRtpParametersByKind[e.kind]);d.codecs=p.reduceCodecs(d.codecs,s);const c=w.clone(this._sendingRemoteRtpParametersByKind[e.kind]);c.codecs=p.reduceCodecs(c.codecs,s);const f=this._remoteSdp.getNextMediaSectionIdx(),l=this._pc.addTransceiver(e,{direction:"sendonly",streams:[this._sendStream],sendEncodings:t});a&&a(l.sender);const b=await this._pc.createOffer();let E=h.parse(b.sdp);E.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed(),this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:E}),o.debug("send() | calling pc.setLocalDescription() [offer:%o]",b),await this._pc.setLocalDescription(b);const x=l.mid;d.mid=x,E=h.parse(this._pc.localDescription.sdp);const C=E.media[f.idx];if(d.rtcp.cname=y.getCname({offerMediaObject:C}),!t)d.encodings=g.getRtpEncodings({offerMediaObject:C});else if(t.length===1){const M=g.getRtpEncodings({offerMediaObject:C});Object.assign(M[0],t[0]),d.encodings=M}else d.encodings=t;this._remoteSdp.send({offerMediaObject:C,reuseMid:f.reuseMid,offerRtpParameters:d,answerRtpParameters:c,codecOptions:r});const L={type:"answer",sdp:this._remoteSdp.getSdp()};return o.debug("send() | calling pc.setRemoteDescription() [answer:%o]",L),await this._pc.setRemoteDescription(L),this._mapMidTransceiver.set(x,l),{localId:x,rtpParameters:d,rtpSender:l.sender}}async stopSending(e){if(this.assertSendDirection(),o.debug("stopSending() [localId:%s]",e),this._closed)return;const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");if(t.sender.replaceTrack(null),this._pc.removeTrack(t.sender),this._remoteSdp.closeMediaSection(t.mid))try{t.stop()}catch{}const s=await this._pc.createOffer();o.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const a={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",a),await this._pc.setRemoteDescription(a),this._mapMidTransceiver.delete(e)}async pauseSending(e){this.assertNotClosed(),this.assertSendDirection(),o.debug("pauseSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");t.direction="inactive",this._remoteSdp.pauseMediaSection(e);const r=await this._pc.createOffer();o.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async resumeSending(e){this.assertNotClosed(),this.assertSendDirection(),o.debug("resumeSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(this._remoteSdp.resumeSendingMediaSection(e),!t)throw new Error("associated RTCRtpTransceiver not found");t.direction="sendonly";const r=await this._pc.createOffer();o.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async replaceTrack(e,t){this.assertNotClosed(),this.assertSendDirection(),t?o.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):o.debug("replaceTrack() [localId:%s, no track]",e);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");await r.sender.replaceTrack(t)}async setMaxSpatialLayer(e,t){this.assertNotClosed(),this.assertSendDirection(),o.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");const s=r.sender.getParameters();s.encodings.forEach((c,f)=>{f<=t?c.active=!0:c.active=!1}),await r.sender.setParameters(s),this._remoteSdp.muxMediaSectionSimulcast(e,s.encodings);const a=await this._pc.createOffer();o.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a);const d={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d)}async setRtpEncodingParameters(e,t){this.assertNotClosed(),this.assertSendDirection(),o.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");const s=r.sender.getParameters();s.encodings.forEach((c,f)=>{s.encodings[f]={...c,...t}}),await r.sender.setParameters(s),this._remoteSdp.muxMediaSectionSimulcast(e,s.encodings);const a=await this._pc.createOffer();o.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a);const d={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d)}async getSenderStats(e){this.assertNotClosed(),this.assertSendDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.sender.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:r,label:s,protocol:a}){this.assertNotClosed(),this.assertSendDirection();const d={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmits:r,protocol:a};o.debug("sendDataChannel() [options:%o]",d);const c=this._pc.createDataChannel(s,d);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%T.MIS,!this._hasDataChannelMediaSection){const l=await this._pc.createOffer(),b=h.parse(l.sdp),E=b.media.find(C=>C.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:b}),o.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",l),await this._pc.setLocalDescription(l),this._remoteSdp.sendSctpAssociation({offerMediaObject:E});const x={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",x),await this._pc.setRemoteDescription(x),this._hasDataChannelMediaSection=!0}const f={streamId:d.id,ordered:d.ordered,maxPacketLifeTime:d.maxPacketLifeTime,maxRetransmits:d.maxRetransmits};return{dataChannel:c,sctpStreamParameters:f}}async receive(e){this.assertNotClosed(),this.assertRecvDirection();const t=[],r=new Map;for(const c of e){const{trackId:f,kind:l,rtpParameters:b,streamId:E}=c;o.debug("receive() [trackId:%s, kind:%s]",f,l);const x=b.mid??String(this._mapMidTransceiver.size);r.set(f,x),this._remoteSdp.receive({mid:x,kind:l,offerRtpParameters:b,streamId:E??b.rtcp.cname,trackId:f})}const s={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",s),await this._pc.setRemoteDescription(s);for(const c of e){const{trackId:f,onRtpReceiver:l}=c;if(l){const b=r.get(f),E=this._pc.getTransceivers().find(x=>x.mid===b);if(!E)throw new Error("transceiver not found");l(E.receiver)}}let a=await this._pc.createAnswer();const d=h.parse(a.sdp);for(const c of e){const{trackId:f,rtpParameters:l}=c,b=r.get(f),E=d.media.find(x=>String(x.mid)===b);y.applyCodecParameters({offerRtpParameters:l,answerMediaObject:E})}a={type:"answer",sdp:h.write(d)},this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:d}),o.debug("receive() | calling pc.setLocalDescription() [answer:%o]",a),await this._pc.setLocalDescription(a);for(const c of e){const{trackId:f}=c,l=r.get(f),b=this._pc.getTransceivers().find(E=>E.mid===l);if(b)this._mapMidTransceiver.set(l,b),t.push({localId:l,track:b.receiver.track,rtpReceiver:b.receiver});else throw new Error("new RTCRtpTransceiver not found")}return t}async stopReceiving(e){if(this.assertRecvDirection(),this._closed)return;for(const s of e){o.debug("stopReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(a.mid)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r);for(const s of e)this._mapMidTransceiver.delete(s)}async pauseReceiving(e){this.assertNotClosed(),this.assertRecvDirection();for(const s of e){o.debug("pauseReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");a.direction="inactive",this._remoteSdp.pauseMediaSection(s)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async resumeReceiving(e){this.assertNotClosed(),this.assertRecvDirection();for(const s of e){o.debug("resumeReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");a.direction="recvonly",this._remoteSdp.resumeReceivingMediaSection(s)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async getReceiverStats(e){this.assertNotClosed(),this.assertRecvDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:r}){this.assertNotClosed(),this.assertRecvDirection();const{streamId:s,ordered:a,maxPacketLifeTime:d,maxRetransmits:c}=e,f={negotiated:!0,id:s,ordered:a,maxPacketLifeTime:d,maxRetransmits:c,protocol:r};o.debug("receiveDataChannel() [options:%o]",f);const l=this._pc.createDataChannel(t,f);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const b={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",b),await this._pc.setRemoteDescription(b);const E=await this._pc.createAnswer();if(!this._transportReady){const x=h.parse(E.sdp);await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:x})}o.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",E),await this._pc.setLocalDescription(E),this._hasDataChannelMediaSection=!0}return{dataChannel:l}}async setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=h.parse(this._pc.localDescription.sdp));const r=y.extractDtlsParameters({sdpObject:t});r.role=e,this._remoteSdp.updateDtlsRole(e==="client"?"server":"client"),await new Promise((s,a)=>{this.safeEmit("@connect",{dtlsParameters:r},s,a)}),this._transportReady=!0}assertNotClosed(){if(this._closed)throw new m.InvalidStateError("method called in a closed handler")}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return ht.Chrome111=D,ht}var _t={},Vs;function Ln(){if(Vs)return _t;Vs=1,Object.defineProperty(_t,"__esModule",{value:!0}),_t.Chrome74=void 0;const h=ce(),P=Y(),w=J(),p=ie(),y=fe(),g=Ae(),u=pr(),m=se(),R=de(),S=me(),_=De(),o=new P.Logger("Chrome74"),v="Chrome74",T={OS:1024,MIS:1024};let D=class zi extends R.HandlerInterface{constructor(){super();k(this,"_closed",!1);k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_forcedLocalDtlsRole");k(this,"_pc");k(this,"_mapMidTransceiver",new Map);k(this,"_sendStream",new MediaStream);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new zi}get name(){return v}close(){if(o.debug("close()"),!this._closed){if(this._closed=!0,this._pc)try{this._pc.close()}catch{}this.emit("@close")}}async getNativeRtpCapabilities(){o.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"});try{e.addTransceiver("audio"),e.addTransceiver("video");const t=await e.createOffer();try{e.close()}catch{}const r=h.parse(t.sdp),s=y.extractRtpCapabilities({sdpObject:r});return u.addNackSupportForOpus(s),s}catch(t){try{e.close()}catch{}throw t}}async getNativeSctpCapabilities(){return o.debug("getNativeSctpCapabilities()"),{numStreams:T}}run({direction:e,iceParameters:t,iceCandidates:r,dtlsParameters:s,sctpParameters:a,iceServers:d,iceTransportPolicy:c,additionalSettings:f,proprietaryConstraints:l,extendedRtpCapabilities:b}){o.debug("run()"),this._direction=e,this._remoteSdp=new S.RemoteSdp({iceParameters:t,iceCandidates:r,dtlsParameters:s,sctpParameters:a}),this._sendingRtpParametersByKind={audio:p.getSendingRtpParameters("audio",b),video:p.getSendingRtpParameters("video",b)},this._sendingRemoteRtpParametersByKind={audio:p.getSendingRemoteRtpParameters("audio",b),video:p.getSendingRemoteRtpParameters("video",b)},s.role&&s.role!=="auto"&&(this._forcedLocalDtlsRole=s.role==="server"?"client":"server"),this._pc=new RTCPeerConnection({iceServers:d??[],iceTransportPolicy:c??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan",...f},l),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",E=>{this.emit("@icecandidateerror",E)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):(o.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.addEventListener("iceconnectionstatechange",()=>{switch(this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}}))}async updateIceServers(e){this.assertNotClosed(),o.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(this.assertNotClosed(),o.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),!!this._transportReady)if(this._direction==="send"){const t=await this._pc.createOffer({iceRestart:!0});o.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}else{const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}}async getTransportStats(){return this.assertNotClosed(),this._pc.getStats()}async send({track:e,encodings:t,codecOptions:r,codec:s}){this.assertNotClosed(),this.assertSendDirection(),o.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),t&&t.length>1&&t.forEach((I,O)=>{I.rid=`r${O}`});const a=w.clone(this._sendingRtpParametersByKind[e.kind]);a.codecs=p.reduceCodecs(a.codecs,s);const d=w.clone(this._sendingRemoteRtpParametersByKind[e.kind]);d.codecs=p.reduceCodecs(d.codecs,s);const c=this._remoteSdp.getNextMediaSectionIdx(),f=this._pc.addTransceiver(e,{direction:"sendonly",streams:[this._sendStream],sendEncodings:t});let l=await this._pc.createOffer(),b=h.parse(l.sdp);b.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed();let E;this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:b});let x=!1;const C=(0,_.parse)((t??[{}])[0].scalabilityMode);t&&t.length===1&&C.spatialLayers>1&&a.codecs[0].mimeType.toLowerCase()==="video/vp9"&&(o.debug("send() | enabling legacy simulcast for VP9 SVC"),x=!0,b=h.parse(l.sdp),E=b.media[c.idx],g.addLegacySimulcast({offerMediaObject:E,numStreams:C.spatialLayers}),l={type:"offer",sdp:h.write(b)}),o.debug("send() | calling pc.setLocalDescription() [offer:%o]",l),await this._pc.setLocalDescription(l);const L=f.mid;if(a.mid=L,b=h.parse(this._pc.localDescription.sdp),E=b.media[c.idx],a.rtcp.cname=y.getCname({offerMediaObject:E}),!t)a.encodings=g.getRtpEncodings({offerMediaObject:E});else if(t.length===1){let I=g.getRtpEncodings({offerMediaObject:E});Object.assign(I[0],t[0]),x&&(I=[I[0]]),a.encodings=I}else a.encodings=t;if(a.encodings.length>1&&(a.codecs[0].mimeType.toLowerCase()==="video/vp8"||a.codecs[0].mimeType.toLowerCase()==="video/h264"))for(const I of a.encodings)I.scalabilityMode?I.scalabilityMode=`L1T${C.temporalLayers}`:I.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:E,reuseMid:c.reuseMid,offerRtpParameters:a,answerRtpParameters:d,codecOptions:r});const M={type:"answer",sdp:this._remoteSdp.getSdp()};return o.debug("send() | calling pc.setRemoteDescription() [answer:%o]",M),await this._pc.setRemoteDescription(M),this._mapMidTransceiver.set(L,f),{localId:L,rtpParameters:a,rtpSender:f.sender}}async stopSending(e){if(this.assertSendDirection(),o.debug("stopSending() [localId:%s]",e),this._closed)return;const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");if(t.sender.replaceTrack(null),this._pc.removeTrack(t.sender),this._remoteSdp.closeMediaSection(t.mid))try{t.stop()}catch{}const s=await this._pc.createOffer();o.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const a={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",a),await this._pc.setRemoteDescription(a),this._mapMidTransceiver.delete(e)}async pauseSending(e){this.assertNotClosed(),this.assertSendDirection(),o.debug("pauseSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");t.direction="inactive",this._remoteSdp.pauseMediaSection(e);const r=await this._pc.createOffer();o.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async resumeSending(e){this.assertNotClosed(),this.assertSendDirection(),o.debug("resumeSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(this._remoteSdp.resumeSendingMediaSection(e),!t)throw new Error("associated RTCRtpTransceiver not found");t.direction="sendonly";const r=await this._pc.createOffer();o.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async replaceTrack(e,t){this.assertNotClosed(),this.assertSendDirection(),t?o.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):o.debug("replaceTrack() [localId:%s, no track]",e);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");await r.sender.replaceTrack(t)}async setMaxSpatialLayer(e,t){this.assertNotClosed(),this.assertSendDirection(),o.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");const s=r.sender.getParameters();s.encodings.forEach((c,f)=>{f<=t?c.active=!0:c.active=!1}),await r.sender.setParameters(s),this._remoteSdp.muxMediaSectionSimulcast(e,s.encodings);const a=await this._pc.createOffer();o.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a);const d={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d)}async setRtpEncodingParameters(e,t){this.assertNotClosed(),this.assertSendDirection(),o.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");const s=r.sender.getParameters();s.encodings.forEach((c,f)=>{s.encodings[f]={...c,...t}}),await r.sender.setParameters(s),this._remoteSdp.muxMediaSectionSimulcast(e,s.encodings);const a=await this._pc.createOffer();o.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a);const d={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d)}async getSenderStats(e){this.assertNotClosed(),this.assertSendDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.sender.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:r,label:s,protocol:a}){this.assertNotClosed(),this.assertSendDirection();const d={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmits:r,protocol:a};o.debug("sendDataChannel() [options:%o]",d);const c=this._pc.createDataChannel(s,d);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%T.MIS,!this._hasDataChannelMediaSection){const l=await this._pc.createOffer(),b=h.parse(l.sdp),E=b.media.find(C=>C.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:b}),o.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",l),await this._pc.setLocalDescription(l),this._remoteSdp.sendSctpAssociation({offerMediaObject:E});const x={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",x),await this._pc.setRemoteDescription(x),this._hasDataChannelMediaSection=!0}const f={streamId:d.id,ordered:d.ordered,maxPacketLifeTime:d.maxPacketLifeTime,maxRetransmits:d.maxRetransmits};return{dataChannel:c,sctpStreamParameters:f}}async receive(e){this.assertNotClosed(),this.assertRecvDirection();const t=[],r=new Map;for(const c of e){const{trackId:f,kind:l,rtpParameters:b,streamId:E}=c;o.debug("receive() [trackId:%s, kind:%s]",f,l);const x=b.mid??String(this._mapMidTransceiver.size);r.set(f,x),this._remoteSdp.receive({mid:x,kind:l,offerRtpParameters:b,streamId:E??b.rtcp.cname,trackId:f})}const s={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",s),await this._pc.setRemoteDescription(s);let a=await this._pc.createAnswer();const d=h.parse(a.sdp);for(const c of e){const{trackId:f,rtpParameters:l}=c,b=r.get(f),E=d.media.find(x=>String(x.mid)===b);y.applyCodecParameters({offerRtpParameters:l,answerMediaObject:E})}a={type:"answer",sdp:h.write(d)},this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:d}),o.debug("receive() | calling pc.setLocalDescription() [answer:%o]",a),await this._pc.setLocalDescription(a);for(const c of e){const{trackId:f}=c,l=r.get(f),b=this._pc.getTransceivers().find(E=>E.mid===l);if(b)this._mapMidTransceiver.set(l,b),t.push({localId:l,track:b.receiver.track,rtpReceiver:b.receiver});else throw new Error("new RTCRtpTransceiver not found")}return t}async stopReceiving(e){if(this.assertRecvDirection(),this._closed)return;for(const s of e){o.debug("stopReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(a.mid)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r);for(const s of e)this._mapMidTransceiver.delete(s)}async pauseReceiving(e){this.assertNotClosed(),this.assertRecvDirection();for(const s of e){o.debug("pauseReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");a.direction="inactive",this._remoteSdp.pauseMediaSection(s)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async resumeReceiving(e){this.assertNotClosed(),this.assertRecvDirection();for(const s of e){o.debug("resumeReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");a.direction="recvonly",this._remoteSdp.resumeReceivingMediaSection(s)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async getReceiverStats(e){this.assertNotClosed(),this.assertRecvDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:r}){this.assertNotClosed(),this.assertRecvDirection();const{streamId:s,ordered:a,maxPacketLifeTime:d,maxRetransmits:c}=e,f={negotiated:!0,id:s,ordered:a,maxPacketLifeTime:d,maxRetransmits:c,protocol:r};o.debug("receiveDataChannel() [options:%o]",f);const l=this._pc.createDataChannel(t,f);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const b={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",b),await this._pc.setRemoteDescription(b);const E=await this._pc.createAnswer();if(!this._transportReady){const x=h.parse(E.sdp);await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:x})}o.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",E),await this._pc.setLocalDescription(E),this._hasDataChannelMediaSection=!0}return{dataChannel:l}}async setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=h.parse(this._pc.localDescription.sdp));const r=y.extractDtlsParameters({sdpObject:t});r.role=e,this._remoteSdp.updateDtlsRole(e==="client"?"server":"client"),await new Promise((s,a)=>{this.safeEmit("@connect",{dtlsParameters:r},s,a)}),this._transportReady=!0}assertNotClosed(){if(this._closed)throw new m.InvalidStateError("method called in a closed handler")}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return _t.Chrome74=D,_t}var wt={},Ks;function In(){if(Ks)return wt;Ks=1,Object.defineProperty(wt,"__esModule",{value:!0}),wt.Chrome70=void 0;const h=ce(),P=Y(),w=J(),p=ie(),y=fe(),g=Ae(),u=de(),m=me(),R=De(),S=new P.Logger("Chrome70"),_="Chrome70",o={OS:1024,MIS:1024};let v=class Hi extends u.HandlerInterface{constructor(){super();k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_forcedLocalDtlsRole");k(this,"_pc");k(this,"_mapMidTransceiver",new Map);k(this,"_sendStream",new MediaStream);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new Hi}get name(){return _}close(){if(S.debug("close()"),this._pc)try{this._pc.close()}catch{}this.emit("@close")}async getNativeRtpCapabilities(){S.debug("getNativeRtpCapabilities()");const n=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"});try{n.addTransceiver("audio"),n.addTransceiver("video");const i=await n.createOffer();try{n.close()}catch{}const e=h.parse(i.sdp);return y.extractRtpCapabilities({sdpObject:e})}catch(i){try{n.close()}catch{}throw i}}async getNativeSctpCapabilities(){return S.debug("getNativeSctpCapabilities()"),{numStreams:o}}run({direction:n,iceParameters:i,iceCandidates:e,dtlsParameters:t,sctpParameters:r,iceServers:s,iceTransportPolicy:a,additionalSettings:d,proprietaryConstraints:c,extendedRtpCapabilities:f}){S.debug("run()"),this._direction=n,this._remoteSdp=new m.RemoteSdp({iceParameters:i,iceCandidates:e,dtlsParameters:t,sctpParameters:r}),this._sendingRtpParametersByKind={audio:p.getSendingRtpParameters("audio",f),video:p.getSendingRtpParameters("video",f)},this._sendingRemoteRtpParametersByKind={audio:p.getSendingRemoteRtpParameters("audio",f),video:p.getSendingRemoteRtpParameters("video",f)},t.role&&t.role!=="auto"&&(this._forcedLocalDtlsRole=t.role==="server"?"client":"server"),this._pc=new RTCPeerConnection({iceServers:s??[],iceTransportPolicy:a??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan",...d},c),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",l=>{this.emit("@icecandidateerror",l)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):this._pc.addEventListener("iceconnectionstatechange",()=>{switch(S.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}})}async updateIceServers(n){S.debug("updateIceServers()");const i=this._pc.getConfiguration();i.iceServers=n,this._pc.setConfiguration(i)}async restartIce(n){if(S.debug("restartIce()"),this._remoteSdp.updateIceParameters(n),!!this._transportReady)if(this._direction==="send"){const i=await this._pc.createOffer({iceRestart:!0});S.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",i),await this._pc.setLocalDescription(i);const e={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",e),await this._pc.setRemoteDescription(e)}else{const i={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);const e=await this._pc.createAnswer();S.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",e),await this._pc.setLocalDescription(e)}}async getTransportStats(){return this._pc.getStats()}async send({track:n,encodings:i,codecOptions:e,codec:t}){this.assertSendDirection(),S.debug("send() [kind:%s, track.id:%s]",n.kind,n.id);const r=w.clone(this._sendingRtpParametersByKind[n.kind]);r.codecs=p.reduceCodecs(r.codecs,t);const s=w.clone(this._sendingRemoteRtpParametersByKind[n.kind]);s.codecs=p.reduceCodecs(s.codecs,t);const a=this._remoteSdp.getNextMediaSectionIdx(),d=this._pc.addTransceiver(n,{direction:"sendonly",streams:[this._sendStream]});let c=await this._pc.createOffer(),f=h.parse(c.sdp);f.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed();let l;this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:f}),i&&i.length>1&&(S.debug("send() | enabling legacy simulcast"),f=h.parse(c.sdp),l=f.media[a.idx],g.addLegacySimulcast({offerMediaObject:l,numStreams:i.length}),c={type:"offer",sdp:h.write(f)});let b=!1;const E=(0,R.parse)((i??[{}])[0].scalabilityMode);if(i&&i.length===1&&E.spatialLayers>1&&r.codecs[0].mimeType.toLowerCase()==="video/vp9"&&(S.debug("send() | enabling legacy simulcast for VP9 SVC"),b=!0,f=h.parse(c.sdp),l=f.media[a.idx],g.addLegacySimulcast({offerMediaObject:l,numStreams:E.spatialLayers}),c={type:"offer",sdp:h.write(f)}),S.debug("send() | calling pc.setLocalDescription() [offer:%o]",c),await this._pc.setLocalDescription(c),i){S.debug("send() | applying given encodings");const L=d.sender.getParameters();for(let M=0;M<(L.encodings??[]).length;++M){const I=L.encodings[M],O=i[M];if(!O)break;L.encodings[M]=Object.assign(I,O)}await d.sender.setParameters(L)}const x=d.mid;if(r.mid=x,f=h.parse(this._pc.localDescription.sdp),l=f.media[a.idx],r.rtcp.cname=y.getCname({offerMediaObject:l}),r.encodings=g.getRtpEncodings({offerMediaObject:l}),i)for(let L=0;L<r.encodings.length;++L)i[L]&&Object.assign(r.encodings[L],i[L]);if(b&&(r.encodings=[r.encodings[0]]),r.encodings.length>1&&(r.codecs[0].mimeType.toLowerCase()==="video/vp8"||r.codecs[0].mimeType.toLowerCase()==="video/h264"))for(const L of r.encodings)L.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:l,reuseMid:a.reuseMid,offerRtpParameters:r,answerRtpParameters:s,codecOptions:e});const C={type:"answer",sdp:this._remoteSdp.getSdp()};return S.debug("send() | calling pc.setRemoteDescription() [answer:%o]",C),await this._pc.setRemoteDescription(C),this._mapMidTransceiver.set(x,d),{localId:x,rtpParameters:r,rtpSender:d.sender}}async stopSending(n){this.assertSendDirection(),S.debug("stopSending() [localId:%s]",n);const i=this._mapMidTransceiver.get(n);if(!i)throw new Error("associated RTCRtpTransceiver not found");if(i.sender.replaceTrack(null),this._pc.removeTrack(i.sender),this._remoteSdp.closeMediaSection(i.mid))try{i.stop()}catch{}const t=await this._pc.createOffer();S.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._mapMidTransceiver.delete(n)}async pauseSending(n){}async resumeSending(n){}async replaceTrack(n,i){this.assertSendDirection(),i?S.debug("replaceTrack() [localId:%s, track.id:%s]",n,i.id):S.debug("replaceTrack() [localId:%s, no track]",n);const e=this._mapMidTransceiver.get(n);if(!e)throw new Error("associated RTCRtpTransceiver not found");await e.sender.replaceTrack(i)}async setMaxSpatialLayer(n,i){this.assertSendDirection(),S.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",n,i);const e=this._mapMidTransceiver.get(n);if(!e)throw new Error("associated RTCRtpTransceiver not found");const t=e.sender.getParameters();t.encodings.forEach((a,d)=>{d<=i?a.active=!0:a.active=!1}),await e.sender.setParameters(t),this._remoteSdp.muxMediaSectionSimulcast(n,t.encodings);const r=await this._pc.createOffer();S.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async setRtpEncodingParameters(n,i){this.assertSendDirection(),S.debug("setRtpEncodingParameters() [localId:%s, params:%o]",n,i);const e=this._mapMidTransceiver.get(n);if(!e)throw new Error("associated RTCRtpTransceiver not found");const t=e.sender.getParameters();t.encodings.forEach((a,d)=>{t.encodings[d]={...a,...i}}),await e.sender.setParameters(t),this._remoteSdp.muxMediaSectionSimulcast(n,t.encodings);const r=await this._pc.createOffer();S.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async getSenderStats(n){this.assertSendDirection();const i=this._mapMidTransceiver.get(n);if(!i)throw new Error("associated RTCRtpTransceiver not found");return i.sender.getStats()}async sendDataChannel({ordered:n,maxPacketLifeTime:i,maxRetransmits:e,label:t,protocol:r}){this.assertSendDirection();const s={negotiated:!0,id:this._nextSendSctpStreamId,ordered:n,maxPacketLifeTime:i,maxRetransmitTime:i,maxRetransmits:e,protocol:r};S.debug("sendDataChannel() [options:%o]",s);const a=this._pc.createDataChannel(t,s);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%o.MIS,!this._hasDataChannelMediaSection){const c=await this._pc.createOffer(),f=h.parse(c.sdp),l=f.media.find(E=>E.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:f}),S.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",c),await this._pc.setLocalDescription(c),this._remoteSdp.sendSctpAssociation({offerMediaObject:l});const b={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",b),await this._pc.setRemoteDescription(b),this._hasDataChannelMediaSection=!0}const d={streamId:s.id,ordered:s.ordered,maxPacketLifeTime:s.maxPacketLifeTime,maxRetransmits:s.maxRetransmits};return{dataChannel:a,sctpStreamParameters:d}}async receive(n){this.assertRecvDirection();const i=[],e=new Map;for(const a of n){const{trackId:d,kind:c,rtpParameters:f,streamId:l}=a;S.debug("receive() [trackId:%s, kind:%s]",d,c);const b=f.mid??String(this._mapMidTransceiver.size);e.set(d,b),this._remoteSdp.receive({mid:b,kind:c,offerRtpParameters:f,streamId:l??f.rtcp.cname,trackId:d})}const t={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);let r=await this._pc.createAnswer();const s=h.parse(r.sdp);for(const a of n){const{trackId:d,rtpParameters:c}=a,f=e.get(d),l=s.media.find(b=>String(b.mid)===f);y.applyCodecParameters({offerRtpParameters:c,answerMediaObject:l})}r={type:"answer",sdp:h.write(s)},this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:s}),S.debug("receive() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r);for(const a of n){const{trackId:d}=a,c=e.get(d),f=this._pc.getTransceivers().find(l=>l.mid===c);if(!f)throw new Error("new RTCRtpTransceiver not found");this._mapMidTransceiver.set(c,f),i.push({localId:c,track:f.receiver.track,rtpReceiver:f.receiver})}return i}async stopReceiving(n){this.assertRecvDirection();for(const t of n){S.debug("stopReceiving() [localId:%s]",t);const r=this._mapMidTransceiver.get(t);if(!r)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(r.mid)}const i={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);const e=await this._pc.createAnswer();S.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",e),await this._pc.setLocalDescription(e);for(const t of n)this._mapMidTransceiver.delete(t)}async pauseReceiving(n){}async resumeReceiving(n){}async getReceiverStats(n){this.assertRecvDirection();const i=this._mapMidTransceiver.get(n);if(!i)throw new Error("associated RTCRtpTransceiver not found");return i.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:n,label:i,protocol:e}){this.assertRecvDirection();const{streamId:t,ordered:r,maxPacketLifeTime:s,maxRetransmits:a}=n,d={negotiated:!0,id:t,ordered:r,maxPacketLifeTime:s,maxRetransmitTime:s,maxRetransmits:a,protocol:e};S.debug("receiveDataChannel() [options:%o]",d);const c=this._pc.createDataChannel(i,d);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const f={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",f),await this._pc.setRemoteDescription(f);const l=await this._pc.createAnswer();if(!this._transportReady){const b=h.parse(l.sdp);await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:b})}S.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",l),await this._pc.setLocalDescription(l),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async setupTransport({localDtlsRole:n,localSdpObject:i}){i||(i=h.parse(this._pc.localDescription.sdp));const e=y.extractDtlsParameters({sdpObject:i});e.role=n,this._remoteSdp.updateDtlsRole(n==="client"?"server":"client"),await new Promise((t,r)=>{this.safeEmit("@connect",{dtlsParameters:e},t,r)}),this._transportReady=!0}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return wt.Chrome70=v,wt}var vt={},St={},Gs;function lr(){if(Gs)return St;Gs=1,Object.defineProperty(St,"__esModule",{value:!0}),St.getRtpEncodings=h,St.addLegacySimulcast=P;function h({offerMediaObject:w,track:p}){const y=new Set;for(const m of w.ssrcs??[]){if(m.attribute!=="msid")continue;if(m.value.split(" ")[1]===p.id){const S=m.id;y.add(S)}}if(y.size===0)throw new Error(`a=ssrc line with msid information not found [track.id:${p.id}]`);const g=new Map;for(const m of w.ssrcGroups??[]){if(m.semantics!=="FID")continue;let[R,S]=m.ssrcs.split(/\s+/);R=Number(R),S=Number(S),y.has(R)&&(y.delete(R),y.delete(S),g.set(R,S))}for(const m of y)g.set(m,null);const u=[];for(const[m,R]of g){const S={ssrc:m};R&&(S.rtx={ssrc:R}),u.push(S)}return u}function P({offerMediaObject:w,track:p,numStreams:y}){if(y<=1)throw new TypeError("numStreams must be greater than 1");let g,u,m;if(!(w.ssrcs??[]).find(T=>T.attribute!=="msid"?!1:T.value.split(" ")[1]===p.id?(g=T.id,m=T.value.split(" ")[0],!0):!1))throw new Error(`a=ssrc line with msid information not found [track.id:${p.id}]`);(w.ssrcGroups??[]).some(T=>{if(T.semantics!=="FID")return!1;const D=T.ssrcs.split(/\s+/);return Number(D[0])===g?(u=Number(D[1]),!0):!1});const S=w.ssrcs.find(T=>T.attribute==="cname"&&T.id===g);if(!S)throw new Error(`a=ssrc line with cname information not found [track.id:${p.id}]`);const _=S.value,o=[],v=[];for(let T=0;T<y;++T)o.push(g+T),u&&v.push(u+T);w.ssrcGroups=w.ssrcGroups??[],w.ssrcs=w.ssrcs??[],w.ssrcGroups.push({semantics:"SIM",ssrcs:o.join(" ")});for(const T of o)w.ssrcs.push({id:T,attribute:"cname",value:_}),w.ssrcs.push({id:T,attribute:"msid",value:`${m} ${p.id}`});for(let T=0;T<v.length;++T){const D=o[T],n=v[T];w.ssrcs.push({id:n,attribute:"cname",value:_}),w.ssrcs.push({id:n,attribute:"msid",value:`${m} ${p.id}`}),w.ssrcGroups.push({semantics:"FID",ssrcs:`${D} ${n}`})}}return St}var Qs;function Mn(){if(Qs)return vt;Qs=1,Object.defineProperty(vt,"__esModule",{value:!0}),vt.Chrome67=void 0;const h=ce(),P=Y(),w=J(),p=ie(),y=fe(),g=lr(),u=de(),m=me(),R=new P.Logger("Chrome67"),S="Chrome67",_={OS:1024,MIS:1024};let o=class Vi extends u.HandlerInterface{constructor(){super();k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_forcedLocalDtlsRole");k(this,"_pc");k(this,"_sendStream",new MediaStream);k(this,"_mapSendLocalIdRtpSender",new Map);k(this,"_nextSendLocalId",0);k(this,"_mapRecvLocalIdInfo",new Map);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new Vi}get name(){return S}close(){if(R.debug("close()"),this._pc)try{this._pc.close()}catch{}this.emit("@close")}async getNativeRtpCapabilities(){R.debug("getNativeRtpCapabilities()");const D=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"});try{const n=await D.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});try{D.close()}catch{}const i=h.parse(n.sdp);return y.extractRtpCapabilities({sdpObject:i})}catch(n){try{D.close()}catch{}throw n}}async getNativeSctpCapabilities(){return R.debug("getNativeSctpCapabilities()"),{numStreams:_}}run({direction:D,iceParameters:n,iceCandidates:i,dtlsParameters:e,sctpParameters:t,iceServers:r,iceTransportPolicy:s,additionalSettings:a,proprietaryConstraints:d,extendedRtpCapabilities:c}){R.debug("run()"),this._direction=D,this._remoteSdp=new m.RemoteSdp({iceParameters:n,iceCandidates:i,dtlsParameters:e,sctpParameters:t,planB:!0}),this._sendingRtpParametersByKind={audio:p.getSendingRtpParameters("audio",c),video:p.getSendingRtpParameters("video",c)},this._sendingRemoteRtpParametersByKind={audio:p.getSendingRemoteRtpParameters("audio",c),video:p.getSendingRemoteRtpParameters("video",c)},e.role&&e.role!=="auto"&&(this._forcedLocalDtlsRole=e.role==="server"?"client":"server"),this._pc=new RTCPeerConnection({iceServers:r??[],iceTransportPolicy:s??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b",...a},d),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",f=>{this.emit("@icecandidateerror",f)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):this._pc.addEventListener("iceconnectionstatechange",()=>{switch(R.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}})}async updateIceServers(D){R.debug("updateIceServers()");const n=this._pc.getConfiguration();n.iceServers=D,this._pc.setConfiguration(n)}async restartIce(D){if(R.debug("restartIce()"),this._remoteSdp.updateIceParameters(D),!!this._transportReady)if(this._direction==="send"){const n=await this._pc.createOffer({iceRestart:!0});R.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",n),await this._pc.setLocalDescription(n);const i={type:"answer",sdp:this._remoteSdp.getSdp()};R.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",i),await this._pc.setRemoteDescription(i)}else{const n={type:"offer",sdp:this._remoteSdp.getSdp()};R.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",n),await this._pc.setRemoteDescription(n);const i=await this._pc.createAnswer();R.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",i),await this._pc.setLocalDescription(i)}}async getTransportStats(){return this._pc.getStats()}async send({track:D,encodings:n,codecOptions:i,codec:e}){this.assertSendDirection(),R.debug("send() [kind:%s, track.id:%s]",D.kind,D.id),e&&R.warn("send() | codec selection is not available in %s handler",this.name),this._sendStream.addTrack(D),this._pc.addTrack(D,this._sendStream);let t=await this._pc.createOffer(),r=h.parse(t.sdp);r.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed();let s;const a=w.clone(this._sendingRtpParametersByKind[D.kind]);a.codecs=p.reduceCodecs(a.codecs);const d=w.clone(this._sendingRemoteRtpParametersByKind[D.kind]);if(d.codecs=p.reduceCodecs(d.codecs),this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:r}),D.kind==="video"&&n&&n.length>1&&(R.debug("send() | enabling simulcast"),r=h.parse(t.sdp),s=r.media.find(b=>b.type==="video"),g.addLegacySimulcast({offerMediaObject:s,track:D,numStreams:n.length}),t={type:"offer",sdp:h.write(r)}),R.debug("send() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t),r=h.parse(this._pc.localDescription.sdp),s=r.media.find(b=>b.type===D.kind),a.rtcp.cname=y.getCname({offerMediaObject:s}),a.encodings=g.getRtpEncodings({offerMediaObject:s,track:D}),n)for(let b=0;b<a.encodings.length;++b)n[b]&&Object.assign(a.encodings[b],n[b]);if(a.encodings.length>1&&a.codecs[0].mimeType.toLowerCase()==="video/vp8")for(const b of a.encodings)b.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:s,offerRtpParameters:a,answerRtpParameters:d,codecOptions:i});const c={type:"answer",sdp:this._remoteSdp.getSdp()};R.debug("send() | calling pc.setRemoteDescription() [answer:%o]",c),await this._pc.setRemoteDescription(c);const f=String(this._nextSendLocalId);this._nextSendLocalId++;const l=this._pc.getSenders().find(b=>b.track===D);return this._mapSendLocalIdRtpSender.set(f,l),{localId:f,rtpParameters:a,rtpSender:l}}async stopSending(D){this.assertSendDirection(),R.debug("stopSending() [localId:%s]",D);const n=this._mapSendLocalIdRtpSender.get(D);if(!n)throw new Error("associated RTCRtpSender not found");this._pc.removeTrack(n),n.track&&this._sendStream.removeTrack(n.track),this._mapSendLocalIdRtpSender.delete(D);const i=await this._pc.createOffer();R.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",i);try{await this._pc.setLocalDescription(i)}catch(t){if(this._sendStream.getTracks().length===0){R.warn("stopSending() | ignoring expected error due no sending tracks: %s",t.toString());return}throw t}if(this._pc.signalingState==="stable")return;const e={type:"answer",sdp:this._remoteSdp.getSdp()};R.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",e),await this._pc.setRemoteDescription(e)}async pauseSending(D){}async resumeSending(D){}async replaceTrack(D,n){this.assertSendDirection(),n?R.debug("replaceTrack() [localId:%s, track.id:%s]",D,n.id):R.debug("replaceTrack() [localId:%s, no track]",D);const i=this._mapSendLocalIdRtpSender.get(D);if(!i)throw new Error("associated RTCRtpSender not found");const e=i.track;await i.replaceTrack(n),e&&this._sendStream.removeTrack(e),n&&this._sendStream.addTrack(n)}async setMaxSpatialLayer(D,n){this.assertSendDirection(),R.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",D,n);const i=this._mapSendLocalIdRtpSender.get(D);if(!i)throw new Error("associated RTCRtpSender not found");const e=i.getParameters();e.encodings.forEach((t,r)=>{r<=n?t.active=!0:t.active=!1}),await i.setParameters(e)}async setRtpEncodingParameters(D,n){this.assertSendDirection(),R.debug("setRtpEncodingParameters() [localId:%s, params:%o]",D,n);const i=this._mapSendLocalIdRtpSender.get(D);if(!i)throw new Error("associated RTCRtpSender not found");const e=i.getParameters();e.encodings.forEach((t,r)=>{e.encodings[r]={...t,...n}}),await i.setParameters(e)}async getSenderStats(D){this.assertSendDirection();const n=this._mapSendLocalIdRtpSender.get(D);if(!n)throw new Error("associated RTCRtpSender not found");return n.getStats()}async sendDataChannel({ordered:D,maxPacketLifeTime:n,maxRetransmits:i,label:e,protocol:t}){this.assertSendDirection();const r={negotiated:!0,id:this._nextSendSctpStreamId,ordered:D,maxPacketLifeTime:n,maxRetransmitTime:n,maxRetransmits:i,protocol:t};R.debug("sendDataChannel() [options:%o]",r);const s=this._pc.createDataChannel(e,r);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%_.MIS,!this._hasDataChannelMediaSection){const d=await this._pc.createOffer(),c=h.parse(d.sdp),f=c.media.find(b=>b.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:c}),R.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",d),await this._pc.setLocalDescription(d),this._remoteSdp.sendSctpAssociation({offerMediaObject:f});const l={type:"answer",sdp:this._remoteSdp.getSdp()};R.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",l),await this._pc.setRemoteDescription(l),this._hasDataChannelMediaSection=!0}const a={streamId:r.id,ordered:r.ordered,maxPacketLifeTime:r.maxPacketLifeTime,maxRetransmits:r.maxRetransmits};return{dataChannel:s,sctpStreamParameters:a}}async receive(D){this.assertRecvDirection();const n=[];for(const r of D){const{trackId:s,kind:a,rtpParameters:d,streamId:c}=r;R.debug("receive() [trackId:%s, kind:%s]",s,a);const f=a;this._remoteSdp.receive({mid:f,kind:a,offerRtpParameters:d,streamId:c??d.rtcp.cname,trackId:s})}const i={type:"offer",sdp:this._remoteSdp.getSdp()};R.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);let e=await this._pc.createAnswer();const t=h.parse(e.sdp);for(const r of D){const{kind:s,rtpParameters:a}=r,d=s,c=t.media.find(f=>String(f.mid)===d);y.applyCodecParameters({offerRtpParameters:a,answerMediaObject:c})}e={type:"answer",sdp:h.write(t)},this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:t}),R.debug("receive() | calling pc.setLocalDescription() [answer:%o]",e),await this._pc.setLocalDescription(e);for(const r of D){const{kind:s,trackId:a,rtpParameters:d}=r,c=a,f=s,l=this._pc.getReceivers().find(b=>b.track&&b.track.id===c);if(!l)throw new Error("new RTCRtpReceiver not");this._mapRecvLocalIdInfo.set(c,{mid:f,rtpParameters:d,rtpReceiver:l}),n.push({localId:c,track:l.track,rtpReceiver:l})}return n}async stopReceiving(D){this.assertRecvDirection();for(const e of D){R.debug("stopReceiving() [localId:%s]",e);const{mid:t,rtpParameters:r}=this._mapRecvLocalIdInfo.get(e)??{};this._mapRecvLocalIdInfo.delete(e),this._remoteSdp.planBStopReceiving({mid:t,offerRtpParameters:r})}const n={type:"offer",sdp:this._remoteSdp.getSdp()};R.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",n),await this._pc.setRemoteDescription(n);const i=await this._pc.createAnswer();R.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",i),await this._pc.setLocalDescription(i)}async pauseReceiving(D){}async resumeReceiving(D){}async getReceiverStats(D){this.assertRecvDirection();const{rtpReceiver:n}=this._mapRecvLocalIdInfo.get(D)??{};if(!n)throw new Error("associated RTCRtpReceiver not found");return n.getStats()}async receiveDataChannel({sctpStreamParameters:D,label:n,protocol:i}){this.assertRecvDirection();const{streamId:e,ordered:t,maxPacketLifeTime:r,maxRetransmits:s}=D,a={negotiated:!0,id:e,ordered:t,maxPacketLifeTime:r,maxRetransmitTime:r,maxRetransmits:s,protocol:i};R.debug("receiveDataChannel() [options:%o]",a);const d=this._pc.createDataChannel(n,a);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation({oldDataChannelSpec:!0});const c={type:"offer",sdp:this._remoteSdp.getSdp()};R.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",c),await this._pc.setRemoteDescription(c);const f=await this._pc.createAnswer();if(!this._transportReady){const l=h.parse(f.sdp);await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:l})}R.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",f),await this._pc.setLocalDescription(f),this._hasDataChannelMediaSection=!0}return{dataChannel:d}}async setupTransport({localDtlsRole:D,localSdpObject:n}){n||(n=h.parse(this._pc.localDescription.sdp));const i=y.extractDtlsParameters({sdpObject:n});i.role=D,this._remoteSdp.updateDtlsRole(D==="client"?"server":"client"),await new Promise((e,t)=>{this.safeEmit("@connect",{dtlsParameters:i},e,t)}),this._transportReady=!0}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return vt.Chrome67=o,vt}var bt={},Ws;function On(){if(Ws)return bt;Ws=1,Object.defineProperty(bt,"__esModule",{value:!0}),bt.Chrome55=void 0;const h=ce(),P=Y(),w=se(),p=J(),y=ie(),g=fe(),u=lr(),m=de(),R=me(),S=new P.Logger("Chrome55"),_="Chrome55",o={OS:1024,MIS:1024};let v=class Ki extends m.HandlerInterface{constructor(){super();k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_forcedLocalDtlsRole");k(this,"_pc");k(this,"_sendStream",new MediaStream);k(this,"_mapSendLocalIdTrack",new Map);k(this,"_nextSendLocalId",0);k(this,"_mapRecvLocalIdInfo",new Map);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new Ki}get name(){return _}close(){if(S.debug("close()"),this._pc)try{this._pc.close()}catch{}this.emit("@close")}async getNativeRtpCapabilities(){S.debug("getNativeRtpCapabilities()");const n=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"});try{const i=await n.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});try{n.close()}catch{}const e=h.parse(i.sdp);return g.extractRtpCapabilities({sdpObject:e})}catch(i){try{n.close()}catch{}throw i}}async getNativeSctpCapabilities(){return S.debug("getNativeSctpCapabilities()"),{numStreams:o}}run({direction:n,iceParameters:i,iceCandidates:e,dtlsParameters:t,sctpParameters:r,iceServers:s,iceTransportPolicy:a,additionalSettings:d,proprietaryConstraints:c,extendedRtpCapabilities:f}){S.debug("run()"),this._direction=n,this._remoteSdp=new R.RemoteSdp({iceParameters:i,iceCandidates:e,dtlsParameters:t,sctpParameters:r,planB:!0}),this._sendingRtpParametersByKind={audio:y.getSendingRtpParameters("audio",f),video:y.getSendingRtpParameters("video",f)},this._sendingRemoteRtpParametersByKind={audio:y.getSendingRemoteRtpParameters("audio",f),video:y.getSendingRemoteRtpParameters("video",f)},t.role&&t.role!=="auto"&&(this._forcedLocalDtlsRole=t.role==="server"?"client":"server"),this._pc=new RTCPeerConnection({iceServers:s??[],iceTransportPolicy:a??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b",...d},c),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",l=>{this.emit("@icecandidateerror",l)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):this._pc.addEventListener("iceconnectionstatechange",()=>{switch(S.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}})}async updateIceServers(n){S.debug("updateIceServers()");const i=this._pc.getConfiguration();i.iceServers=n,this._pc.setConfiguration(i)}async restartIce(n){if(S.debug("restartIce()"),this._remoteSdp.updateIceParameters(n),!!this._transportReady)if(this._direction==="send"){const i=await this._pc.createOffer({iceRestart:!0});S.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",i),await this._pc.setLocalDescription(i);const e={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",e),await this._pc.setRemoteDescription(e)}else{const i={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);const e=await this._pc.createAnswer();S.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",e),await this._pc.setLocalDescription(e)}}async getTransportStats(){return this._pc.getStats()}async send({track:n,encodings:i,codecOptions:e,codec:t}){this.assertSendDirection(),S.debug("send() [kind:%s, track.id:%s]",n.kind,n.id),t&&S.warn("send() | codec selection is not available in %s handler",this.name),this._sendStream.addTrack(n),this._pc.addStream(this._sendStream);let r=await this._pc.createOffer(),s=h.parse(r.sdp);s.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed();let a;const d=p.clone(this._sendingRtpParametersByKind[n.kind]);d.codecs=y.reduceCodecs(d.codecs);const c=p.clone(this._sendingRemoteRtpParametersByKind[n.kind]);if(c.codecs=y.reduceCodecs(c.codecs),this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:s}),n.kind==="video"&&i&&i.length>1&&(S.debug("send() | enabling simulcast"),s=h.parse(r.sdp),a=s.media.find(b=>b.type==="video"),u.addLegacySimulcast({offerMediaObject:a,track:n,numStreams:i.length}),r={type:"offer",sdp:h.write(s)}),S.debug("send() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r),s=h.parse(this._pc.localDescription.sdp),a=s.media.find(b=>b.type===n.kind),d.rtcp.cname=g.getCname({offerMediaObject:a}),d.encodings=u.getRtpEncodings({offerMediaObject:a,track:n}),i)for(let b=0;b<d.encodings.length;++b)i[b]&&Object.assign(d.encodings[b],i[b]);if(d.encodings.length>1&&d.codecs[0].mimeType.toLowerCase()==="video/vp8")for(const b of d.encodings)b.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:a,offerRtpParameters:d,answerRtpParameters:c,codecOptions:e});const f={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("send() | calling pc.setRemoteDescription() [answer:%o]",f),await this._pc.setRemoteDescription(f);const l=String(this._nextSendLocalId);return this._nextSendLocalId++,this._mapSendLocalIdTrack.set(l,n),{localId:l,rtpParameters:d}}async stopSending(n){this.assertSendDirection(),S.debug("stopSending() [localId:%s]",n);const i=this._mapSendLocalIdTrack.get(n);if(!i)throw new Error("track not found");this._mapSendLocalIdTrack.delete(n),this._sendStream.removeTrack(i),this._pc.addStream(this._sendStream);const e=await this._pc.createOffer();S.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",e);try{await this._pc.setLocalDescription(e)}catch(r){if(this._sendStream.getTracks().length===0){S.warn("stopSending() | ignoring expected error due no sending tracks: %s",r.toString());return}throw r}if(this._pc.signalingState==="stable")return;const t={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}async pauseSending(n){}async resumeSending(n){}async replaceTrack(n,i){throw new w.UnsupportedError("not implemented")}async setMaxSpatialLayer(n,i){throw new w.UnsupportedError(" not implemented")}async setRtpEncodingParameters(n,i){throw new w.UnsupportedError("not supported")}async getSenderStats(n){throw new w.UnsupportedError("not implemented")}async sendDataChannel({ordered:n,maxPacketLifeTime:i,maxRetransmits:e,label:t,protocol:r}){this.assertSendDirection();const s={negotiated:!0,id:this._nextSendSctpStreamId,ordered:n,maxPacketLifeTime:i,maxRetransmitTime:i,maxRetransmits:e,protocol:r};S.debug("sendDataChannel() [options:%o]",s);const a=this._pc.createDataChannel(t,s);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%o.MIS,!this._hasDataChannelMediaSection){const c=await this._pc.createOffer(),f=h.parse(c.sdp),l=f.media.find(E=>E.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:f}),S.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",c),await this._pc.setLocalDescription(c),this._remoteSdp.sendSctpAssociation({offerMediaObject:l});const b={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",b),await this._pc.setRemoteDescription(b),this._hasDataChannelMediaSection=!0}const d={streamId:s.id,ordered:s.ordered,maxPacketLifeTime:s.maxPacketLifeTime,maxRetransmits:s.maxRetransmits};return{dataChannel:a,sctpStreamParameters:d}}async receive(n){this.assertRecvDirection();const i=[];for(const s of n){const{trackId:a,kind:d,rtpParameters:c,streamId:f}=s;S.debug("receive() [trackId:%s, kind:%s]",a,d);const l=d;this._remoteSdp.receive({mid:l,kind:d,offerRtpParameters:c,streamId:f??c.rtcp.cname,trackId:a})}const e={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);let t=await this._pc.createAnswer();const r=h.parse(t.sdp);for(const s of n){const{kind:a,rtpParameters:d}=s,c=a,f=r.media.find(l=>String(l.mid)===c);g.applyCodecParameters({offerRtpParameters:d,answerMediaObject:f})}t={type:"answer",sdp:h.write(r)},this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:r}),S.debug("receive() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t);for(const s of n){const{kind:a,trackId:d,rtpParameters:c}=s,f=a,l=d,b=s.streamId??c.rtcp.cname,x=this._pc.getRemoteStreams().find(C=>C.id===b).getTrackById(l);if(!x)throw new Error("remote track not found");this._mapRecvLocalIdInfo.set(l,{mid:f,rtpParameters:c}),i.push({localId:l,track:x})}return i}async stopReceiving(n){this.assertRecvDirection();for(const t of n){S.debug("stopReceiving() [localId:%s]",t);const{mid:r,rtpParameters:s}=this._mapRecvLocalIdInfo.get(t)??{};this._mapRecvLocalIdInfo.delete(t),this._remoteSdp.planBStopReceiving({mid:r,offerRtpParameters:s})}const i={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);const e=await this._pc.createAnswer();S.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",e),await this._pc.setLocalDescription(e)}async pauseReceiving(n){}async resumeReceiving(n){}async getReceiverStats(n){throw new w.UnsupportedError("not implemented")}async receiveDataChannel({sctpStreamParameters:n,label:i,protocol:e}){this.assertRecvDirection();const{streamId:t,ordered:r,maxPacketLifeTime:s,maxRetransmits:a}=n,d={negotiated:!0,id:t,ordered:r,maxPacketLifeTime:s,maxRetransmitTime:s,maxRetransmits:a,protocol:e};S.debug("receiveDataChannel() [options:%o]",d);const c=this._pc.createDataChannel(i,d);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation({oldDataChannelSpec:!0});const f={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",f),await this._pc.setRemoteDescription(f);const l=await this._pc.createAnswer();if(!this._transportReady){const b=h.parse(l.sdp);await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:b})}S.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",l),await this._pc.setLocalDescription(l),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async setupTransport({localDtlsRole:n,localSdpObject:i}){i||(i=h.parse(this._pc.localDescription.sdp));const e=g.extractDtlsParameters({sdpObject:i});e.role=n,this._remoteSdp.updateDtlsRole(n==="client"?"server":"client"),await new Promise((t,r)=>{this.safeEmit("@connect",{dtlsParameters:e},t,r)}),this._transportReady=!0}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return bt.Chrome55=v,bt}var yt={},Ys;function An(){if(Ys)return yt;Ys=1,Object.defineProperty(yt,"__esModule",{value:!0}),yt.Firefox120=void 0;const h=ce(),P=Y(),w=se(),p=J(),y=ie(),g=fe(),u=Ae(),m=de(),R=me(),S=De(),_=new P.Logger("Firefox120"),o="Firefox120",v={OS:16,MIS:2048};let T=class Gi extends m.HandlerInterface{constructor(){super();k(this,"_closed",!1);k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_pc");k(this,"_mapMidTransceiver",new Map);k(this,"_sendStream",new MediaStream);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new Gi}get name(){return o}close(){if(_.debug("close()"),!this._closed){if(this._closed=!0,this._pc)try{this._pc.close()}catch{}this.emit("@close")}}async getNativeRtpCapabilities(){_.debug("getNativeRtpCapabilities()");const i=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"}),e=document.createElement("canvas");e.getContext("2d");const r=e.captureStream().getVideoTracks()[0];try{i.addTransceiver("audio",{direction:"sendrecv"}),i.addTransceiver(r,{direction:"sendrecv",sendEncodings:[{rid:"r0",maxBitrate:1e5},{rid:"r1",maxBitrate:5e5}]});const s=await i.createOffer();try{e.remove()}catch{}try{r.stop()}catch{}try{i.close()}catch{}const a=h.parse(s.sdp);return g.extractRtpCapabilities({sdpObject:a})}catch(s){try{e.remove()}catch{}try{r.stop()}catch{}try{i.close()}catch{}throw s}}async getNativeSctpCapabilities(){return _.debug("getNativeSctpCapabilities()"),{numStreams:v}}run({direction:i,iceParameters:e,iceCandidates:t,dtlsParameters:r,sctpParameters:s,iceServers:a,iceTransportPolicy:d,additionalSettings:c,proprietaryConstraints:f,extendedRtpCapabilities:l}){this.assertNotClosed(),_.debug("run()"),this._direction=i,this._remoteSdp=new R.RemoteSdp({iceParameters:e,iceCandidates:t,dtlsParameters:r,sctpParameters:s}),this._sendingRtpParametersByKind={audio:y.getSendingRtpParameters("audio",l),video:y.getSendingRtpParameters("video",l)},this._sendingRemoteRtpParametersByKind={audio:y.getSendingRemoteRtpParameters("audio",l),video:y.getSendingRemoteRtpParameters("video",l)},this._pc=new RTCPeerConnection({iceServers:a??[],iceTransportPolicy:d??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",...c},f),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",b=>{this.emit("@icecandidateerror",b)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):this._pc.addEventListener("iceconnectionstatechange",()=>{switch(_.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}})}async updateIceServers(i){throw this.assertNotClosed(),new w.UnsupportedError("not supported")}async restartIce(i){if(this.assertNotClosed(),_.debug("restartIce()"),this._remoteSdp.updateIceParameters(i),!!this._transportReady)if(this._direction==="send"){const e=await this._pc.createOffer({iceRestart:!0});_.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();_.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this.assertNotClosed(),this._pc.getStats()}async send({track:i,encodings:e,codecOptions:t,codec:r,onRtpSender:s}){this.assertNotClosed(),this.assertSendDirection(),_.debug("send() [kind:%s, track.id:%s]",i.kind,i.id),e&&e.length>1&&e.forEach((L,M)=>{L.rid=`r${M}`});const a=p.clone(this._sendingRtpParametersByKind[i.kind]);a.codecs=y.reduceCodecs(a.codecs,r);const d=p.clone(this._sendingRemoteRtpParametersByKind[i.kind]);d.codecs=y.reduceCodecs(d.codecs,r);const c=this._pc.addTransceiver(i,{direction:"sendonly",streams:[this._sendStream],sendEncodings:e});s&&s(c.sender);const f=await this._pc.createOffer();let l=h.parse(f.sdp);l.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed(),this._transportReady||await this.setupTransport({localDtlsRole:"client",localSdpObject:l});const b=(0,S.parse)((e??[{}])[0].scalabilityMode);_.debug("send() | calling pc.setLocalDescription() [offer:%o]",f),await this._pc.setLocalDescription(f);const E=c.mid;a.mid=E,l=h.parse(this._pc.localDescription.sdp);const x=l.media[l.media.length-1];if(a.rtcp.cname=g.getCname({offerMediaObject:x}),!e)a.encodings=u.getRtpEncodings({offerMediaObject:x});else if(e.length===1){const L=u.getRtpEncodings({offerMediaObject:x});Object.assign(L[0],e[0]),a.encodings=L}else a.encodings=e;if(a.encodings.length>1&&(a.codecs[0].mimeType.toLowerCase()==="video/vp8"||a.codecs[0].mimeType.toLowerCase()==="video/h264"))for(const L of a.encodings)L.scalabilityMode?L.scalabilityMode=`L1T${b.temporalLayers}`:L.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:x,offerRtpParameters:a,answerRtpParameters:d,codecOptions:t});const C={type:"answer",sdp:this._remoteSdp.getSdp()};return _.debug("send() | calling pc.setRemoteDescription() [answer:%o]",C),await this._pc.setRemoteDescription(C),this._mapMidTransceiver.set(E,c),{localId:E,rtpParameters:a,rtpSender:c.sender}}async stopSending(i){if(this.assertSendDirection(),_.debug("stopSending() [localId:%s]",i),this._closed)return;const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated transceiver not found");e.sender.replaceTrack(null),this._pc.removeTrack(e.sender),this._remoteSdp.disableMediaSection(e.mid);const t=await this._pc.createOffer();_.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._mapMidTransceiver.delete(i)}async pauseSending(i){this.assertNotClosed(),this.assertSendDirection(),_.debug("pauseSending() [localId:%s]",i);const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated RTCRtpTransceiver not found");e.direction="inactive",this._remoteSdp.pauseMediaSection(i);const t=await this._pc.createOffer();_.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async resumeSending(i){this.assertNotClosed(),this.assertSendDirection(),_.debug("resumeSending() [localId:%s]",i);const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated RTCRtpTransceiver not found");e.direction="sendonly",this._remoteSdp.resumeSendingMediaSection(i);const t=await this._pc.createOffer();_.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(i,e){this.assertNotClosed(),this.assertSendDirection(),e?_.debug("replaceTrack() [localId:%s, track.id:%s]",i,e.id):_.debug("replaceTrack() [localId:%s, no track]",i);const t=this._mapMidTransceiver.get(i);if(!t)throw new Error("associated RTCRtpTransceiver not found");await t.sender.replaceTrack(e)}async setMaxSpatialLayer(i,e){this.assertNotClosed(),this.assertSendDirection(),_.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",i,e);const t=this._mapMidTransceiver.get(i);if(!t)throw new Error("associated transceiver not found");const r=t.sender.getParameters();r.encodings.forEach((d,c)=>{c<=e?d.active=!0:d.active=!1}),await t.sender.setParameters(r),this._remoteSdp.muxMediaSectionSimulcast(i,r.encodings);const s=await this._pc.createOffer();_.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const a={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]",a),await this._pc.setRemoteDescription(a)}async setRtpEncodingParameters(i,e){this.assertNotClosed(),this.assertSendDirection(),_.debug("setRtpEncodingParameters() [localId:%s, params:%o]",i,e);const t=this._mapMidTransceiver.get(i);if(!t)throw new Error("associated RTCRtpTransceiver not found");const r=t.sender.getParameters();r.encodings.forEach((d,c)=>{r.encodings[c]={...d,...e}}),await t.sender.setParameters(r),this._remoteSdp.muxMediaSectionSimulcast(i,r.encodings);const s=await this._pc.createOffer();_.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const a={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]",a),await this._pc.setRemoteDescription(a)}async getSenderStats(i){this.assertNotClosed(),this.assertSendDirection();const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated RTCRtpTransceiver not found");return e.sender.getStats()}async sendDataChannel({ordered:i,maxPacketLifeTime:e,maxRetransmits:t,label:r,protocol:s}){this.assertNotClosed(),this.assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:i,maxPacketLifeTime:e,maxRetransmits:t,protocol:s};_.debug("sendDataChannel() [options:%o]",a);const d=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%v.MIS,!this._hasDataChannelMediaSection){const f=await this._pc.createOffer(),l=h.parse(f.sdp),b=l.media.find(x=>x.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:"client",localSdpObject:l}),_.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",f),await this._pc.setLocalDescription(f),this._remoteSdp.sendSctpAssociation({offerMediaObject:b});const E={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",E),await this._pc.setRemoteDescription(E),this._hasDataChannelMediaSection=!0}const c={streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits};return{dataChannel:d,sctpStreamParameters:c}}async receive(i){this.assertNotClosed(),this.assertRecvDirection();const e=[],t=new Map;for(const d of i){const{trackId:c,kind:f,rtpParameters:l,streamId:b}=d;_.debug("receive() [trackId:%s, kind:%s]",c,f);const E=l.mid??String(this._mapMidTransceiver.size);t.set(c,E),this._remoteSdp.receive({mid:E,kind:f,offerRtpParameters:l,streamId:b??l.rtcp.cname,trackId:c})}const r={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",r),await this._pc.setRemoteDescription(r);for(const d of i){const{trackId:c,onRtpReceiver:f}=d;if(f){const l=t.get(c),b=this._pc.getTransceivers().find(E=>E.mid===l);if(!b)throw new Error("transceiver not found");f(b.receiver)}}let s=await this._pc.createAnswer();const a=h.parse(s.sdp);for(const d of i){const{trackId:c,rtpParameters:f}=d,l=t.get(c),b=a.media.find(E=>String(E.mid)===l);g.applyCodecParameters({offerRtpParameters:f,answerMediaObject:b}),s={type:"answer",sdp:h.write(a)}}this._transportReady||await this.setupTransport({localDtlsRole:"client",localSdpObject:a}),_.debug("receive() | calling pc.setLocalDescription() [answer:%o]",s),await this._pc.setLocalDescription(s);for(const d of i){const{trackId:c}=d,f=t.get(c),l=this._pc.getTransceivers().find(b=>b.mid===f);if(!l)throw new Error("new RTCRtpTransceiver not found");this._mapMidTransceiver.set(f,l),e.push({localId:f,track:l.receiver.track,rtpReceiver:l.receiver})}return e}async stopReceiving(i){if(this.assertRecvDirection(),this._closed)return;for(const r of i){_.debug("stopReceiving() [localId:%s]",r);const s=this._mapMidTransceiver.get(r);if(!s)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(s.mid)}const e={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();_.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t);for(const r of i)this._mapMidTransceiver.delete(r)}async pauseReceiving(i){this.assertNotClosed(),this.assertRecvDirection();for(const r of i){_.debug("pauseReceiving() [localId:%s]",r);const s=this._mapMidTransceiver.get(r);if(!s)throw new Error("associated RTCRtpTransceiver not found");s.direction="inactive",this._remoteSdp.pauseMediaSection(r)}const e={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();_.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}async resumeReceiving(i){this.assertNotClosed(),this.assertRecvDirection();for(const r of i){_.debug("resumeReceiving() [localId:%s]",r);const s=this._mapMidTransceiver.get(r);if(!s)throw new Error("associated RTCRtpTransceiver not found");s.direction="recvonly",this._remoteSdp.resumeReceivingMediaSection(r)}const e={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();_.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}async getReceiverStats(i){this.assertRecvDirection();const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated RTCRtpTransceiver not found");return e.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:i,label:e,protocol:t}){this.assertNotClosed(),this.assertRecvDirection();const{streamId:r,ordered:s,maxPacketLifeTime:a,maxRetransmits:d}=i,c={negotiated:!0,id:r,ordered:s,maxPacketLifeTime:a,maxRetransmits:d,protocol:t};_.debug("receiveDataChannel() [options:%o]",c);const f=this._pc.createDataChannel(e,c);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const l={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",l),await this._pc.setRemoteDescription(l);const b=await this._pc.createAnswer();if(!this._transportReady){const E=h.parse(b.sdp);await this.setupTransport({localDtlsRole:"client",localSdpObject:E})}_.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",b),await this._pc.setLocalDescription(b),this._hasDataChannelMediaSection=!0}return{dataChannel:f}}async setupTransport({localDtlsRole:i,localSdpObject:e}){e||(e=h.parse(this._pc.localDescription.sdp));const t=g.extractDtlsParameters({sdpObject:e});t.role=i,this._remoteSdp.updateDtlsRole(i==="client"?"server":"client"),await new Promise((r,s)=>{this.safeEmit("@connect",{dtlsParameters:t},r,s)}),this._transportReady=!0}assertNotClosed(){if(this._closed)throw new w.InvalidStateError("method called in a closed handler")}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return yt.Firefox120=T,yt}var Rt={},Xs;function jn(){if(Xs)return Rt;Xs=1,Object.defineProperty(Rt,"__esModule",{value:!0}),Rt.Firefox60=void 0;const h=ce(),P=Y(),w=se(),p=J(),y=ie(),g=fe(),u=Ae(),m=de(),R=me(),S=De(),_=new P.Logger("Firefox60"),o="Firefox60",v={OS:16,MIS:2048};let T=class Qi extends m.HandlerInterface{constructor(){super();k(this,"_closed",!1);k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_pc");k(this,"_mapMidTransceiver",new Map);k(this,"_sendStream",new MediaStream);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new Qi}get name(){return o}close(){if(_.debug("close()"),!this._closed){if(this._closed=!0,this._pc)try{this._pc.close()}catch{}this.emit("@close")}}async getNativeRtpCapabilities(){_.debug("getNativeRtpCapabilities()");const i=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"}),e=document.createElement("canvas");e.getContext("2d");const r=e.captureStream().getVideoTracks()[0];try{i.addTransceiver("audio",{direction:"sendrecv"});const s=i.addTransceiver(r,{direction:"sendrecv"}),a=s.sender.getParameters(),d=[{rid:"r0",maxBitrate:1e5},{rid:"r1",maxBitrate:5e5}];a.encodings=d,await s.sender.setParameters(a);const c=await i.createOffer();try{e.remove()}catch{}try{r.stop()}catch{}try{i.close()}catch{}const f=h.parse(c.sdp);return g.extractRtpCapabilities({sdpObject:f})}catch(s){try{e.remove()}catch{}try{r.stop()}catch{}try{i.close()}catch{}throw s}}async getNativeSctpCapabilities(){return _.debug("getNativeSctpCapabilities()"),{numStreams:v}}run({direction:i,iceParameters:e,iceCandidates:t,dtlsParameters:r,sctpParameters:s,iceServers:a,iceTransportPolicy:d,additionalSettings:c,proprietaryConstraints:f,extendedRtpCapabilities:l}){this.assertNotClosed(),_.debug("run()"),this._direction=i,this._remoteSdp=new R.RemoteSdp({iceParameters:e,iceCandidates:t,dtlsParameters:r,sctpParameters:s}),this._sendingRtpParametersByKind={audio:y.getSendingRtpParameters("audio",l),video:y.getSendingRtpParameters("video",l)},this._sendingRemoteRtpParametersByKind={audio:y.getSendingRemoteRtpParameters("audio",l),video:y.getSendingRemoteRtpParameters("video",l)},this._pc=new RTCPeerConnection({iceServers:a??[],iceTransportPolicy:d??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",...c},f),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",b=>{this.emit("@icecandidateerror",b)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):this._pc.addEventListener("iceconnectionstatechange",()=>{switch(_.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}})}async updateIceServers(i){throw this.assertNotClosed(),new w.UnsupportedError("not supported")}async restartIce(i){if(this.assertNotClosed(),_.debug("restartIce()"),this._remoteSdp.updateIceParameters(i),!!this._transportReady)if(this._direction==="send"){const e=await this._pc.createOffer({iceRestart:!0});_.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",e),await this._pc.setLocalDescription(e);const t={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}else{const e={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();_.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}}async getTransportStats(){return this.assertNotClosed(),this._pc.getStats()}async send({track:i,encodings:e,codecOptions:t,codec:r}){this.assertNotClosed(),this.assertSendDirection(),_.debug("send() [kind:%s, track.id:%s]",i.kind,i.id),e&&(e=p.clone(e),e.forEach((C,L)=>{C.rid=`r${L}`}),e.reverse());const s=p.clone(this._sendingRtpParametersByKind[i.kind]);s.codecs=y.reduceCodecs(s.codecs,r);const a=p.clone(this._sendingRemoteRtpParametersByKind[i.kind]);a.codecs=y.reduceCodecs(a.codecs,r);const d=this._pc.addTransceiver(i,{direction:"sendonly",streams:[this._sendStream]});if(e){const C=d.sender.getParameters();C.encodings=e,await d.sender.setParameters(C)}const c=await this._pc.createOffer();let f=h.parse(c.sdp);f.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed(),this._transportReady||await this.setupTransport({localDtlsRole:"client",localSdpObject:f});const l=(0,S.parse)((e??[{}])[0].scalabilityMode);_.debug("send() | calling pc.setLocalDescription() [offer:%o]",c),await this._pc.setLocalDescription(c);const b=d.mid;s.mid=b,f=h.parse(this._pc.localDescription.sdp);const E=f.media[f.media.length-1];if(s.rtcp.cname=g.getCname({offerMediaObject:E}),!e)s.encodings=u.getRtpEncodings({offerMediaObject:E});else if(e.length===1){const C=u.getRtpEncodings({offerMediaObject:E});Object.assign(C[0],e[0]),s.encodings=C}else s.encodings=e.reverse();if(s.encodings.length>1&&(s.codecs[0].mimeType.toLowerCase()==="video/vp8"||s.codecs[0].mimeType.toLowerCase()==="video/h264"))for(const C of s.encodings)C.scalabilityMode?C.scalabilityMode=`L1T${l.temporalLayers}`:C.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:E,offerRtpParameters:s,answerRtpParameters:a,codecOptions:t});const x={type:"answer",sdp:this._remoteSdp.getSdp()};return _.debug("send() | calling pc.setRemoteDescription() [answer:%o]",x),await this._pc.setRemoteDescription(x),this._mapMidTransceiver.set(b,d),{localId:b,rtpParameters:s,rtpSender:d.sender}}async stopSending(i){if(this.assertSendDirection(),_.debug("stopSending() [localId:%s]",i),this._closed)return;const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated transceiver not found");e.sender.replaceTrack(null),this._pc.removeTrack(e.sender),this._remoteSdp.disableMediaSection(e.mid);const t=await this._pc.createOffer();_.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r),this._mapMidTransceiver.delete(i)}async pauseSending(i){this.assertNotClosed(),this.assertSendDirection(),_.debug("pauseSending() [localId:%s]",i);const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated RTCRtpTransceiver not found");e.direction="inactive",this._remoteSdp.pauseMediaSection(i);const t=await this._pc.createOffer();_.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async resumeSending(i){this.assertNotClosed(),this.assertSendDirection(),_.debug("resumeSending() [localId:%s]",i);const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated RTCRtpTransceiver not found");e.direction="sendonly",this._remoteSdp.resumeSendingMediaSection(i);const t=await this._pc.createOffer();_.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}async replaceTrack(i,e){this.assertNotClosed(),this.assertSendDirection(),e?_.debug("replaceTrack() [localId:%s, track.id:%s]",i,e.id):_.debug("replaceTrack() [localId:%s, no track]",i);const t=this._mapMidTransceiver.get(i);if(!t)throw new Error("associated RTCRtpTransceiver not found");await t.sender.replaceTrack(e)}async setMaxSpatialLayer(i,e){this.assertNotClosed(),this.assertSendDirection(),_.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",i,e);const t=this._mapMidTransceiver.get(i);if(!t)throw new Error("associated transceiver not found");const r=t.sender.getParameters();e=r.encodings.length-1-e,r.encodings.forEach((d,c)=>{c>=e?d.active=!0:d.active=!1}),await t.sender.setParameters(r),this._remoteSdp.muxMediaSectionSimulcast(i,r.encodings);const s=await this._pc.createOffer();_.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const a={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]",a),await this._pc.setRemoteDescription(a)}async setRtpEncodingParameters(i,e){this.assertNotClosed(),this.assertSendDirection(),_.debug("setRtpEncodingParameters() [localId:%s, params:%o]",i,e);const t=this._mapMidTransceiver.get(i);if(!t)throw new Error("associated RTCRtpTransceiver not found");const r=t.sender.getParameters();r.encodings.forEach((d,c)=>{r.encodings[c]={...d,...e}}),await t.sender.setParameters(r),this._remoteSdp.muxMediaSectionSimulcast(i,r.encodings);const s=await this._pc.createOffer();_.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const a={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]",a),await this._pc.setRemoteDescription(a)}async getSenderStats(i){this.assertNotClosed(),this.assertSendDirection();const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated RTCRtpTransceiver not found");return e.sender.getStats()}async sendDataChannel({ordered:i,maxPacketLifeTime:e,maxRetransmits:t,label:r,protocol:s}){this.assertNotClosed(),this.assertSendDirection();const a={negotiated:!0,id:this._nextSendSctpStreamId,ordered:i,maxPacketLifeTime:e,maxRetransmits:t,protocol:s};_.debug("sendDataChannel() [options:%o]",a);const d=this._pc.createDataChannel(r,a);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%v.MIS,!this._hasDataChannelMediaSection){const f=await this._pc.createOffer(),l=h.parse(f.sdp),b=l.media.find(x=>x.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:"client",localSdpObject:l}),_.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",f),await this._pc.setLocalDescription(f),this._remoteSdp.sendSctpAssociation({offerMediaObject:b});const E={type:"answer",sdp:this._remoteSdp.getSdp()};_.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",E),await this._pc.setRemoteDescription(E),this._hasDataChannelMediaSection=!0}const c={streamId:a.id,ordered:a.ordered,maxPacketLifeTime:a.maxPacketLifeTime,maxRetransmits:a.maxRetransmits};return{dataChannel:d,sctpStreamParameters:c}}async receive(i){this.assertNotClosed(),this.assertRecvDirection();const e=[],t=new Map;for(const d of i){const{trackId:c,kind:f,rtpParameters:l,streamId:b}=d;_.debug("receive() [trackId:%s, kind:%s]",c,f);const E=l.mid??String(this._mapMidTransceiver.size);t.set(c,E),this._remoteSdp.receive({mid:E,kind:f,offerRtpParameters:l,streamId:b??l.rtcp.cname,trackId:c})}const r={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",r),await this._pc.setRemoteDescription(r);let s=await this._pc.createAnswer();const a=h.parse(s.sdp);for(const d of i){const{trackId:c,rtpParameters:f}=d,l=t.get(c),b=a.media.find(E=>String(E.mid)===l);g.applyCodecParameters({offerRtpParameters:f,answerMediaObject:b}),s={type:"answer",sdp:h.write(a)}}this._transportReady||await this.setupTransport({localDtlsRole:"client",localSdpObject:a}),_.debug("receive() | calling pc.setLocalDescription() [answer:%o]",s),await this._pc.setLocalDescription(s);for(const d of i){const{trackId:c}=d,f=t.get(c),l=this._pc.getTransceivers().find(b=>b.mid===f);if(!l)throw new Error("new RTCRtpTransceiver not found");this._mapMidTransceiver.set(f,l),e.push({localId:f,track:l.receiver.track,rtpReceiver:l.receiver})}return e}async stopReceiving(i){if(this.assertRecvDirection(),this._closed)return;for(const r of i){_.debug("stopReceiving() [localId:%s]",r);const s=this._mapMidTransceiver.get(r);if(!s)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(s.mid)}const e={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();_.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t);for(const r of i)this._mapMidTransceiver.delete(r)}async pauseReceiving(i){this.assertNotClosed(),this.assertRecvDirection();for(const r of i){_.debug("pauseReceiving() [localId:%s]",r);const s=this._mapMidTransceiver.get(r);if(!s)throw new Error("associated RTCRtpTransceiver not found");s.direction="inactive",this._remoteSdp.pauseMediaSection(r)}const e={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();_.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}async resumeReceiving(i){this.assertNotClosed(),this.assertRecvDirection();for(const r of i){_.debug("resumeReceiving() [localId:%s]",r);const s=this._mapMidTransceiver.get(r);if(!s)throw new Error("associated RTCRtpTransceiver not found");s.direction="recvonly",this._remoteSdp.resumeReceivingMediaSection(r)}const e={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]",e),await this._pc.setRemoteDescription(e);const t=await this._pc.createAnswer();_.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]",t),await this._pc.setLocalDescription(t)}async getReceiverStats(i){this.assertRecvDirection();const e=this._mapMidTransceiver.get(i);if(!e)throw new Error("associated RTCRtpTransceiver not found");return e.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:i,label:e,protocol:t}){this.assertNotClosed(),this.assertRecvDirection();const{streamId:r,ordered:s,maxPacketLifeTime:a,maxRetransmits:d}=i,c={negotiated:!0,id:r,ordered:s,maxPacketLifeTime:a,maxRetransmits:d,protocol:t};_.debug("receiveDataChannel() [options:%o]",c);const f=this._pc.createDataChannel(e,c);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const l={type:"offer",sdp:this._remoteSdp.getSdp()};_.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",l),await this._pc.setRemoteDescription(l);const b=await this._pc.createAnswer();if(!this._transportReady){const E=h.parse(b.sdp);await this.setupTransport({localDtlsRole:"client",localSdpObject:E})}_.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",b),await this._pc.setLocalDescription(b),this._hasDataChannelMediaSection=!0}return{dataChannel:f}}async setupTransport({localDtlsRole:i,localSdpObject:e}){e||(e=h.parse(this._pc.localDescription.sdp));const t=g.extractDtlsParameters({sdpObject:e});t.role=i,this._remoteSdp.updateDtlsRole(i==="client"?"server":"client"),await new Promise((r,s)=>{this.safeEmit("@connect",{dtlsParameters:t},r,s)}),this._transportReady=!0}assertNotClosed(){if(this._closed)throw new w.InvalidStateError("method called in a closed handler")}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return Rt.Firefox60=T,Rt}var Ct={},Js;function Nn(){if(Js)return Ct;Js=1,Object.defineProperty(Ct,"__esModule",{value:!0}),Ct.Safari12=void 0;const h=ce(),P=Y(),w=J(),p=ie(),y=fe(),g=Ae(),u=pr(),m=se(),R=de(),S=me(),_=De(),o=new P.Logger("Safari12"),v="Safari12",T={OS:1024,MIS:1024};let D=class Wi extends R.HandlerInterface{constructor(){super();k(this,"_closed",!1);k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_forcedLocalDtlsRole");k(this,"_pc");k(this,"_mapMidTransceiver",new Map);k(this,"_sendStream",new MediaStream);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new Wi}get name(){return v}close(){if(o.debug("close()"),!this._closed){if(this._closed=!0,this._pc)try{this._pc.close()}catch{}this.emit("@close")}}async getNativeRtpCapabilities(){o.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"});try{e.addTransceiver("audio"),e.addTransceiver("video");const t=await e.createOffer();try{e.close()}catch{}const r=h.parse(t.sdp),s=y.extractRtpCapabilities({sdpObject:r});return u.addNackSupportForOpus(s),s}catch(t){try{e.close()}catch{}throw t}}async getNativeSctpCapabilities(){return o.debug("getNativeSctpCapabilities()"),{numStreams:T}}run({direction:e,iceParameters:t,iceCandidates:r,dtlsParameters:s,sctpParameters:a,iceServers:d,iceTransportPolicy:c,additionalSettings:f,proprietaryConstraints:l,extendedRtpCapabilities:b}){this.assertNotClosed(),o.debug("run()"),this._direction=e,this._remoteSdp=new S.RemoteSdp({iceParameters:t,iceCandidates:r,dtlsParameters:s,sctpParameters:a}),this._sendingRtpParametersByKind={audio:p.getSendingRtpParameters("audio",b),video:p.getSendingRtpParameters("video",b)},this._sendingRemoteRtpParametersByKind={audio:p.getSendingRemoteRtpParameters("audio",b),video:p.getSendingRemoteRtpParameters("video",b)},s.role&&s.role!=="auto"&&(this._forcedLocalDtlsRole=s.role==="server"?"client":"server"),this._pc=new RTCPeerConnection({iceServers:d??[],iceTransportPolicy:c??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",...f},l),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",E=>{this.emit("@icecandidateerror",E)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):this._pc.addEventListener("iceconnectionstatechange",()=>{switch(o.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}})}async updateIceServers(e){this.assertNotClosed(),o.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(this.assertNotClosed(),o.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),!!this._transportReady)if(this._direction==="send"){const t=await this._pc.createOffer({iceRestart:!0});o.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}else{const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}}async getTransportStats(){return this.assertNotClosed(),this._pc.getStats()}async send({track:e,encodings:t,codecOptions:r,codec:s,onRtpSender:a}){this.assertNotClosed(),this.assertSendDirection(),o.debug("send() [kind:%s, track.id:%s]",e.kind,e.id);const d=w.clone(this._sendingRtpParametersByKind[e.kind]);d.codecs=p.reduceCodecs(d.codecs,s);const c=w.clone(this._sendingRemoteRtpParametersByKind[e.kind]);c.codecs=p.reduceCodecs(c.codecs,s);const f=this._remoteSdp.getNextMediaSectionIdx(),l=this._pc.addTransceiver(e,{direction:"sendonly",streams:[this._sendStream]});a&&a(l.sender);let b=await this._pc.createOffer(),E=h.parse(b.sdp);E.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed();let x;this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:E});const C=(0,_.parse)((t??[{}])[0].scalabilityMode);t&&t.length>1&&(o.debug("send() | enabling legacy simulcast"),E=h.parse(b.sdp),x=E.media[f.idx],g.addLegacySimulcast({offerMediaObject:x,numStreams:t.length}),b={type:"offer",sdp:h.write(E)}),o.debug("send() | calling pc.setLocalDescription() [offer:%o]",b),await this._pc.setLocalDescription(b);const L=l.mid;if(d.mid=L,E=h.parse(this._pc.localDescription.sdp),x=E.media[f.idx],d.rtcp.cname=y.getCname({offerMediaObject:x}),d.encodings=g.getRtpEncodings({offerMediaObject:x}),t)for(let I=0;I<d.encodings.length;++I)t[I]&&Object.assign(d.encodings[I],t[I]);if(d.encodings.length>1&&(d.codecs[0].mimeType.toLowerCase()==="video/vp8"||d.codecs[0].mimeType.toLowerCase()==="video/h264"))for(const I of d.encodings)I.scalabilityMode?I.scalabilityMode=`L1T${C.temporalLayers}`:I.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:x,reuseMid:f.reuseMid,offerRtpParameters:d,answerRtpParameters:c,codecOptions:r});const M={type:"answer",sdp:this._remoteSdp.getSdp()};return o.debug("send() | calling pc.setRemoteDescription() [answer:%o]",M),await this._pc.setRemoteDescription(M),this._mapMidTransceiver.set(L,l),{localId:L,rtpParameters:d,rtpSender:l.sender}}async stopSending(e){if(this.assertSendDirection(),this._closed)return;o.debug("stopSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");if(t.sender.replaceTrack(null),this._pc.removeTrack(t.sender),this._remoteSdp.closeMediaSection(t.mid))try{t.stop()}catch{}const s=await this._pc.createOffer();o.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const a={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",a),await this._pc.setRemoteDescription(a),this._mapMidTransceiver.delete(e)}async pauseSending(e){this.assertNotClosed(),this.assertSendDirection(),o.debug("pauseSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");t.direction="inactive",this._remoteSdp.pauseMediaSection(e);const r=await this._pc.createOffer();o.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async resumeSending(e){this.assertNotClosed(),this.assertSendDirection(),o.debug("resumeSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");t.direction="sendonly",this._remoteSdp.resumeSendingMediaSection(e);const r=await this._pc.createOffer();o.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async replaceTrack(e,t){this.assertNotClosed(),this.assertSendDirection(),t?o.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):o.debug("replaceTrack() [localId:%s, no track]",e);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");await r.sender.replaceTrack(t)}async setMaxSpatialLayer(e,t){this.assertNotClosed(),this.assertSendDirection(),o.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");const s=r.sender.getParameters();s.encodings.forEach((c,f)=>{f<=t?c.active=!0:c.active=!1}),await r.sender.setParameters(s),this._remoteSdp.muxMediaSectionSimulcast(e,s.encodings);const a=await this._pc.createOffer();o.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a);const d={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d)}async setRtpEncodingParameters(e,t){this.assertNotClosed(),this.assertSendDirection(),o.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");const s=r.sender.getParameters();s.encodings.forEach((c,f)=>{s.encodings[f]={...c,...t}}),await r.sender.setParameters(s),this._remoteSdp.muxMediaSectionSimulcast(e,s.encodings);const a=await this._pc.createOffer();o.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a);const d={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d)}async getSenderStats(e){this.assertNotClosed(),this.assertSendDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.sender.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:r,label:s,protocol:a}){this.assertNotClosed(),this.assertSendDirection();const d={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmits:r,protocol:a};o.debug("sendDataChannel() [options:%o]",d);const c=this._pc.createDataChannel(s,d);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%T.MIS,!this._hasDataChannelMediaSection){const l=await this._pc.createOffer(),b=h.parse(l.sdp),E=b.media.find(C=>C.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:b}),o.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",l),await this._pc.setLocalDescription(l),this._remoteSdp.sendSctpAssociation({offerMediaObject:E});const x={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",x),await this._pc.setRemoteDescription(x),this._hasDataChannelMediaSection=!0}const f={streamId:d.id,ordered:d.ordered,maxPacketLifeTime:d.maxPacketLifeTime,maxRetransmits:d.maxRetransmits};return{dataChannel:c,sctpStreamParameters:f}}async receive(e){this.assertNotClosed(),this.assertRecvDirection();const t=[],r=new Map;for(const c of e){const{trackId:f,kind:l,rtpParameters:b,streamId:E}=c;o.debug("receive() [trackId:%s, kind:%s]",f,l);const x=b.mid??String(this._mapMidTransceiver.size);r.set(f,x),this._remoteSdp.receive({mid:x,kind:l,offerRtpParameters:b,streamId:E??b.rtcp.cname,trackId:f})}const s={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",s),await this._pc.setRemoteDescription(s);for(const c of e){const{trackId:f,onRtpReceiver:l}=c;if(l){const b=r.get(f),E=this._pc.getTransceivers().find(x=>x.mid===b);if(!E)throw new Error("transceiver not found");l(E.receiver)}}let a=await this._pc.createAnswer();const d=h.parse(a.sdp);for(const c of e){const{trackId:f,rtpParameters:l}=c,b=r.get(f),E=d.media.find(x=>String(x.mid)===b);y.applyCodecParameters({offerRtpParameters:l,answerMediaObject:E})}a={type:"answer",sdp:h.write(d)},this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:d}),o.debug("receive() | calling pc.setLocalDescription() [answer:%o]",a),await this._pc.setLocalDescription(a);for(const c of e){const{trackId:f}=c,l=r.get(f),b=this._pc.getTransceivers().find(E=>E.mid===l);if(!b)throw new Error("new RTCRtpTransceiver not found");this._mapMidTransceiver.set(l,b),t.push({localId:l,track:b.receiver.track,rtpReceiver:b.receiver})}return t}async stopReceiving(e){if(this.assertRecvDirection(),this._closed)return;for(const s of e){o.debug("stopReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(a.mid)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r);for(const s of e)this._mapMidTransceiver.delete(s)}async pauseReceiving(e){this.assertNotClosed(),this.assertRecvDirection();for(const s of e){o.debug("pauseReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");a.direction="inactive",this._remoteSdp.pauseMediaSection(s)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async resumeReceiving(e){this.assertNotClosed(),this.assertRecvDirection();for(const s of e){o.debug("resumeReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");a.direction="recvonly",this._remoteSdp.resumeReceivingMediaSection(s)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async getReceiverStats(e){this.assertNotClosed(),this.assertRecvDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:r}){this.assertNotClosed(),this.assertRecvDirection();const{streamId:s,ordered:a,maxPacketLifeTime:d,maxRetransmits:c}=e,f={negotiated:!0,id:s,ordered:a,maxPacketLifeTime:d,maxRetransmits:c,protocol:r};o.debug("receiveDataChannel() [options:%o]",f);const l=this._pc.createDataChannel(t,f);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const b={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",b),await this._pc.setRemoteDescription(b);const E=await this._pc.createAnswer();if(!this._transportReady){const x=h.parse(E.sdp);await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:x})}o.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",E),await this._pc.setLocalDescription(E),this._hasDataChannelMediaSection=!0}return{dataChannel:l}}async setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=h.parse(this._pc.localDescription.sdp));const r=y.extractDtlsParameters({sdpObject:t});r.role=e,this._remoteSdp.updateDtlsRole(e==="client"?"server":"client"),await new Promise((s,a)=>{this.safeEmit("@connect",{dtlsParameters:r},s,a)}),this._transportReady=!0}assertNotClosed(){if(this._closed)throw new m.InvalidStateError("method called in a closed handler")}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return Ct.Safari12=D,Ct}var Tt={},Zs;function Fn(){if(Zs)return Tt;Zs=1,Object.defineProperty(Tt,"__esModule",{value:!0}),Tt.Safari11=void 0;const h=ce(),P=Y(),w=J(),p=ie(),y=fe(),g=lr(),u=de(),m=me(),R=new P.Logger("Safari11"),S="Safari11",_={OS:1024,MIS:1024};let o=class Yi extends u.HandlerInterface{constructor(){super();k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_forcedLocalDtlsRole");k(this,"_pc");k(this,"_sendStream",new MediaStream);k(this,"_mapSendLocalIdRtpSender",new Map);k(this,"_nextSendLocalId",0);k(this,"_mapRecvLocalIdInfo",new Map);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new Yi}get name(){return S}close(){if(R.debug("close()"),this._pc)try{this._pc.close()}catch{}this.emit("@close")}async getNativeRtpCapabilities(){R.debug("getNativeRtpCapabilities()");const D=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"});try{const n=await D.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});try{D.close()}catch{}const i=h.parse(n.sdp);return y.extractRtpCapabilities({sdpObject:i})}catch(n){try{D.close()}catch{}throw n}}async getNativeSctpCapabilities(){return R.debug("getNativeSctpCapabilities()"),{numStreams:_}}run({direction:D,iceParameters:n,iceCandidates:i,dtlsParameters:e,sctpParameters:t,iceServers:r,iceTransportPolicy:s,additionalSettings:a,proprietaryConstraints:d,extendedRtpCapabilities:c}){R.debug("run()"),this._direction=D,this._remoteSdp=new m.RemoteSdp({iceParameters:n,iceCandidates:i,dtlsParameters:e,sctpParameters:t,planB:!0}),this._sendingRtpParametersByKind={audio:p.getSendingRtpParameters("audio",c),video:p.getSendingRtpParameters("video",c)},this._sendingRemoteRtpParametersByKind={audio:p.getSendingRemoteRtpParameters("audio",c),video:p.getSendingRemoteRtpParameters("video",c)},e.role&&e.role!=="auto"&&(this._forcedLocalDtlsRole=e.role==="server"?"client":"server"),this._pc=new RTCPeerConnection({iceServers:r??[],iceTransportPolicy:s??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",...a},d),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",f=>{this.emit("@icecandidateerror",f)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):this._pc.addEventListener("iceconnectionstatechange",()=>{switch(R.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}})}async updateIceServers(D){R.debug("updateIceServers()");const n=this._pc.getConfiguration();n.iceServers=D,this._pc.setConfiguration(n)}async restartIce(D){if(R.debug("restartIce()"),this._remoteSdp.updateIceParameters(D),!!this._transportReady)if(this._direction==="send"){const n=await this._pc.createOffer({iceRestart:!0});R.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",n),await this._pc.setLocalDescription(n);const i={type:"answer",sdp:this._remoteSdp.getSdp()};R.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",i),await this._pc.setRemoteDescription(i)}else{const n={type:"offer",sdp:this._remoteSdp.getSdp()};R.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",n),await this._pc.setRemoteDescription(n);const i=await this._pc.createAnswer();R.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",i),await this._pc.setLocalDescription(i)}}async getTransportStats(){return this._pc.getStats()}async send({track:D,encodings:n,codecOptions:i,codec:e}){this.assertSendDirection(),R.debug("send() [kind:%s, track.id:%s]",D.kind,D.id),e&&R.warn("send() | codec selection is not available in %s handler",this.name),this._sendStream.addTrack(D),this._pc.addTrack(D,this._sendStream);let t=await this._pc.createOffer(),r=h.parse(t.sdp);r.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed();let s;const a=w.clone(this._sendingRtpParametersByKind[D.kind]);a.codecs=p.reduceCodecs(a.codecs);const d=w.clone(this._sendingRemoteRtpParametersByKind[D.kind]);if(d.codecs=p.reduceCodecs(d.codecs),this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:r}),D.kind==="video"&&n&&n.length>1&&(R.debug("send() | enabling simulcast"),r=h.parse(t.sdp),s=r.media.find(b=>b.type==="video"),g.addLegacySimulcast({offerMediaObject:s,track:D,numStreams:n.length}),t={type:"offer",sdp:h.write(r)}),R.debug("send() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t),r=h.parse(this._pc.localDescription.sdp),s=r.media.find(b=>b.type===D.kind),a.rtcp.cname=y.getCname({offerMediaObject:s}),a.encodings=g.getRtpEncodings({offerMediaObject:s,track:D}),n)for(let b=0;b<a.encodings.length;++b)n[b]&&Object.assign(a.encodings[b],n[b]);if(a.encodings.length>1&&a.codecs[0].mimeType.toLowerCase()==="video/vp8")for(const b of a.encodings)b.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:s,offerRtpParameters:a,answerRtpParameters:d,codecOptions:i});const c={type:"answer",sdp:this._remoteSdp.getSdp()};R.debug("send() | calling pc.setRemoteDescription() [answer:%o]",c),await this._pc.setRemoteDescription(c);const f=String(this._nextSendLocalId);this._nextSendLocalId++;const l=this._pc.getSenders().find(b=>b.track===D);return this._mapSendLocalIdRtpSender.set(f,l),{localId:f,rtpParameters:a,rtpSender:l}}async stopSending(D){this.assertSendDirection();const n=this._mapSendLocalIdRtpSender.get(D);if(!n)throw new Error("associated RTCRtpSender not found");n.track&&this._sendStream.removeTrack(n.track),this._mapSendLocalIdRtpSender.delete(D);const i=await this._pc.createOffer();R.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",i);try{await this._pc.setLocalDescription(i)}catch(t){if(this._sendStream.getTracks().length===0){R.warn("stopSending() | ignoring expected error due no sending tracks: %s",t.toString());return}throw t}if(this._pc.signalingState==="stable")return;const e={type:"answer",sdp:this._remoteSdp.getSdp()};R.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",e),await this._pc.setRemoteDescription(e)}async pauseSending(D){}async resumeSending(D){}async replaceTrack(D,n){this.assertSendDirection(),n?R.debug("replaceTrack() [localId:%s, track.id:%s]",D,n.id):R.debug("replaceTrack() [localId:%s, no track]",D);const i=this._mapSendLocalIdRtpSender.get(D);if(!i)throw new Error("associated RTCRtpSender not found");const e=i.track;await i.replaceTrack(n),e&&this._sendStream.removeTrack(e),n&&this._sendStream.addTrack(n)}async setMaxSpatialLayer(D,n){this.assertSendDirection(),R.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",D,n);const i=this._mapSendLocalIdRtpSender.get(D);if(!i)throw new Error("associated RTCRtpSender not found");const e=i.getParameters();e.encodings.forEach((t,r)=>{r<=n?t.active=!0:t.active=!1}),await i.setParameters(e)}async setRtpEncodingParameters(D,n){this.assertSendDirection(),R.debug("setRtpEncodingParameters() [localId:%s, params:%o]",D,n);const i=this._mapSendLocalIdRtpSender.get(D);if(!i)throw new Error("associated RTCRtpSender not found");const e=i.getParameters();e.encodings.forEach((t,r)=>{e.encodings[r]={...t,...n}}),await i.setParameters(e)}async getSenderStats(D){this.assertSendDirection();const n=this._mapSendLocalIdRtpSender.get(D);if(!n)throw new Error("associated RTCRtpSender not found");return n.getStats()}async sendDataChannel({ordered:D,maxPacketLifeTime:n,maxRetransmits:i,label:e,protocol:t}){this.assertSendDirection();const r={negotiated:!0,id:this._nextSendSctpStreamId,ordered:D,maxPacketLifeTime:n,maxRetransmits:i,protocol:t};R.debug("sendDataChannel() [options:%o]",r);const s=this._pc.createDataChannel(e,r);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%_.MIS,!this._hasDataChannelMediaSection){const d=await this._pc.createOffer(),c=h.parse(d.sdp),f=c.media.find(b=>b.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:c}),R.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",d),await this._pc.setLocalDescription(d),this._remoteSdp.sendSctpAssociation({offerMediaObject:f});const l={type:"answer",sdp:this._remoteSdp.getSdp()};R.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",l),await this._pc.setRemoteDescription(l),this._hasDataChannelMediaSection=!0}const a={streamId:r.id,ordered:r.ordered,maxPacketLifeTime:r.maxPacketLifeTime,maxRetransmits:r.maxRetransmits};return{dataChannel:s,sctpStreamParameters:a}}async receive(D){this.assertRecvDirection();const n=[];for(const r of D){const{trackId:s,kind:a,rtpParameters:d,streamId:c}=r;R.debug("receive() [trackId:%s, kind:%s]",s,a);const f=a;this._remoteSdp.receive({mid:f,kind:a,offerRtpParameters:d,streamId:c??d.rtcp.cname,trackId:s})}const i={type:"offer",sdp:this._remoteSdp.getSdp()};R.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);let e=await this._pc.createAnswer();const t=h.parse(e.sdp);for(const r of D){const{kind:s,rtpParameters:a}=r,d=s,c=t.media.find(f=>String(f.mid)===d);y.applyCodecParameters({offerRtpParameters:a,answerMediaObject:c})}e={type:"answer",sdp:h.write(t)},this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:t}),R.debug("receive() | calling pc.setLocalDescription() [answer:%o]",e),await this._pc.setLocalDescription(e);for(const r of D){const{kind:s,trackId:a,rtpParameters:d}=r,c=s,f=a,l=this._pc.getReceivers().find(b=>b.track&&b.track.id===f);if(!l)throw new Error("new RTCRtpReceiver not");this._mapRecvLocalIdInfo.set(f,{mid:c,rtpParameters:d,rtpReceiver:l}),n.push({localId:f,track:l.track,rtpReceiver:l})}return n}async stopReceiving(D){this.assertRecvDirection();for(const e of D){R.debug("stopReceiving() [localId:%s]",e);const{mid:t,rtpParameters:r}=this._mapRecvLocalIdInfo.get(e)??{};this._mapRecvLocalIdInfo.delete(e),this._remoteSdp.planBStopReceiving({mid:t,offerRtpParameters:r})}const n={type:"offer",sdp:this._remoteSdp.getSdp()};R.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",n),await this._pc.setRemoteDescription(n);const i=await this._pc.createAnswer();R.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",i),await this._pc.setLocalDescription(i)}async getReceiverStats(D){this.assertRecvDirection();const{rtpReceiver:n}=this._mapRecvLocalIdInfo.get(D)??{};if(!n)throw new Error("associated RTCRtpReceiver not found");return n.getStats()}async pauseReceiving(D){}async resumeReceiving(D){}async receiveDataChannel({sctpStreamParameters:D,label:n,protocol:i}){this.assertRecvDirection();const{streamId:e,ordered:t,maxPacketLifeTime:r,maxRetransmits:s}=D,a={negotiated:!0,id:e,ordered:t,maxPacketLifeTime:r,maxRetransmits:s,protocol:i};R.debug("receiveDataChannel() [options:%o]",a);const d=this._pc.createDataChannel(n,a);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation({oldDataChannelSpec:!0});const c={type:"offer",sdp:this._remoteSdp.getSdp()};R.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",c),await this._pc.setRemoteDescription(c);const f=await this._pc.createAnswer();if(!this._transportReady){const l=h.parse(f.sdp);await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:l})}R.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",f),await this._pc.setLocalDescription(f),this._hasDataChannelMediaSection=!0}return{dataChannel:d}}async setupTransport({localDtlsRole:D,localSdpObject:n}){n||(n=h.parse(this._pc.localDescription.sdp));const i=y.extractDtlsParameters({sdpObject:n});i.role=D,this._remoteSdp.updateDtlsRole(D==="client"?"server":"client"),await new Promise((e,t)=>{this.safeEmit("@connect",{dtlsParameters:i},e,t)}),this._transportReady=!0}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return Tt.Safari11=o,Tt}var Dt={},Pt={},ei;function Un(){if(ei)return Pt;ei=1,Object.defineProperty(Pt,"__esModule",{value:!0}),Pt.getCapabilities=P,Pt.mangleRtpParameters=w;const h=J();function P(){const p=RTCRtpReceiver.getCapabilities(),y=h.clone(p);for(const g of y.codecs??[]){if(g.channels=g.numChannels,delete g.numChannels,g.mimeType=g.mimeType??`${g.kind}/${g.name}`,g.parameters){const u=g.parameters;u.apt&&(u.apt=Number(u.apt)),u["packetization-mode"]&&(u["packetization-mode"]=Number(u["packetization-mode"]))}for(const u of g.rtcpFeedback??[])u.parameter||(u.parameter="")}return y}function w(p){const y=h.clone(p);y.mid&&(y.muxId=y.mid,delete y.mid);for(const g of y.codecs)g.channels&&(g.numChannels=g.channels,delete g.channels),g.mimeType&&!g.name&&(g.name=g.mimeType.split("/")[1]),delete g.mimeType;return y}return Pt}var ti;function qn(){if(ti)return Dt;ti=1,Object.defineProperty(Dt,"__esModule",{value:!0}),Dt.Edge11=void 0;const h=Y(),P=se(),w=J(),p=ie(),y=Un(),g=de(),u=new h.Logger("Edge11"),m="Edge11";let R=class Xi extends g.HandlerInterface{constructor(){super();k(this,"_sendingRtpParametersByKind");k(this,"_remoteIceParameters");k(this,"_remoteIceCandidates");k(this,"_remoteDtlsParameters");k(this,"_iceGatherer");k(this,"_iceTransport");k(this,"_dtlsTransport");k(this,"_rtpSenders",new Map);k(this,"_rtpReceivers",new Map);k(this,"_nextSendLocalId",0);k(this,"_cname");k(this,"_transportReady",!1)}static createFactory(){return()=>new Xi}get name(){return m}close(){u.debug("close()");try{this._iceGatherer.close()}catch{}try{this._iceTransport.stop()}catch{}try{this._dtlsTransport.stop()}catch{}for(const o of this._rtpSenders.values())try{o.stop()}catch{}for(const o of this._rtpReceivers.values())try{o.stop()}catch{}this.emit("@close")}async getNativeRtpCapabilities(){return u.debug("getNativeRtpCapabilities()"),y.getCapabilities()}async getNativeSctpCapabilities(){return u.debug("getNativeSctpCapabilities()"),{numStreams:{OS:0,MIS:0}}}run({direction:o,iceParameters:v,iceCandidates:T,dtlsParameters:D,sctpParameters:n,iceServers:i,iceTransportPolicy:e,additionalSettings:t,proprietaryConstraints:r,extendedRtpCapabilities:s}){u.debug("run()"),this._sendingRtpParametersByKind={audio:p.getSendingRtpParameters("audio",s),video:p.getSendingRtpParameters("video",s)},this._remoteIceParameters=v,this._remoteIceCandidates=T,this._remoteDtlsParameters=D,this._cname=`CNAME-${w.generateRandomNumber()}`,this.setIceGatherer({iceServers:i,iceTransportPolicy:e}),this.setIceTransport(),this.setDtlsTransport()}async updateIceServers(o){throw new P.UnsupportedError("not supported")}async restartIce(o){if(u.debug("restartIce()"),this._remoteIceParameters=o,!!this._transportReady){u.debug("restartIce() | calling iceTransport.start()"),this._iceTransport.start(this._iceGatherer,o,"controlling");for(const v of this._remoteIceCandidates)this._iceTransport.addRemoteCandidate(v);this._iceTransport.addRemoteCandidate({})}}async getTransportStats(){return this._iceTransport.getStats()}async send({track:o,encodings:v,codecOptions:T,codec:D}){u.debug("send() [kind:%s, track.id:%s]",o.kind,o.id),this._transportReady||await this.setupTransport({localDtlsRole:"server"}),u.debug("send() | calling new RTCRtpSender()");const n=new RTCRtpSender(o,this._dtlsTransport),i=w.clone(this._sendingRtpParametersByKind[o.kind]);i.codecs=p.reduceCodecs(i.codecs,D);const e=i.codecs.some(s=>/.+\/rtx$/i.test(s.mimeType));v||(v=[{}]);for(const s of v)s.ssrc=w.generateRandomNumber(),e&&(s.rtx={ssrc:w.generateRandomNumber()});i.encodings=v,i.rtcp={cname:this._cname,reducedSize:!0,mux:!0};const t=y.mangleRtpParameters(i);u.debug("send() | calling rtpSender.send() [params:%o]",t),await n.send(t);const r=String(this._nextSendLocalId);return this._nextSendLocalId++,this._rtpSenders.set(r,n),{localId:r,rtpParameters:i,rtpSender:n}}async stopSending(o){u.debug("stopSending() [localId:%s]",o);const v=this._rtpSenders.get(o);if(!v)throw new Error("RTCRtpSender not found");this._rtpSenders.delete(o);try{u.debug("stopSending() | calling rtpSender.stop()"),v.stop()}catch(T){throw u.warn("stopSending() | rtpSender.stop() failed:%o",T),T}}async pauseSending(o){}async resumeSending(o){}async replaceTrack(o,v){v?u.debug("replaceTrack() [localId:%s, track.id:%s]",o,v.id):u.debug("replaceTrack() [localId:%s, no track]",o);const T=this._rtpSenders.get(o);if(!T)throw new Error("RTCRtpSender not found");T.setTrack(v)}async setMaxSpatialLayer(o,v){u.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",o,v);const T=this._rtpSenders.get(o);if(!T)throw new Error("RTCRtpSender not found");const D=T.getParameters();D.encodings.forEach((n,i)=>{i<=v?n.active=!0:n.active=!1}),await T.setParameters(D)}async setRtpEncodingParameters(o,v){u.debug("setRtpEncodingParameters() [localId:%s, params:%o]",o,v);const T=this._rtpSenders.get(o);if(!T)throw new Error("RTCRtpSender not found");const D=T.getParameters();D.encodings.forEach((n,i)=>{D.encodings[i]={...n,...v}}),await T.setParameters(D)}async getSenderStats(o){const v=this._rtpSenders.get(o);if(!v)throw new Error("RTCRtpSender not found");return v.getStats()}async sendDataChannel(o){throw new P.UnsupportedError("not implemented")}async receive(o){const v=[];for(const T of o){const{trackId:D,kind:n}=T;u.debug("receive() [trackId:%s, kind:%s]",D,n)}this._transportReady||await this.setupTransport({localDtlsRole:"server"});for(const T of o){const{trackId:D,kind:n,rtpParameters:i}=T;u.debug("receive() | calling new RTCRtpReceiver()");const e=new RTCRtpReceiver(this._dtlsTransport,n);e.addEventListener("error",s=>{u.error('rtpReceiver "error" event [event:%o]',s)});const t=y.mangleRtpParameters(i);u.debug("receive() | calling rtpReceiver.receive() [params:%o]",t),await e.receive(t);const r=D;this._rtpReceivers.set(r,e),v.push({localId:r,track:e.track,rtpReceiver:e})}return v}async stopReceiving(o){for(const v of o){u.debug("stopReceiving() [localId:%s]",v);const T=this._rtpReceivers.get(v);if(!T)throw new Error("RTCRtpReceiver not found");this._rtpReceivers.delete(v);try{u.debug("stopReceiving() | calling rtpReceiver.stop()"),T.stop()}catch(D){u.warn("stopReceiving() | rtpReceiver.stop() failed:%o",D)}}}async pauseReceiving(o){}async resumeReceiving(o){}async getReceiverStats(o){const v=this._rtpReceivers.get(o);if(!v)throw new Error("RTCRtpReceiver not found");return v.getStats()}async receiveDataChannel(o){throw new P.UnsupportedError("not implemented")}setIceGatherer({iceServers:o,iceTransportPolicy:v}){const T=new RTCIceGatherer({iceServers:o??[],gatherPolicy:v??"all"});T.addEventListener("error",D=>{u.error('iceGatherer "error" event [event:%o]',D)});try{T.gather()}catch(D){u.debug("setIceGatherer() | iceGatherer.gather() failed: %s",D.toString())}this._iceGatherer=T}setIceTransport(){const o=new RTCIceTransport(this._iceGatherer);o.addEventListener("statechange",()=>{switch(o.state){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}}),o.addEventListener("icestatechange",()=>{switch(o.state){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}}),o.addEventListener("candidatepairchange",v=>{u.debug('iceTransport "candidatepairchange" event [pair:%o]',v.pair)}),this._iceTransport=o}setDtlsTransport(){const o=new RTCDtlsTransport(this._iceTransport);o.addEventListener("statechange",()=>{u.debug('dtlsTransport "statechange" event [state:%s]',o.state)}),o.addEventListener("dtlsstatechange",()=>{u.debug('dtlsTransport "dtlsstatechange" event [state:%s]',o.state),o.state==="closed"&&this.emit("@connectionstatechange","closed")}),o.addEventListener("error",v=>{u.error('dtlsTransport "error" event [event:%o]',v)}),this._dtlsTransport=o}async setupTransport({localDtlsRole:o}){u.debug("setupTransport()");const v=this._dtlsTransport.getLocalParameters();v.role=o,await new Promise((T,D)=>{this.safeEmit("@connect",{dtlsParameters:v},T,D)}),this._iceTransport.start(this._iceGatherer,this._remoteIceParameters,"controlling");for(const T of this._remoteIceCandidates)this._iceTransport.addRemoteCandidate(T);this._iceTransport.addRemoteCandidate({}),this._remoteDtlsParameters.fingerprints=this._remoteDtlsParameters.fingerprints.filter(T=>T.algorithm==="sha-256"||T.algorithm==="sha-384"||T.algorithm==="sha-512"),this._dtlsTransport.start(this._remoteDtlsParameters),this._transportReady=!0}};return Dt.Edge11=R,Dt}var kt={},ri;function Bn(){if(ri)return kt;ri=1,Object.defineProperty(kt,"__esModule",{value:!0}),kt.ReactNativeUnifiedPlan=void 0;const h=ce(),P=Y(),w=J(),p=ie(),y=fe(),g=Ae(),u=pr(),m=se(),R=de(),S=me(),_=De(),o=new P.Logger("ReactNativeUnifiedPlan"),v="ReactNativeUnifiedPlan",T={OS:1024,MIS:1024};let D=class Ji extends R.HandlerInterface{constructor(){super();k(this,"_closed",!1);k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_forcedLocalDtlsRole");k(this,"_pc");k(this,"_mapMidTransceiver",new Map);k(this,"_sendStream",new MediaStream);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new Ji}get name(){return v}close(){if(o.debug("close()"),!this._closed){if(this._closed=!0,this._sendStream.release(!1),this._pc)try{this._pc.close()}catch{}this.emit("@close")}}async getNativeRtpCapabilities(){o.debug("getNativeRtpCapabilities()");const e=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan"});try{e.addTransceiver("audio"),e.addTransceiver("video");const t=await e.createOffer();try{e.close()}catch{}const r=h.parse(t.sdp),s=y.extractRtpCapabilities({sdpObject:r});return u.addNackSupportForOpus(s),s}catch(t){try{e.close()}catch{}throw t}}async getNativeSctpCapabilities(){return o.debug("getNativeSctpCapabilities()"),{numStreams:T}}run({direction:e,iceParameters:t,iceCandidates:r,dtlsParameters:s,sctpParameters:a,iceServers:d,iceTransportPolicy:c,additionalSettings:f,proprietaryConstraints:l,extendedRtpCapabilities:b}){this.assertNotClosed(),o.debug("run()"),this._direction=e,this._remoteSdp=new S.RemoteSdp({iceParameters:t,iceCandidates:r,dtlsParameters:s,sctpParameters:a}),this._sendingRtpParametersByKind={audio:p.getSendingRtpParameters("audio",b),video:p.getSendingRtpParameters("video",b)},this._sendingRemoteRtpParametersByKind={audio:p.getSendingRemoteRtpParameters("audio",b),video:p.getSendingRemoteRtpParameters("video",b)},s.role&&s.role!=="auto"&&(this._forcedLocalDtlsRole=s.role==="server"?"client":"server"),this._pc=new RTCPeerConnection({iceServers:d??[],iceTransportPolicy:c??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"unified-plan",...f},l),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",E=>{this.emit("@icecandidateerror",E)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):this._pc.addEventListener("iceconnectionstatechange",()=>{switch(o.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}})}async updateIceServers(e){this.assertNotClosed(),o.debug("updateIceServers()");const t=this._pc.getConfiguration();t.iceServers=e,this._pc.setConfiguration(t)}async restartIce(e){if(this.assertNotClosed(),o.debug("restartIce()"),this._remoteSdp.updateIceParameters(e),!!this._transportReady)if(this._direction==="send"){const t=await this._pc.createOffer({iceRestart:!0});o.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",t),await this._pc.setLocalDescription(t);const r={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",r),await this._pc.setRemoteDescription(r)}else{const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}}async getTransportStats(){return this.assertNotClosed(),this._pc.getStats()}async send({track:e,encodings:t,codecOptions:r,codec:s,onRtpSender:a}){this.assertNotClosed(),this.assertSendDirection(),o.debug("send() [kind:%s, track.id:%s]",e.kind,e.id),t&&t.length>1&&t.forEach((O,U)=>{O.rid=`r${U}`});const d=w.clone(this._sendingRtpParametersByKind[e.kind]);d.codecs=p.reduceCodecs(d.codecs,s);const c=w.clone(this._sendingRemoteRtpParametersByKind[e.kind]);c.codecs=p.reduceCodecs(c.codecs,s);const f=this._remoteSdp.getNextMediaSectionIdx(),l=this._pc.addTransceiver(e,{direction:"sendonly",streams:[this._sendStream],sendEncodings:t});a&&a(l.sender);let b=await this._pc.createOffer(),E=h.parse(b.sdp);E.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed();let x;this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:E});let C=!1;const L=(0,_.parse)((t??[{}])[0].scalabilityMode);t&&t.length===1&&L.spatialLayers>1&&d.codecs[0].mimeType.toLowerCase()==="video/vp9"&&(o.debug("send() | enabling legacy simulcast for VP9 SVC"),C=!0,E=h.parse(b.sdp),x=E.media[f.idx],g.addLegacySimulcast({offerMediaObject:x,numStreams:L.spatialLayers}),b={type:"offer",sdp:h.write(E)}),o.debug("send() | calling pc.setLocalDescription() [offer:%o]",b),await this._pc.setLocalDescription(b);let M=l.mid??void 0;if(M||o.warn("send() | missing transceiver.mid (bug in react-native-webrtc, using a workaround"),d.mid=M,E=h.parse(this._pc.localDescription.sdp),x=E.media[f.idx],d.rtcp.cname=y.getCname({offerMediaObject:x}),!t)d.encodings=g.getRtpEncodings({offerMediaObject:x});else if(t.length===1){let O=g.getRtpEncodings({offerMediaObject:x});Object.assign(O[0],t[0]),C&&(O=[O[0]]),d.encodings=O}else d.encodings=t;if(d.encodings.length>1&&(d.codecs[0].mimeType.toLowerCase()==="video/vp8"||d.codecs[0].mimeType.toLowerCase()==="video/h264"))for(const O of d.encodings)O.scalabilityMode?O.scalabilityMode=`L1T${L.temporalLayers}`:O.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:x,reuseMid:f.reuseMid,offerRtpParameters:d,answerRtpParameters:c,codecOptions:r});const I={type:"answer",sdp:this._remoteSdp.getSdp()};return o.debug("send() | calling pc.setRemoteDescription() [answer:%o]",I),await this._pc.setRemoteDescription(I),M||(M=l.mid,d.mid=M),this._mapMidTransceiver.set(M,l),{localId:M,rtpParameters:d,rtpSender:l.sender}}async stopSending(e){if(this.assertSendDirection(),this._closed)return;o.debug("stopSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");if(t.sender.replaceTrack(null),this._pc.removeTrack(t.sender),this._remoteSdp.closeMediaSection(t.mid))try{t.stop()}catch{}const s=await this._pc.createOffer();o.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",s),await this._pc.setLocalDescription(s);const a={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",a),await this._pc.setRemoteDescription(a),this._mapMidTransceiver.delete(e)}async pauseSending(e){this.assertNotClosed(),this.assertSendDirection(),o.debug("pauseSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");t.direction="inactive",this._remoteSdp.pauseMediaSection(e);const r=await this._pc.createOffer();o.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async resumeSending(e){this.assertNotClosed(),this.assertSendDirection(),o.debug("resumeSending() [localId:%s]",e);const t=this._mapMidTransceiver.get(e);if(this._remoteSdp.resumeSendingMediaSection(e),!t)throw new Error("associated RTCRtpTransceiver not found");t.direction="sendonly";const r=await this._pc.createOffer();o.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r);const s={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]",s),await this._pc.setRemoteDescription(s)}async replaceTrack(e,t){this.assertNotClosed(),this.assertSendDirection(),t?o.debug("replaceTrack() [localId:%s, track.id:%s]",e,t.id):o.debug("replaceTrack() [localId:%s, no track]",e);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");await r.sender.replaceTrack(t)}async setMaxSpatialLayer(e,t){this.assertNotClosed(),this.assertSendDirection(),o.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",e,t);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");const s=r.sender.getParameters();s.encodings.forEach((c,f)=>{f<=t?c.active=!0:c.active=!1}),await r.sender.setParameters(s),this._remoteSdp.muxMediaSectionSimulcast(e,s.encodings);const a=await this._pc.createOffer();o.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a);const d={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d)}async setRtpEncodingParameters(e,t){this.assertNotClosed(),this.assertSendDirection(),o.debug("setRtpEncodingParameters() [localId:%s, params:%o]",e,t);const r=this._mapMidTransceiver.get(e);if(!r)throw new Error("associated RTCRtpTransceiver not found");const s=r.sender.getParameters();s.encodings.forEach((c,f)=>{s.encodings[f]={...c,...t}}),await r.sender.setParameters(s),this._remoteSdp.muxMediaSectionSimulcast(e,s.encodings);const a=await this._pc.createOffer();o.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]",a),await this._pc.setLocalDescription(a);const d={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]",d),await this._pc.setRemoteDescription(d)}async getSenderStats(e){this.assertNotClosed(),this.assertSendDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.sender.getStats()}async sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:r,label:s,protocol:a}){this.assertNotClosed(),this.assertSendDirection();const d={negotiated:!0,id:this._nextSendSctpStreamId,ordered:e,maxPacketLifeTime:t,maxRetransmits:r,protocol:a};o.debug("sendDataChannel() [options:%o]",d);const c=this._pc.createDataChannel(s,d);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%T.MIS,!this._hasDataChannelMediaSection){const l=await this._pc.createOffer(),b=h.parse(l.sdp),E=b.media.find(C=>C.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:b}),o.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",l),await this._pc.setLocalDescription(l),this._remoteSdp.sendSctpAssociation({offerMediaObject:E});const x={type:"answer",sdp:this._remoteSdp.getSdp()};o.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",x),await this._pc.setRemoteDescription(x),this._hasDataChannelMediaSection=!0}const f={streamId:d.id,ordered:d.ordered,maxPacketLifeTime:d.maxPacketLifeTime,maxRetransmits:d.maxRetransmits};return{dataChannel:c,sctpStreamParameters:f}}async receive(e){this.assertNotClosed(),this.assertRecvDirection();const t=[],r=new Map;for(const c of e){const{trackId:f,kind:l,rtpParameters:b,streamId:E}=c;o.debug("receive() [trackId:%s, kind:%s]",f,l);const x=b.mid??String(this._mapMidTransceiver.size);r.set(f,x),this._remoteSdp.receive({mid:x,kind:l,offerRtpParameters:b,streamId:E??b.rtcp.cname,trackId:f})}const s={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",s),await this._pc.setRemoteDescription(s);for(const c of e){const{trackId:f,onRtpReceiver:l}=c;if(l){const b=r.get(f),E=this._pc.getTransceivers().find(x=>x.mid===b);if(!E)throw new Error("transceiver not found");l(E.receiver)}}let a=await this._pc.createAnswer();const d=h.parse(a.sdp);for(const c of e){const{trackId:f,rtpParameters:l}=c,b=r.get(f),E=d.media.find(x=>String(x.mid)===b);y.applyCodecParameters({offerRtpParameters:l,answerMediaObject:E})}a={type:"answer",sdp:h.write(d)},this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:d}),o.debug("receive() | calling pc.setLocalDescription() [answer:%o]",a),await this._pc.setLocalDescription(a);for(const c of e){const{trackId:f}=c,l=r.get(f),b=this._pc.getTransceivers().find(E=>E.mid===l);if(b)this._mapMidTransceiver.set(l,b),t.push({localId:l,track:b.receiver.track,rtpReceiver:b.receiver});else throw new Error("new RTCRtpTransceiver not found")}return t}async stopReceiving(e){if(this.assertRecvDirection(),this._closed)return;for(const s of e){o.debug("stopReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");this._remoteSdp.closeMediaSection(a.mid)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r);for(const s of e)this._mapMidTransceiver.delete(s)}async pauseReceiving(e){this.assertNotClosed(),this.assertRecvDirection();for(const s of e){o.debug("pauseReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");a.direction="inactive",this._remoteSdp.pauseMediaSection(s)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async resumeReceiving(e){this.assertNotClosed(),this.assertRecvDirection();for(const s of e){o.debug("resumeReceiving() [localId:%s]",s);const a=this._mapMidTransceiver.get(s);if(!a)throw new Error("associated RTCRtpTransceiver not found");a.direction="recvonly",this._remoteSdp.resumeReceivingMediaSection(s)}const t={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);const r=await this._pc.createAnswer();o.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r)}async getReceiverStats(e){this.assertNotClosed(),this.assertRecvDirection();const t=this._mapMidTransceiver.get(e);if(!t)throw new Error("associated RTCRtpTransceiver not found");return t.receiver.getStats()}async receiveDataChannel({sctpStreamParameters:e,label:t,protocol:r}){this.assertNotClosed(),this.assertRecvDirection();const{streamId:s,ordered:a,maxPacketLifeTime:d,maxRetransmits:c}=e,f={negotiated:!0,id:s,ordered:a,maxPacketLifeTime:d,maxRetransmits:c,protocol:r};o.debug("receiveDataChannel() [options:%o]",f);const l=this._pc.createDataChannel(t,f);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation();const b={type:"offer",sdp:this._remoteSdp.getSdp()};o.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",b),await this._pc.setRemoteDescription(b);const E=await this._pc.createAnswer();if(!this._transportReady){const x=h.parse(E.sdp);await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:x})}o.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",E),await this._pc.setLocalDescription(E),this._hasDataChannelMediaSection=!0}return{dataChannel:l}}async setupTransport({localDtlsRole:e,localSdpObject:t}){t||(t=h.parse(this._pc.localDescription.sdp));const r=y.extractDtlsParameters({sdpObject:t});r.role=e,this._remoteSdp.updateDtlsRole(e==="client"?"server":"client"),await new Promise((s,a)=>{this.safeEmit("@connect",{dtlsParameters:r},s,a)}),this._transportReady=!0}assertNotClosed(){if(this._closed)throw new m.InvalidStateError("method called in a closed handler")}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return kt.ReactNativeUnifiedPlan=D,kt}var Et={},si;function $n(){if(si)return Et;si=1,Object.defineProperty(Et,"__esModule",{value:!0}),Et.ReactNative=void 0;const h=ce(),P=Y(),w=se(),p=J(),y=ie(),g=fe(),u=lr(),m=de(),R=me(),S=new P.Logger("ReactNative"),_="ReactNative",o={OS:1024,MIS:1024};let v=class Zi extends m.HandlerInterface{constructor(){super();k(this,"_direction");k(this,"_remoteSdp");k(this,"_sendingRtpParametersByKind");k(this,"_sendingRemoteRtpParametersByKind");k(this,"_forcedLocalDtlsRole");k(this,"_pc");k(this,"_sendStream",new MediaStream);k(this,"_mapSendLocalIdTrack",new Map);k(this,"_nextSendLocalId",0);k(this,"_mapRecvLocalIdInfo",new Map);k(this,"_hasDataChannelMediaSection",!1);k(this,"_nextSendSctpStreamId",0);k(this,"_transportReady",!1)}static createFactory(){return()=>new Zi}get name(){return _}close(){if(S.debug("close()"),this._sendStream.release(!1),this._pc)try{this._pc.close()}catch{}this.emit("@close")}async getNativeRtpCapabilities(){S.debug("getNativeRtpCapabilities()");const n=new RTCPeerConnection({iceServers:[],iceTransportPolicy:"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b"});try{const i=await n.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});try{n.close()}catch{}const e=h.parse(i.sdp);return g.extractRtpCapabilities({sdpObject:e})}catch(i){try{n.close()}catch{}throw i}}async getNativeSctpCapabilities(){return S.debug("getNativeSctpCapabilities()"),{numStreams:o}}run({direction:n,iceParameters:i,iceCandidates:e,dtlsParameters:t,sctpParameters:r,iceServers:s,iceTransportPolicy:a,additionalSettings:d,proprietaryConstraints:c,extendedRtpCapabilities:f}){S.debug("run()"),this._direction=n,this._remoteSdp=new R.RemoteSdp({iceParameters:i,iceCandidates:e,dtlsParameters:t,sctpParameters:r,planB:!0}),this._sendingRtpParametersByKind={audio:y.getSendingRtpParameters("audio",f),video:y.getSendingRtpParameters("video",f)},this._sendingRemoteRtpParametersByKind={audio:y.getSendingRemoteRtpParameters("audio",f),video:y.getSendingRemoteRtpParameters("video",f)},t.role&&t.role!=="auto"&&(this._forcedLocalDtlsRole=t.role==="server"?"client":"server"),this._pc=new RTCPeerConnection({iceServers:s??[],iceTransportPolicy:a??"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",sdpSemantics:"plan-b",...d},c),this._pc.addEventListener("icegatheringstatechange",()=>{this.emit("@icegatheringstatechange",this._pc.iceGatheringState)}),this._pc.addEventListener("icecandidateerror",l=>{this.emit("@icecandidateerror",l)}),this._pc.connectionState?this._pc.addEventListener("connectionstatechange",()=>{this.emit("@connectionstatechange",this._pc.connectionState)}):this._pc.addEventListener("iceconnectionstatechange",()=>{switch(S.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"),this._pc.iceConnectionState){case"checking":{this.emit("@connectionstatechange","connecting");break}case"connected":case"completed":{this.emit("@connectionstatechange","connected");break}case"failed":{this.emit("@connectionstatechange","failed");break}case"disconnected":{this.emit("@connectionstatechange","disconnected");break}case"closed":{this.emit("@connectionstatechange","closed");break}}})}async updateIceServers(n){S.debug("updateIceServers()");const i=this._pc.getConfiguration();i.iceServers=n,this._pc.setConfiguration(i)}async restartIce(n){if(S.debug("restartIce()"),this._remoteSdp.updateIceParameters(n),!!this._transportReady)if(this._direction==="send"){const i=await this._pc.createOffer({iceRestart:!0});S.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]",i),await this._pc.setLocalDescription(i);const e={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]",e),await this._pc.setRemoteDescription(e)}else{const i={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);const e=await this._pc.createAnswer();S.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]",e),await this._pc.setLocalDescription(e)}}async getTransportStats(){return this._pc.getStats()}async send({track:n,encodings:i,codecOptions:e,codec:t}){this.assertSendDirection(),S.debug("send() [kind:%s, track.id:%s]",n.kind,n.id),t&&S.warn("send() | codec selection is not available in %s handler",this.name),this._sendStream.addTrack(n),this._pc.addStream(this._sendStream);let r=await this._pc.createOffer(),s=h.parse(r.sdp);s.extmapAllowMixed&&this._remoteSdp.setSessionExtmapAllowMixed();let a;const d=p.clone(this._sendingRtpParametersByKind[n.kind]);d.codecs=y.reduceCodecs(d.codecs);const c=p.clone(this._sendingRemoteRtpParametersByKind[n.kind]);if(c.codecs=y.reduceCodecs(c.codecs),this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:s}),n.kind==="video"&&i&&i.length>1&&(S.debug("send() | enabling simulcast"),s=h.parse(r.sdp),a=s.media.find(b=>b.type==="video"),u.addLegacySimulcast({offerMediaObject:a,track:n,numStreams:i.length}),r={type:"offer",sdp:h.write(s)}),S.debug("send() | calling pc.setLocalDescription() [offer:%o]",r),await this._pc.setLocalDescription(r),s=h.parse(this._pc.localDescription.sdp),a=s.media.find(b=>b.type===n.kind),d.rtcp.cname=g.getCname({offerMediaObject:a}),d.encodings=u.getRtpEncodings({offerMediaObject:a,track:n}),i)for(let b=0;b<d.encodings.length;++b)i[b]&&Object.assign(d.encodings[b],i[b]);if(d.encodings.length>1&&(d.codecs[0].mimeType.toLowerCase()==="video/vp8"||d.codecs[0].mimeType.toLowerCase()==="video/h264"))for(const b of d.encodings)b.scalabilityMode="L1T3";this._remoteSdp.send({offerMediaObject:a,offerRtpParameters:d,answerRtpParameters:c,codecOptions:e});const f={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("send() | calling pc.setRemoteDescription() [answer:%o]",f),await this._pc.setRemoteDescription(f);const l=String(this._nextSendLocalId);return this._nextSendLocalId++,this._mapSendLocalIdTrack.set(l,n),{localId:l,rtpParameters:d}}async stopSending(n){this.assertSendDirection(),S.debug("stopSending() [localId:%s]",n);const i=this._mapSendLocalIdTrack.get(n);if(!i)throw new Error("track not found");this._mapSendLocalIdTrack.delete(n),this._sendStream.removeTrack(i),this._pc.addStream(this._sendStream);const e=await this._pc.createOffer();S.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]",e);try{await this._pc.setLocalDescription(e)}catch(r){if(this._sendStream.getTracks().length===0){S.warn("stopSending() | ignoring expected error due no sending tracks: %s",r.toString());return}throw r}if(this._pc.signalingState==="stable")return;const t={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]",t),await this._pc.setRemoteDescription(t)}async pauseSending(n){}async resumeSending(n){}async replaceTrack(n,i){throw new w.UnsupportedError("not implemented")}async setMaxSpatialLayer(n,i){throw new w.UnsupportedError("not implemented")}async setRtpEncodingParameters(n,i){throw new w.UnsupportedError("not implemented")}async getSenderStats(n){throw new w.UnsupportedError("not implemented")}async sendDataChannel({ordered:n,maxPacketLifeTime:i,maxRetransmits:e,label:t,protocol:r}){this.assertSendDirection();const s={negotiated:!0,id:this._nextSendSctpStreamId,ordered:n,maxPacketLifeTime:i,maxRetransmitTime:i,maxRetransmits:e,protocol:r};S.debug("sendDataChannel() [options:%o]",s);const a=this._pc.createDataChannel(t,s);if(this._nextSendSctpStreamId=++this._nextSendSctpStreamId%o.MIS,!this._hasDataChannelMediaSection){const c=await this._pc.createOffer(),f=h.parse(c.sdp),l=f.media.find(E=>E.type==="application");this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:f}),S.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]",c),await this._pc.setLocalDescription(c),this._remoteSdp.sendSctpAssociation({offerMediaObject:l});const b={type:"answer",sdp:this._remoteSdp.getSdp()};S.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]",b),await this._pc.setRemoteDescription(b),this._hasDataChannelMediaSection=!0}const d={streamId:s.id,ordered:s.ordered,maxPacketLifeTime:s.maxPacketLifeTime,maxRetransmits:s.maxRetransmits};return{dataChannel:a,sctpStreamParameters:d}}async receive(n){this.assertRecvDirection();const i=[],e=new Map;for(const a of n){const{trackId:d,kind:c,rtpParameters:f}=a;S.debug("receive() [trackId:%s, kind:%s]",d,c);const l=c;let b=a.streamId??f.rtcp.cname;S.debug("receive() | forcing a random remote streamId to avoid well known bug in react-native-webrtc"),b+=`-hack-${p.generateRandomNumber()}`,e.set(d,b),this._remoteSdp.receive({mid:l,kind:c,offerRtpParameters:f,streamId:b,trackId:d})}const t={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("receive() | calling pc.setRemoteDescription() [offer:%o]",t),await this._pc.setRemoteDescription(t);let r=await this._pc.createAnswer();const s=h.parse(r.sdp);for(const a of n){const{kind:d,rtpParameters:c}=a,f=d,l=s.media.find(b=>String(b.mid)===f);g.applyCodecParameters({offerRtpParameters:c,answerMediaObject:l})}r={type:"answer",sdp:h.write(s)},this._transportReady||await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:s}),S.debug("receive() | calling pc.setLocalDescription() [answer:%o]",r),await this._pc.setLocalDescription(r);for(const a of n){const{kind:d,trackId:c,rtpParameters:f}=a,l=c,b=d,E=e.get(c),C=this._pc.getRemoteStreams().find(L=>L.id===E).getTrackById(l);if(!C)throw new Error("remote track not found");this._mapRecvLocalIdInfo.set(l,{mid:b,rtpParameters:f}),i.push({localId:l,track:C})}return i}async stopReceiving(n){this.assertRecvDirection();for(const t of n){S.debug("stopReceiving() [localId:%s]",t);const{mid:r,rtpParameters:s}=this._mapRecvLocalIdInfo.get(t)??{};this._mapRecvLocalIdInfo.delete(t),this._remoteSdp.planBStopReceiving({mid:r,offerRtpParameters:s})}const i={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]",i),await this._pc.setRemoteDescription(i);const e=await this._pc.createAnswer();S.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]",e),await this._pc.setLocalDescription(e)}async pauseReceiving(n){}async resumeReceiving(n){}async getReceiverStats(n){throw new w.UnsupportedError("not implemented")}async receiveDataChannel({sctpStreamParameters:n,label:i,protocol:e}){this.assertRecvDirection();const{streamId:t,ordered:r,maxPacketLifeTime:s,maxRetransmits:a}=n,d={negotiated:!0,id:t,ordered:r,maxPacketLifeTime:s,maxRetransmitTime:s,maxRetransmits:a,protocol:e};S.debug("receiveDataChannel() [options:%o]",d);const c=this._pc.createDataChannel(i,d);if(!this._hasDataChannelMediaSection){this._remoteSdp.receiveSctpAssociation({oldDataChannelSpec:!0});const f={type:"offer",sdp:this._remoteSdp.getSdp()};S.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]",f),await this._pc.setRemoteDescription(f);const l=await this._pc.createAnswer();if(!this._transportReady){const b=h.parse(l.sdp);await this.setupTransport({localDtlsRole:this._forcedLocalDtlsRole??"client",localSdpObject:b})}S.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]",l),await this._pc.setLocalDescription(l),this._hasDataChannelMediaSection=!0}return{dataChannel:c}}async setupTransport({localDtlsRole:n,localSdpObject:i}){i||(i=h.parse(this._pc.localDescription.sdp));const e=g.extractDtlsParameters({sdpObject:i});e.role=n,this._remoteSdp.updateDtlsRole(n==="client"?"server":"client"),await new Promise((t,r)=>{this.safeEmit("@connect",{dtlsParameters:e},t,r)}),this._transportReady=!0}assertSendDirection(){if(this._direction!=="send")throw new Error('method can just be called for handlers with "send" direction')}assertRecvDirection(){if(this._direction!=="recv")throw new Error('method can just be called for handlers with "recv" direction')}};return Et.ReactNative=v,Et}var ii;function tn(){if(ii)return xe;ii=1,Object.defineProperty(xe,"__esModule",{value:!0}),xe.Device=void 0,xe.detectDeviceAsync=s,xe.detectDevice=a;const h=Sn(),P=Y(),w=Te(),p=se(),y=J(),g=ie(),u=Bi(),m=xn(),R=Ln(),S=In(),_=Mn(),o=On(),v=An(),T=jn(),D=Nn(),n=Fn(),i=qn(),e=Bn(),t=$n(),r=new P.Logger("Device");async function s(f){r.debug("detectDeviceAsync() [userAgent:%s]",f),!f&&typeof navigator=="object"&&(f=navigator.userAgent);const l=await(0,h.UAParser)(f).withFeatureCheck();return c(l)}function a(f){r.debug("detectDevice() [userAgent:%s]",f),!f&&typeof navigator=="object"&&(f=navigator.userAgent);const l=(0,h.UAParser)(f);return c(l)}let d=class en{constructor({handlerName:l,handlerFactory:b}={}){k(this,"_handlerFactory");k(this,"_handlerName");k(this,"_loaded",!1);k(this,"_extendedRtpCapabilities");k(this,"_recvRtpCapabilities");k(this,"_canProduceByKind");k(this,"_sctpCapabilities");k(this,"_observer",new w.EnhancedEventEmitter);if(r.debug("constructor()"),l&&b)throw new TypeError("just one of handlerName or handlerInterface can be given");if(b)this._handlerFactory=b;else{if(l)r.debug("constructor() | handler given: %s",l);else if(l=a(),l)r.debug("constructor() | detected handler: %s",l);else throw new p.UnsupportedError("device not supported");switch(l){case"Chrome111":{this._handlerFactory=m.Chrome111.createFactory();break}case"Chrome74":{this._handlerFactory=R.Chrome74.createFactory();break}case"Chrome70":{this._handlerFactory=S.Chrome70.createFactory();break}case"Chrome67":{this._handlerFactory=_.Chrome67.createFactory();break}case"Chrome55":{this._handlerFactory=o.Chrome55.createFactory();break}case"Firefox120":{this._handlerFactory=v.Firefox120.createFactory();break}case"Firefox60":{this._handlerFactory=T.Firefox60.createFactory();break}case"Safari12":{this._handlerFactory=D.Safari12.createFactory();break}case"Safari11":{this._handlerFactory=n.Safari11.createFactory();break}case"Edge11":{this._handlerFactory=i.Edge11.createFactory();break}case"ReactNativeUnifiedPlan":{this._handlerFactory=e.ReactNativeUnifiedPlan.createFactory();break}case"ReactNative":{this._handlerFactory=t.ReactNative.createFactory();break}default:throw new TypeError(`unknown handlerName "${l}"`)}}const E=this._handlerFactory();this._handlerName=E.name,E.close(),this._extendedRtpCapabilities=void 0,this._recvRtpCapabilities=void 0,this._canProduceByKind={audio:!1,video:!1},this._sctpCapabilities=void 0}static async factory({handlerName:l,handlerFactory:b}={}){if(r.debug("factory()"),l&&b)throw new TypeError("just one of handlerName or handlerInterface can be given");if(!l&&!b&&(l=await s(),!l))throw new p.UnsupportedError("device not supported");return new en({handlerName:l,handlerFactory:b})}get handlerName(){return this._handlerName}get loaded(){return this._loaded}get rtpCapabilities(){if(!this._loaded)throw new p.InvalidStateError("not loaded");return this._recvRtpCapabilities}get sctpCapabilities(){if(!this._loaded)throw new p.InvalidStateError("not loaded");return this._sctpCapabilities}get observer(){return this._observer}async load({routerRtpCapabilities:l,preferLocalCodecsOrder:b=!1}){r.debug("load() [routerRtpCapabilities:%o]",l);let E;try{if(this._loaded)throw new p.InvalidStateError("already loaded");const x=y.clone(l);g.validateRtpCapabilities(x),E=this._handlerFactory();const C=await E.getNativeRtpCapabilities();r.debug("load() | got native RTP capabilities:%o",C);const L=y.clone(C);g.validateRtpCapabilities(L),this._extendedRtpCapabilities=g.getExtendedRtpCapabilities(L,x,b),r.debug("load() | got extended RTP capabilities:%o",this._extendedRtpCapabilities),this._canProduceByKind.audio=g.canSend("audio",this._extendedRtpCapabilities),this._canProduceByKind.video=g.canSend("video",this._extendedRtpCapabilities),this._recvRtpCapabilities=g.getRecvRtpCapabilities(this._extendedRtpCapabilities),g.validateRtpCapabilities(this._recvRtpCapabilities),r.debug("load() | got receiving RTP capabilities:%o",this._recvRtpCapabilities),this._sctpCapabilities=await E.getNativeSctpCapabilities(),r.debug("load() | got native SCTP capabilities:%o",this._sctpCapabilities),g.validateSctpCapabilities(this._sctpCapabilities),r.debug("load() succeeded"),this._loaded=!0,E.close()}catch(x){throw E&&E.close(),x}}canProduce(l){if(this._loaded){if(l!=="audio"&&l!=="video")throw new TypeError(`invalid kind "${l}"`)}else throw new p.InvalidStateError("not loaded");return this._canProduceByKind[l]}createSendTransport({id:l,iceParameters:b,iceCandidates:E,dtlsParameters:x,sctpParameters:C,iceServers:L,iceTransportPolicy:M,additionalSettings:I,proprietaryConstraints:O,appData:U}){return r.debug("createSendTransport()"),this.createTransport({direction:"send",id:l,iceParameters:b,iceCandidates:E,dtlsParameters:x,sctpParameters:C,iceServers:L,iceTransportPolicy:M,additionalSettings:I,proprietaryConstraints:O,appData:U})}createRecvTransport({id:l,iceParameters:b,iceCandidates:E,dtlsParameters:x,sctpParameters:C,iceServers:L,iceTransportPolicy:M,additionalSettings:I,proprietaryConstraints:O,appData:U}){return r.debug("createRecvTransport()"),this.createTransport({direction:"recv",id:l,iceParameters:b,iceCandidates:E,dtlsParameters:x,sctpParameters:C,iceServers:L,iceTransportPolicy:M,additionalSettings:I,proprietaryConstraints:O,appData:U})}createTransport({direction:l,id:b,iceParameters:E,iceCandidates:x,dtlsParameters:C,sctpParameters:L,iceServers:M,iceTransportPolicy:I,additionalSettings:O,proprietaryConstraints:U,appData:H}){if(this._loaded){if(typeof b!="string")throw new TypeError("missing id");if(typeof E!="object")throw new TypeError("missing iceParameters");if(Array.isArray(x)){if(typeof C!="object")throw new TypeError("missing dtlsParameters");if(L&&typeof L!="object")throw new TypeError("wrong sctpParameters");if(H&&typeof H!="object")throw new TypeError("if given, appData must be an object")}else throw new TypeError("missing iceCandidates")}else throw new p.InvalidStateError("not loaded");const Q=new u.Transport({direction:l,id:b,iceParameters:E,iceCandidates:x,dtlsParameters:C,sctpParameters:L,iceServers:M,iceTransportPolicy:I,additionalSettings:O,proprietaryConstraints:U,appData:H,handlerFactory:this._handlerFactory,extendedRtpCapabilities:this._extendedRtpCapabilities,canProduceByKind:this._canProduceByKind});return this._observer.safeEmit("newtransport",Q),Q}};xe.Device=d;function c(f){var l,b,E,x;if(typeof navigator=="object"&&navigator.product==="ReactNative"){if(r.debug("detectDeviceImpl() | React-Native detected"),typeof RTCPeerConnection>"u"){r.warn("detectDeviceImpl() | unsupported react-native-webrtc without RTCPeerConnection, forgot to call registerGlobals()?");return}return typeof RTCRtpTransceiver<"u"?(r.debug("detectDeviceImpl() | ReactNative UnifiedPlan handler chosen"),"ReactNativeUnifiedPlan"):(r.debug("detectDeviceImpl() | ReactNative PlanB handler chosen"),"ReactNative")}else{r.debug("detectDeviceImpl() | browser detected [userAgent:%s, parsed:%o]",f.ua,f);const C=f.browser,L=(l=C.name)==null?void 0:l.toLowerCase(),M=parseInt(C.major??"0"),O=(b=f.engine.name)==null?void 0:b.toLowerCase(),U=f.os,H=(E=U.name)==null?void 0:E.toLowerCase(),Q=parseFloat(U.version??"0"),je=(x=f.device.model)==null?void 0:x.toLowerCase(),te=H==="ios"||je==="ipad",ae=L&&["chrome","chromium","mobile chrome","chrome webview","chrome headless"].includes(L),Ge=L&&["firefox","mobile firefox","mobile focus"].includes(L),Ot=L&&["safari","mobile safari"].includes(L),Qe=L&&["edge"].includes(L);if((ae||Qe)&&!te&&M>=111)return"Chrome111";if(ae&&!te&&M>=74||Qe&&!te&&M>=88)return"Chrome74";if(ae&&!te&&M>=70)return"Chrome70";if(ae&&!te&&M>=67)return"Chrome67";if(ae&&!te&&M>=55)return"Chrome55";if(Ge&&!te&&M>=120)return"Firefox120";if(Ge&&!te&&M>=60)return"Firefox60";if(Ge&&te&&Q>=14.3)return"Safari12";if(Ot&&M>=12&&typeof RTCRtpTransceiver<"u"&&RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection"))return"Safari12";if(Ot&&M>=11)return"Safari11";if(Qe&&!te&&M>=11&&M<=18)return"Edge11";if(O==="webkit"&&te&&typeof RTCRtpTransceiver<"u"&&RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection"))return"Safari12";if(O==="blink"){const At=f.ua.match(/(?:(?:Chrome|Chromium))[ /](\w+)/i);if(At){const Ne=Number(At[1]);return Ne>=111?"Chrome111":Ne>=74?"Chrome74":Ne>=70?"Chrome70":Ne>=67?"Chrome67":"Chrome55"}else return"Chrome111"}else{r.warn("detectDeviceImpl() | browser not supported [name:%s, version:%s]",L,M);return}}}return xe}var Ar={},ni;function zn(){return ni||(ni=1,Object.defineProperty(Ar,"__esModule",{value:!0})),Ar}var jr={},ai;function Hn(){return ai||(ai=1,Object.defineProperty(jr,"__esModule",{value:!0})),jr}var oi;function Vn(){return oi||(oi=1,function(h){var P=Ee&&Ee.__createBinding||(Object.create?function(p,y,g,u){u===void 0&&(u=g);var m=Object.getOwnPropertyDescriptor(y,g);(!m||("get"in m?!y.__esModule:m.writable||m.configurable))&&(m={enumerable:!0,get:function(){return y[g]}}),Object.defineProperty(p,u,m)}:function(p,y,g,u){u===void 0&&(u=g),p[u]=y[g]}),w=Ee&&Ee.__exportStar||function(p,y){for(var g in p)g!=="default"&&!Object.prototype.hasOwnProperty.call(y,g)&&P(y,p,g)};Object.defineProperty(h,"__esModule",{value:!0}),w(tn(),h),w(Bi(),h),w(Ni(),h),w(Fi(),h),w(Ui(),h),w(qi(),h),w(zn(),h),w(Hn(),h),w(de(),h),w(se(),h)}(Ee)),Ee}var xt={},Lt={},Nr={},Gt={},ci;function Kn(){return ci||(ci=1,Object.defineProperty(Gt,"__esModule",{value:!0}),Gt.default="ffffffff-ffff-ffff-ffff-ffffffffffff"),Gt}var Qt={},di;function Gn(){return di||(di=1,Object.defineProperty(Qt,"__esModule",{value:!0}),Qt.default="00000000-0000-0000-0000-000000000000"),Qt}var Wt={},Yt={},Xt={},pi;function Qn(){return pi||(pi=1,Object.defineProperty(Xt,"__esModule",{value:!0}),Xt.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i),Xt}var li;function ur(){if(li)return Yt;li=1,Object.defineProperty(Yt,"__esModule",{value:!0});const h=Qn();function P(w){return typeof w=="string"&&h.default.test(w)}return Yt.default=P,Yt}var ui;function hr(){if(ui)return Wt;ui=1,Object.defineProperty(Wt,"__esModule",{value:!0});const h=ur();function P(w){if(!(0,h.default)(w))throw TypeError("Invalid UUID");let p;return Uint8Array.of((p=parseInt(w.slice(0,8),16))>>>24,p>>>16&255,p>>>8&255,p&255,(p=parseInt(w.slice(9,13),16))>>>8,p&255,(p=parseInt(w.slice(14,18),16))>>>8,p&255,(p=parseInt(w.slice(19,23),16))>>>8,p&255,(p=parseInt(w.slice(24,36),16))/1099511627776&255,p/4294967296&255,p>>>24&255,p>>>16&255,p>>>8&255,p&255)}return Wt.default=P,Wt}var He={},hi;function Pe(){if(hi)return He;hi=1,Object.defineProperty(He,"__esModule",{value:!0}),He.unsafeStringify=void 0;const h=ur(),P=[];for(let y=0;y<256;++y)P.push((y+256).toString(16).slice(1));function w(y,g=0){return(P[y[g+0]]+P[y[g+1]]+P[y[g+2]]+P[y[g+3]]+"-"+P[y[g+4]]+P[y[g+5]]+"-"+P[y[g+6]]+P[y[g+7]]+"-"+P[y[g+8]]+P[y[g+9]]+"-"+P[y[g+10]]+P[y[g+11]]+P[y[g+12]]+P[y[g+13]]+P[y[g+14]]+P[y[g+15]]).toLowerCase()}He.unsafeStringify=w;function p(y,g=0){const u=w(y,g);if(!(0,h.default)(u))throw TypeError("Stringified UUID is invalid");return u}return He.default=p,He}var Ve={},Jt={},fi;function Hr(){if(fi)return Jt;fi=1,Object.defineProperty(Jt,"__esModule",{value:!0});let h;const P=new Uint8Array(16);function w(){if(!h){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");h=crypto.getRandomValues.bind(crypto)}return h(P)}return Jt.default=w,Jt}var mi;function rn(){if(mi)return Ve;mi=1,Object.defineProperty(Ve,"__esModule",{value:!0}),Ve.updateV1State=void 0;const h=Hr(),P=Pe(),w={};function p(u,m,R){var o;let S;const _=(u==null?void 0:u._v6)??!1;if(u){const v=Object.keys(u);v.length===1&&v[0]==="_v6"&&(u=void 0)}if(u)S=g(u.random??((o=u.rng)==null?void 0:o.call(u))??(0,h.default)(),u.msecs,u.nsecs,u.clockseq,u.node,m,R);else{const v=Date.now(),T=(0,h.default)();y(w,v,T),S=g(T,w.msecs,w.nsecs,_?void 0:w.clockseq,_?void 0:w.node,m,R)}return m??(0,P.unsafeStringify)(S)}function y(u,m,R){return u.msecs??(u.msecs=-1/0),u.nsecs??(u.nsecs=0),m===u.msecs?(u.nsecs++,u.nsecs>=1e4&&(u.node=void 0,u.nsecs=0)):m>u.msecs?u.nsecs=0:m<u.msecs&&(u.node=void 0),u.node||(u.node=R.slice(10,16),u.node[0]|=1,u.clockseq=(R[8]<<8|R[9])&16383),u.msecs=m,u}Ve.updateV1State=y;function g(u,m,R,S,_,o,v=0){if(u.length<16)throw new Error("Random bytes length must be >= 16");if(!o)o=new Uint8Array(16),v=0;else if(v<0||v+16>o.length)throw new RangeError(`UUID byte range ${v}:${v+15} is out of buffer bounds`);m??(m=Date.now()),R??(R=0),S??(S=(u[8]<<8|u[9])&16383),_??(_=u.slice(10,16)),m+=122192928e5;const T=((m&268435455)*1e4+R)%4294967296;o[v++]=T>>>24&255,o[v++]=T>>>16&255,o[v++]=T>>>8&255,o[v++]=T&255;const D=m/4294967296*1e4&268435455;o[v++]=D>>>8&255,o[v++]=D&255,o[v++]=D>>>24&15|16,o[v++]=D>>>16&255,o[v++]=S>>>8|128,o[v++]=S&255;for(let n=0;n<6;++n)o[v++]=_[n];return o}return Ve.default=p,Ve}var Zt={},gi;function sn(){if(gi)return Zt;gi=1,Object.defineProperty(Zt,"__esModule",{value:!0});const h=hr(),P=Pe();function w(y){const g=typeof y=="string"?(0,h.default)(y):y,u=p(g);return typeof y=="string"?(0,P.unsafeStringify)(u):u}Zt.default=w;function p(y){return Uint8Array.of((y[6]&15)<<4|y[7]>>4&15,(y[7]&15)<<4|(y[4]&240)>>4,(y[4]&15)<<4|(y[5]&240)>>4,(y[5]&15)<<4|(y[0]&240)>>4,(y[0]&15)<<4|(y[1]&240)>>4,(y[1]&15)<<4|(y[2]&240)>>4,96|y[2]&15,y[3],y[8],y[9],y[10],y[11],y[12],y[13],y[14],y[15])}return Zt}var Fr={},er={},_i;function Wn(){if(_i)return er;_i=1,Object.defineProperty(er,"__esModule",{value:!0});function h(v){const T=y(v),D=p(T,v.length*8);return P(D)}function P(v){const T=new Uint8Array(v.length*4);for(let D=0;D<v.length*4;D++)T[D]=v[D>>2]>>>D%4*8&255;return T}function w(v){return(v+64>>>9<<4)+14+1}function p(v,T){const D=new Uint32Array(w(T)).fill(0);D.set(v),D[T>>5]|=128<<T%32,D[D.length-1]=T,v=D;let n=1732584193,i=-271733879,e=-1732584194,t=271733878;for(let r=0;r<v.length;r+=16){const s=n,a=i,d=e,c=t;n=R(n,i,e,t,v[r],7,-680876936),t=R(t,n,i,e,v[r+1],12,-389564586),e=R(e,t,n,i,v[r+2],17,606105819),i=R(i,e,t,n,v[r+3],22,-1044525330),n=R(n,i,e,t,v[r+4],7,-176418897),t=R(t,n,i,e,v[r+5],12,1200080426),e=R(e,t,n,i,v[r+6],17,-1473231341),i=R(i,e,t,n,v[r+7],22,-45705983),n=R(n,i,e,t,v[r+8],7,1770035416),t=R(t,n,i,e,v[r+9],12,-1958414417),e=R(e,t,n,i,v[r+10],17,-42063),i=R(i,e,t,n,v[r+11],22,-1990404162),n=R(n,i,e,t,v[r+12],7,1804603682),t=R(t,n,i,e,v[r+13],12,-40341101),e=R(e,t,n,i,v[r+14],17,-1502002290),i=R(i,e,t,n,v[r+15],22,1236535329),n=S(n,i,e,t,v[r+1],5,-165796510),t=S(t,n,i,e,v[r+6],9,-1069501632),e=S(e,t,n,i,v[r+11],14,643717713),i=S(i,e,t,n,v[r],20,-373897302),n=S(n,i,e,t,v[r+5],5,-701558691),t=S(t,n,i,e,v[r+10],9,38016083),e=S(e,t,n,i,v[r+15],14,-660478335),i=S(i,e,t,n,v[r+4],20,-405537848),n=S(n,i,e,t,v[r+9],5,568446438),t=S(t,n,i,e,v[r+14],9,-1019803690),e=S(e,t,n,i,v[r+3],14,-187363961),i=S(i,e,t,n,v[r+8],20,1163531501),n=S(n,i,e,t,v[r+13],5,-1444681467),t=S(t,n,i,e,v[r+2],9,-51403784),e=S(e,t,n,i,v[r+7],14,1735328473),i=S(i,e,t,n,v[r+12],20,-1926607734),n=_(n,i,e,t,v[r+5],4,-378558),t=_(t,n,i,e,v[r+8],11,-2022574463),e=_(e,t,n,i,v[r+11],16,1839030562),i=_(i,e,t,n,v[r+14],23,-35309556),n=_(n,i,e,t,v[r+1],4,-1530992060),t=_(t,n,i,e,v[r+4],11,1272893353),e=_(e,t,n,i,v[r+7],16,-155497632),i=_(i,e,t,n,v[r+10],23,-1094730640),n=_(n,i,e,t,v[r+13],4,681279174),t=_(t,n,i,e,v[r],11,-358537222),e=_(e,t,n,i,v[r+3],16,-722521979),i=_(i,e,t,n,v[r+6],23,76029189),n=_(n,i,e,t,v[r+9],4,-640364487),t=_(t,n,i,e,v[r+12],11,-421815835),e=_(e,t,n,i,v[r+15],16,530742520),i=_(i,e,t,n,v[r+2],23,-995338651),n=o(n,i,e,t,v[r],6,-198630844),t=o(t,n,i,e,v[r+7],10,1126891415),e=o(e,t,n,i,v[r+14],15,-1416354905),i=o(i,e,t,n,v[r+5],21,-57434055),n=o(n,i,e,t,v[r+12],6,1700485571),t=o(t,n,i,e,v[r+3],10,-1894986606),e=o(e,t,n,i,v[r+10],15,-1051523),i=o(i,e,t,n,v[r+1],21,-2054922799),n=o(n,i,e,t,v[r+8],6,1873313359),t=o(t,n,i,e,v[r+15],10,-30611744),e=o(e,t,n,i,v[r+6],15,-1560198380),i=o(i,e,t,n,v[r+13],21,1309151649),n=o(n,i,e,t,v[r+4],6,-145523070),t=o(t,n,i,e,v[r+11],10,-1120210379),e=o(e,t,n,i,v[r+2],15,718787259),i=o(i,e,t,n,v[r+9],21,-343485551),n=g(n,s),i=g(i,a),e=g(e,d),t=g(t,c)}return Uint32Array.of(n,i,e,t)}function y(v){if(v.length===0)return new Uint32Array;const T=new Uint32Array(w(v.length*8)).fill(0);for(let D=0;D<v.length;D++)T[D>>2]|=(v[D]&255)<<D%4*8;return T}function g(v,T){const D=(v&65535)+(T&65535);return(v>>16)+(T>>16)+(D>>16)<<16|D&65535}function u(v,T){return v<<T|v>>>32-T}function m(v,T,D,n,i,e){return g(u(g(g(T,v),g(n,e)),i),D)}function R(v,T,D,n,i,e,t){return m(T&D|~T&n,v,T,i,e,t)}function S(v,T,D,n,i,e,t){return m(T&n|D&~n,v,T,i,e,t)}function _(v,T,D,n,i,e,t){return m(T^D^n,v,T,i,e,t)}function o(v,T,D,n,i,e,t){return m(D^(T|~n),v,T,i,e,t)}return er.default=h,er}var ge={},wi;function cr(){if(wi)return ge;wi=1,Object.defineProperty(ge,"__esModule",{value:!0}),ge.URL=ge.DNS=ge.stringToBytes=void 0;const h=hr(),P=Pe();function w(y){y=unescape(encodeURIComponent(y));const g=new Uint8Array(y.length);for(let u=0;u<y.length;++u)g[u]=y.charCodeAt(u);return g}ge.stringToBytes=w,ge.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",ge.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8";function p(y,g,u,m,R,S){const _=typeof u=="string"?w(u):u,o=typeof m=="string"?(0,h.default)(m):m;if(typeof m=="string"&&(m=(0,h.default)(m)),(m==null?void 0:m.length)!==16)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let v=new Uint8Array(16+_.length);if(v.set(o),v.set(_,o.length),v=g(v),v[6]=v[6]&15|y,v[8]=v[8]&63|128,R){S=S||0;for(let T=0;T<16;++T)R[S+T]=v[T];return R}return(0,P.unsafeStringify)(v)}return ge.default=p,ge}var vi;function Yn(){return vi||(vi=1,function(h){Object.defineProperty(h,"__esModule",{value:!0}),h.URL=h.DNS=void 0;const P=Wn(),w=cr();var p=cr();Object.defineProperty(h,"DNS",{enumerable:!0,get:function(){return p.DNS}}),Object.defineProperty(h,"URL",{enumerable:!0,get:function(){return p.URL}});function y(g,u,m,R){return(0,w.default)(48,P.default,g,u,m,R)}y.DNS=w.DNS,y.URL=w.URL,h.default=y}(Fr)),Fr}var tr={},rr={},Si;function Xn(){if(Si)return rr;Si=1,Object.defineProperty(rr,"__esModule",{value:!0});const h=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);return rr.default={randomUUID:h},rr}var bi;function Jn(){if(bi)return tr;bi=1,Object.defineProperty(tr,"__esModule",{value:!0});const h=Xn(),P=Hr(),w=Pe();function p(y,g,u){var R;if(h.default.randomUUID&&!g&&!y)return h.default.randomUUID();y=y||{};const m=y.random??((R=y.rng)==null?void 0:R.call(y))??(0,P.default)();if(m.length<16)throw new Error("Random bytes length must be >= 16");if(m[6]=m[6]&15|64,m[8]=m[8]&63|128,g){if(u=u||0,u<0||u+16>g.length)throw new RangeError(`UUID byte range ${u}:${u+15} is out of buffer bounds`);for(let S=0;S<16;++S)g[u+S]=m[S];return g}return(0,w.unsafeStringify)(m)}return tr.default=p,tr}var Ur={},sr={},yi;function Zn(){if(yi)return sr;yi=1,Object.defineProperty(sr,"__esModule",{value:!0});function h(p,y,g,u){switch(p){case 0:return y&g^~y&u;case 1:return y^g^u;case 2:return y&g^y&u^g&u;case 3:return y^g^u}}function P(p,y){return p<<y|p>>>32-y}function w(p){const y=[1518500249,1859775393,2400959708,3395469782],g=[1732584193,4023233417,2562383102,271733878,3285377520],u=new Uint8Array(p.length+1);u.set(p),u[p.length]=128,p=u;const m=p.length/4+2,R=Math.ceil(m/16),S=new Array(R);for(let _=0;_<R;++_){const o=new Uint32Array(16);for(let v=0;v<16;++v)o[v]=p[_*64+v*4]<<24|p[_*64+v*4+1]<<16|p[_*64+v*4+2]<<8|p[_*64+v*4+3];S[_]=o}S[R-1][14]=(p.length-1)*8/Math.pow(2,32),S[R-1][14]=Math.floor(S[R-1][14]),S[R-1][15]=(p.length-1)*8&4294967295;for(let _=0;_<R;++_){const o=new Uint32Array(80);for(let e=0;e<16;++e)o[e]=S[_][e];for(let e=16;e<80;++e)o[e]=P(o[e-3]^o[e-8]^o[e-14]^o[e-16],1);let v=g[0],T=g[1],D=g[2],n=g[3],i=g[4];for(let e=0;e<80;++e){const t=Math.floor(e/20),r=P(v,5)+h(t,T,D,n)+i+y[t]+o[e]>>>0;i=n,n=D,D=P(T,30)>>>0,T=v,v=r}g[0]=g[0]+v>>>0,g[1]=g[1]+T>>>0,g[2]=g[2]+D>>>0,g[3]=g[3]+n>>>0,g[4]=g[4]+i>>>0}return Uint8Array.of(g[0]>>24,g[0]>>16,g[0]>>8,g[0],g[1]>>24,g[1]>>16,g[1]>>8,g[1],g[2]>>24,g[2]>>16,g[2]>>8,g[2],g[3]>>24,g[3]>>16,g[3]>>8,g[3],g[4]>>24,g[4]>>16,g[4]>>8,g[4])}return sr.default=w,sr}var Ri;function ea(){return Ri||(Ri=1,function(h){Object.defineProperty(h,"__esModule",{value:!0}),h.URL=h.DNS=void 0;const P=Zn(),w=cr();var p=cr();Object.defineProperty(h,"DNS",{enumerable:!0,get:function(){return p.DNS}}),Object.defineProperty(h,"URL",{enumerable:!0,get:function(){return p.URL}});function y(g,u,m,R){return(0,w.default)(80,P.default,g,u,m,R)}y.DNS=w.DNS,y.URL=w.URL,h.default=y}(Ur)),Ur}var ir={},Ci;function ta(){if(Ci)return ir;Ci=1,Object.defineProperty(ir,"__esModule",{value:!0});const h=Pe(),P=rn(),w=sn();function p(y,g,u){y??(y={}),u??(u=0);let m=(0,P.default)({...y,_v6:!0},new Uint8Array(16));if(m=(0,w.default)(m),g){for(let R=0;R<16;R++)g[u+R]=m[R];return g}return(0,h.unsafeStringify)(m)}return ir.default=p,ir}var nr={},Ti;function ra(){if(Ti)return nr;Ti=1,Object.defineProperty(nr,"__esModule",{value:!0});const h=hr(),P=Pe();function w(y){const g=typeof y=="string"?(0,h.default)(y):y,u=p(g);return typeof y=="string"?(0,P.unsafeStringify)(u):u}nr.default=w;function p(y){return Uint8Array.of((y[3]&15)<<4|y[4]>>4&15,(y[4]&15)<<4|(y[5]&240)>>4,(y[5]&15)<<4|y[6]&15,y[7],(y[1]&15)<<4|(y[2]&240)>>4,(y[2]&15)<<4|(y[3]&240)>>4,16|(y[0]&240)>>4,(y[0]&15)<<4|(y[1]&240)>>4,y[8],y[9],y[10],y[11],y[12],y[13],y[14],y[15])}return nr}var Ke={},Di;function sa(){if(Di)return Ke;Di=1,Object.defineProperty(Ke,"__esModule",{value:!0}),Ke.updateV7State=void 0;const h=Hr(),P=Pe(),w={};function p(u,m,R){var _;let S;if(u)S=g(u.random??((_=u.rng)==null?void 0:_.call(u))??(0,h.default)(),u.msecs,u.seq,m,R);else{const o=Date.now(),v=(0,h.default)();y(w,o,v),S=g(v,w.msecs,w.seq,m,R)}return m??(0,P.unsafeStringify)(S)}function y(u,m,R){return u.msecs??(u.msecs=-1/0),u.seq??(u.seq=0),m>u.msecs?(u.seq=R[6]<<23|R[7]<<16|R[8]<<8|R[9],u.msecs=m):(u.seq=u.seq+1|0,u.seq===0&&u.msecs++),u}Ke.updateV7State=y;function g(u,m,R,S,_=0){if(u.length<16)throw new Error("Random bytes length must be >= 16");if(!S)S=new Uint8Array(16),_=0;else if(_<0||_+16>S.length)throw new RangeError(`UUID byte range ${_}:${_+15} is out of buffer bounds`);return m??(m=Date.now()),R??(R=u[6]*127<<24|u[7]<<16|u[8]<<8|u[9]),S[_++]=m/1099511627776&255,S[_++]=m/4294967296&255,S[_++]=m/16777216&255,S[_++]=m/65536&255,S[_++]=m/256&255,S[_++]=m&255,S[_++]=112|R>>>28&15,S[_++]=R>>>20&255,S[_++]=128|R>>>14&63,S[_++]=R>>>6&255,S[_++]=R<<2&255|u[10]&3,S[_++]=u[11],S[_++]=u[12],S[_++]=u[13],S[_++]=u[14],S[_++]=u[15],S}return Ke.default=p,Ke}var ar={},Pi;function ia(){if(Pi)return ar;Pi=1,Object.defineProperty(ar,"__esModule",{value:!0});const h=ur();function P(w){if(!(0,h.default)(w))throw TypeError("Invalid UUID");return parseInt(w.slice(14,15),16)}return ar.default=P,ar}var ki;function na(){return ki||(ki=1,function(h){Object.defineProperty(h,"__esModule",{value:!0}),h.version=h.validate=h.v7=h.v6ToV1=h.v6=h.v5=h.v4=h.v3=h.v1ToV6=h.v1=h.stringify=h.parse=h.NIL=h.MAX=void 0;var P=Kn();Object.defineProperty(h,"MAX",{enumerable:!0,get:function(){return P.default}});var w=Gn();Object.defineProperty(h,"NIL",{enumerable:!0,get:function(){return w.default}});var p=hr();Object.defineProperty(h,"parse",{enumerable:!0,get:function(){return p.default}});var y=Pe();Object.defineProperty(h,"stringify",{enumerable:!0,get:function(){return y.default}});var g=rn();Object.defineProperty(h,"v1",{enumerable:!0,get:function(){return g.default}});var u=sn();Object.defineProperty(h,"v1ToV6",{enumerable:!0,get:function(){return u.default}});var m=Yn();Object.defineProperty(h,"v3",{enumerable:!0,get:function(){return m.default}});var R=Jn();Object.defineProperty(h,"v4",{enumerable:!0,get:function(){return R.default}});var S=ea();Object.defineProperty(h,"v5",{enumerable:!0,get:function(){return S.default}});var _=ta();Object.defineProperty(h,"v6",{enumerable:!0,get:function(){return _.default}});var o=ra();Object.defineProperty(h,"v6ToV1",{enumerable:!0,get:function(){return o.default}});var v=sa();Object.defineProperty(h,"v7",{enumerable:!0,get:function(){return v.default}});var T=ur();Object.defineProperty(h,"validate",{enumerable:!0,get:function(){return T.default}});var D=ia();Object.defineProperty(h,"version",{enumerable:!0,get:function(){return D.default}})}(Nr)),Nr}var It={},Ei;function aa(){if(Ei)return It;Ei=1,Object.defineProperty(It,"__esModule",{value:!0}),It.FakeEventTarget=void 0;let h=class{constructor(){k(this,"listeners",{})}addEventListener(w,p,y={}){var g;p&&((g=this.listeners)[w]??(g[w]=[]),this.listeners[w].push({callback:p,once:y.once===!0}))}removeEventListener(w,p){this.listeners[w]&&(this.listeners[w]=this.listeners[w].filter(y=>y.callback!==p))}dispatchEvent(w){if(!w||typeof w.type!="string")throw new Error("invalid event object");const p=this.listeners[w.type];if(!p)return!0;for(const y of[...p]){try{y.callback.call(this,w)}catch(g){setTimeout(()=>{throw g},0)}y.once&&this.removeEventListener(w.type,y.callback)}return!w.defaultPrevented}};return It.FakeEventTarget=h,It}var or={},xi;function oa(){if(xi)return or;xi=1,Object.defineProperty(or,"__esModule",{value:!0}),or.clone=h;function h(P){if(P!==void 0)return Number.isNaN(P)?NaN:typeof structuredClone=="function"?structuredClone(P):JSON.parse(JSON.stringify(P))}return or}var Li;function ca(){var y,g,u,m,R,S,_,o,v,T,D,n,i,e,t,r;if(Li)return Lt;Li=1,Object.defineProperty(Lt,"__esModule",{value:!0}),Lt.FakeMediaStreamTrack=void 0;const h=na(),P=aa(),w=oa(),s=class s extends P.FakeEventTarget{constructor({kind:c,id:f,label:l,contentHint:b,enabled:E,muted:x,readyState:C,capabilities:L,constraints:M,settings:I,data:O}){super();ee(this,y);ee(this,g);ee(this,u);ee(this,m);ee(this,R);ee(this,S);ee(this,_);ee(this,o);ee(this,v);ee(this,T);ee(this,D);ee(this,n,null);ee(this,i,null);ee(this,e,null);ee(this,t,null);ee(this,r,null);G(this,y,f??(0,h.v4)()),G(this,g,c),G(this,u,l??""),G(this,_,b??""),G(this,R,E??!0),G(this,S,x??!1),G(this,m,C??"live"),G(this,o,L??{}),G(this,v,M??{}),G(this,T,I??{}),G(this,D,O??{})}get id(){return B(this,y)}get kind(){return B(this,g)}get label(){return B(this,u)}get contentHint(){return B(this,_)}set contentHint(c){G(this,_,c)}get enabled(){return B(this,R)}set enabled(c){const f=B(this,R)!==c;G(this,R,c),f&&this.dispatchEvent(new Event("enabledchange"))}get muted(){return B(this,S)}get readyState(){return B(this,m)}get data(){return B(this,D)}set data(c){G(this,D,c)}get onmute(){return B(this,n)}set onmute(c){B(this,n)&&this.removeEventListener("mute",B(this,n)),G(this,n,c),c&&this.addEventListener("mute",c)}get onunmute(){return B(this,i)}set onunmute(c){B(this,i)&&this.removeEventListener("unmute",B(this,i)),G(this,i,c),c&&this.addEventListener("unmute",c)}get onended(){return B(this,e)}set onended(c){B(this,e)&&this.removeEventListener("ended",B(this,e)),G(this,e,c),c&&this.addEventListener("ended",c)}get onenabledchange(){return B(this,t)}set onenabledchange(c){B(this,t)&&this.removeEventListener("enabledchange",B(this,t)),G(this,t,c),c&&this.addEventListener("enabledchange",c)}get onstopped(){return B(this,r)}set onstopped(c){B(this,r)&&this.removeEventListener("stopped",B(this,r)),G(this,r,c),c&&this.addEventListener("stopped",c)}addEventListener(c,f,l){super.addEventListener(c,f,l)}removeEventListener(c,f){super.removeEventListener(c,f)}stop(){B(this,m)!=="ended"&&(G(this,m,"ended"),this.dispatchEvent(new Event("stopped")))}clone({id:c,data:f}={}){return new s({id:c??(0,h.v4)(),kind:B(this,g),label:B(this,u),contentHint:B(this,_),enabled:B(this,R),muted:B(this,S),readyState:B(this,m),capabilities:(0,w.clone)(B(this,o)),constraints:(0,w.clone)(B(this,v)),settings:(0,w.clone)(B(this,T)),data:f??(0,w.clone)(B(this,D))})}getCapabilities(){return B(this,o)}getConstraints(){return B(this,v)}async applyConstraints(c={}){return G(this,v,c),Promise.resolve()}getSettings(){return B(this,T)}remoteStop(){B(this,m)!=="ended"&&(G(this,m,"ended"),this.dispatchEvent(new Event("stopped")),this.dispatchEvent(new Event("ended")))}remoteMute(){B(this,S)||(G(this,S,!0),this.dispatchEvent(new Event("mute")))}remoteUnmute(){B(this,S)&&(G(this,S,!1),this.dispatchEvent(new Event("unmute")))}};y=new WeakMap,g=new WeakMap,u=new WeakMap,m=new WeakMap,R=new WeakMap,S=new WeakMap,_=new WeakMap,o=new WeakMap,v=new WeakMap,T=new WeakMap,D=new WeakMap,n=new WeakMap,i=new WeakMap,e=new WeakMap,t=new WeakMap,r=new WeakMap;let p=s;return Lt.FakeMediaStreamTrack=p,Lt}var Ii;function da(){if(Ii)return xt;Ii=1,Object.defineProperty(xt,"__esModule",{value:!0}),xt.FakeHandler=void 0;const h=ca(),P=Te(),w=Y(),p=J(),y=ie(),g=se(),u=de(),m=new w.Logger("FakeHandler"),R="FakeHandler";class S extends P.EnhancedEventEmitter{constructor({id:T,ordered:D,maxPacketLifeTime:n,maxRetransmits:i,label:e,protocol:t}){super();k(this,"id");k(this,"ordered");k(this,"maxPacketLifeTime");k(this,"maxRetransmits");k(this,"label");k(this,"protocol");this.id=T,this.ordered=D,this.maxPacketLifeTime=n,this.maxRetransmits=i,this.label=e,this.protocol=t}close(){this.safeEmit("close"),this.emit("@close")}send(T){this.safeEmit("message",T)}addEventListener(T,D){this.on(T,D)}}let _=class nn extends u.HandlerInterface{constructor(T){super();k(this,"_closed",!1);k(this,"fakeParameters");k(this,"_rtpParametersByKind");k(this,"_cname",`CNAME-${p.generateRandomNumber()}`);k(this,"_transportReady",!1);k(this,"_nextLocalId",1);k(this,"_tracks",new Map);k(this,"_nextSctpStreamId",0);this.fakeParameters=T}static createFactory(T){return()=>new nn(T)}get name(){return R}close(){m.debug("close()"),!this._closed&&(this._closed=!0)}setIceGatheringState(T){this.emit("@icegatheringstatechange",T)}setConnectionState(T){this.emit("@connectionstatechange",T)}async getNativeRtpCapabilities(){return m.debug("getNativeRtpCapabilities()"),this.fakeParameters.generateNativeRtpCapabilities()}async getNativeSctpCapabilities(){return m.debug("getNativeSctpCapabilities()"),this.fakeParameters.generateNativeSctpCapabilities()}run({direction:T,iceParameters:D,iceCandidates:n,dtlsParameters:i,sctpParameters:e,iceServers:t,iceTransportPolicy:r,proprietaryConstraints:s,extendedRtpCapabilities:a}){this.assertNotClosed(),m.debug("run()"),this._rtpParametersByKind={audio:y.getSendingRtpParameters("audio",a),video:y.getSendingRtpParameters("video",a)}}async updateIceServers(T){this.assertNotClosed(),m.debug("updateIceServers()")}async restartIce(T){this.assertNotClosed(),m.debug("restartIce()")}async getTransportStats(){return this.assertNotClosed(),new Map}async send({track:T,encodings:D,codecOptions:n,codec:i}){this.assertNotClosed(),m.debug("send() [kind:%s, track.id:%s]",T.kind,T.id),this._transportReady||await this.setupTransport({localDtlsRole:"server"});const e=p.clone(this._rtpParametersByKind[T.kind]),t=e.codecs.some(s=>/.+\/rtx$/i.test(s.mimeType));e.mid=`mid-${p.generateRandomNumber()}`,D||(D=[{}]);for(const s of D)s.ssrc=p.generateRandomNumber(),t&&(s.rtx={ssrc:p.generateRandomNumber()});e.encodings=D,e.rtcp={cname:this._cname,reducedSize:!0,mux:!0};const r=this._nextLocalId++;return this._tracks.set(r,T),{localId:String(r),rtpParameters:e}}async stopSending(T){if(m.debug("stopSending() [localId:%s]",T),!this._closed){if(!this._tracks.has(Number(T)))throw new Error("local track not found");this._tracks.delete(Number(T))}}async pauseSending(T){this.assertNotClosed()}async resumeSending(T){this.assertNotClosed()}async replaceTrack(T,D){this.assertNotClosed(),D?m.debug("replaceTrack() [localId:%s, track.id:%s]",T,D.id):m.debug("replaceTrack() [localId:%s, no track]",T),this._tracks.delete(Number(T)),this._tracks.set(Number(T),D)}async setMaxSpatialLayer(T,D){this.assertNotClosed(),m.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]",T,D)}async setRtpEncodingParameters(T,D){this.assertNotClosed(),m.debug("setRtpEncodingParameters() [localId:%s, params:%o]",T,D)}async getSenderStats(T){return this.assertNotClosed(),new Map}async sendDataChannel({ordered:T,maxPacketLifeTime:D,maxRetransmits:n,label:i,protocol:e}){this.assertNotClosed(),this._transportReady||await this.setupTransport({localDtlsRole:"server"}),m.debug("sendDataChannel()");const t=new S({id:this._nextSctpStreamId++,ordered:T,maxPacketLifeTime:D,maxRetransmits:n,label:i,protocol:e}),r={streamId:this._nextSctpStreamId,ordered:T,maxPacketLifeTime:D,maxRetransmits:n};return{dataChannel:t,sctpStreamParameters:r}}async receive(T){this.assertNotClosed();const D=[];for(const n of T){const{trackId:i,kind:e}=n;this._transportReady||await this.setupTransport({localDtlsRole:"client"}),m.debug("receive() [trackId:%s, kind:%s]",i,e);const t=this._nextLocalId++,r=new h.FakeMediaStreamTrack({kind:e});this._tracks.set(t,r),D.push({localId:String(t),track:r})}return D}async stopReceiving(T){if(!this._closed)for(const D of T)m.debug("stopReceiving() [localId:%s]",D),this._tracks.delete(Number(D))}async pauseReceiving(T){this.assertNotClosed()}async resumeReceiving(T){this.assertNotClosed()}async getReceiverStats(T){return this.assertNotClosed(),new Map}async receiveDataChannel({sctpStreamParameters:T,label:D,protocol:n}){return this.assertNotClosed(),this._transportReady||await this.setupTransport({localDtlsRole:"client"}),m.debug("receiveDataChannel()"),{dataChannel:new S({id:T.streamId,ordered:T.ordered,maxPacketLifeTime:T.maxPacketLifeTime,maxRetransmits:T.maxRetransmits,label:D,protocol:n})}}async setupTransport({localDtlsRole:T,localSdpObject:D}){const n=p.clone(this.fakeParameters.generateLocalDtlsParameters());T&&(n.role=T),this.emit("@connectionstatechange","connecting"),await new Promise((i,e)=>this.emit("@connect",{dtlsParameters:n},i,e)),this._transportReady=!0}assertNotClosed(){if(this._closed)throw new g.InvalidStateError("method called in a closed handler")}};return xt.FakeHandler=_,xt}var le={},Mi;function pa(){if(Mi)return le;Mi=1,Object.defineProperty(le,"__esModule",{value:!0}),le.generateRouterRtpCapabilities=w,le.generateNativeRtpCapabilities=p,le.generateNativeSctpCapabilities=y,le.generateLocalDtlsParameters=g,le.generateTransportRemoteParameters=u,le.generateProducerRemoteParameters=m,le.generateConsumerRemoteParameters=R,le.generateDataProducerRemoteParameters=S,le.generateDataConsumerRemoteParameters=_;const h=J();function P(){return String(h.generateRandomNumber())}function w(){return h.deepFreeze({codecs:[{mimeType:"audio/opus",kind:"audio",preferredPayloadType:100,clockRate:48e3,channels:2,rtcpFeedback:[{type:"transport-cc"}],parameters:{useinbandfec:1,foo:"bar"}},{mimeType:"video/VP8",kind:"video",preferredPayloadType:101,clockRate:9e4,rtcpFeedback:[{type:"nack"},{type:"nack",parameter:"pli"},{type:"ccm",parameter:"fir"},{type:"goog-remb"},{type:"transport-cc"}],parameters:{"x-google-start-bitrate":1500}},{mimeType:"video/rtx",kind:"video",preferredPayloadType:102,clockRate:9e4,rtcpFeedback:[],parameters:{apt:101}},{mimeType:"video/H264",kind:"video",preferredPayloadType:103,clockRate:9e4,rtcpFeedback:[{type:"nack"},{type:"nack",parameter:"pli"},{type:"ccm",parameter:"fir"},{type:"goog-remb"},{type:"transport-cc"}],parameters:{"level-asymmetry-allowed":1,"packetization-mode":1,"profile-level-id":"42e01f"}},{mimeType:"video/rtx",kind:"video",preferredPayloadType:104,clockRate:9e4,rtcpFeedback:[],parameters:{apt:103}},{mimeType:"video/VP9",kind:"video",preferredPayloadType:105,clockRate:9e4,rtcpFeedback:[{type:"nack"},{type:"nack",parameter:"pli"},{type:"ccm",parameter:"fir"},{type:"goog-remb"},{type:"transport-cc"}],parameters:{"profile-id":0,"x-google-start-bitrate":1500}},{mimeType:"video/rtx",kind:"video",preferredPayloadType:106,clockRate:9e4,rtcpFeedback:[],parameters:{apt:105}}],headerExtensions:[{kind:"audio",uri:"urn:ietf:params:rtp-hdrext:sdes:mid",preferredId:1,preferredEncrypt:!1,direction:"sendrecv"},{kind:"video",uri:"urn:ietf:params:rtp-hdrext:sdes:mid",preferredId:1,preferredEncrypt:!1,direction:"sendrecv"},{kind:"video",uri:"urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id",preferredId:2,preferredEncrypt:!1,direction:"recvonly"},{kind:"video",uri:"urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id",preferredId:3,preferredEncrypt:!1,direction:"recvonly"},{kind:"audio",uri:"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time",preferredId:4,preferredEncrypt:!1,direction:"sendrecv"},{kind:"video",uri:"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time",preferredId:4,preferredEncrypt:!1,direction:"sendrecv"},{kind:"audio",uri:"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01",preferredId:5,preferredEncrypt:!1,direction:"recvonly"},{kind:"video",uri:"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01",preferredId:5,preferredEncrypt:!1,direction:"sendrecv"},{kind:"video",uri:"http://tools.ietf.org/html/draft-ietf-avtext-framemarking-07",preferredId:6,preferredEncrypt:!1,direction:"sendrecv"},{kind:"video",uri:"urn:ietf:params:rtp-hdrext:framemarking",preferredId:7,preferredEncrypt:!1,direction:"sendrecv"},{kind:"audio",uri:"urn:ietf:params:rtp-hdrext:ssrc-audio-level",preferredId:10,preferredEncrypt:!1,direction:"sendrecv"},{kind:"video",uri:"urn:3gpp:video-orientation",preferredId:11,preferredEncrypt:!1,direction:"sendrecv"},{kind:"video",uri:"urn:ietf:params:rtp-hdrext:toffset",preferredId:12,preferredEncrypt:!1,direction:"sendrecv"}]})}function p(){return h.deepFreeze({codecs:[{mimeType:"audio/opus",kind:"audio",preferredPayloadType:111,clockRate:48e3,channels:2,rtcpFeedback:[{type:"transport-cc"}],parameters:{minptime:10,useinbandfec:1}},{mimeType:"audio/ISAC",kind:"audio",preferredPayloadType:103,clockRate:16e3,channels:1,rtcpFeedback:[{type:"transport-cc"}],parameters:{}},{mimeType:"audio/CN",kind:"audio",preferredPayloadType:106,clockRate:32e3,channels:1,rtcpFeedback:[{type:"transport-cc"}],parameters:{}},{mimeType:"video/VP8",kind:"video",preferredPayloadType:96,clockRate:9e4,rtcpFeedback:[{type:"goog-remb"},{type:"transport-cc"},{type:"ccm",parameter:"fir"},{type:"nack"},{type:"nack",parameter:"pli"}],parameters:{baz:"1234abcd"}},{mimeType:"video/rtx",kind:"video",preferredPayloadType:97,clockRate:9e4,rtcpFeedback:[],parameters:{apt:96}},{mimeType:"video/VP9",kind:"video",preferredPayloadType:98,clockRate:9e4,rtcpFeedback:[{type:"goog-remb"},{type:"transport-cc"},{type:"ccm",parameter:"fir"},{type:"nack"},{type:"nack",parameter:"pli"}],parameters:{"profile-id":0}},{mimeType:"video/rtx",kind:"video",preferredPayloadType:99,clockRate:9e4,rtcpFeedback:[],parameters:{apt:98}}],headerExtensions:[{kind:"audio",uri:"urn:ietf:params:rtp-hdrext:sdes:mid",preferredId:1},{kind:"video",uri:"urn:ietf:params:rtp-hdrext:sdes:mid",preferredId:1},{kind:"video",uri:"urn:ietf:params:rtp-hdrext:toffset",preferredId:2},{kind:"video",uri:"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time",preferredId:3},{kind:"video",uri:"urn:3gpp:video-orientation",preferredId:4},{kind:"video",uri:"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01",preferredId:5},{kind:"video",uri:"http://www.webrtc.org/experiments/rtp-hdrext/playout-delay",preferredId:6},{kind:"video",uri:"http://www.webrtc.org/experiments/rtp-hdrext/video-content-type",preferredId:7},{kind:"video",uri:"http://www.webrtc.org/experiments/rtp-hdrext/video-timing",preferredId:8},{kind:"audio",uri:"urn:ietf:params:rtp-hdrext:ssrc-audio-level",preferredId:10}]})}function y(){return h.deepFreeze({numStreams:{OS:2048,MIS:2048}})}function g(){return h.deepFreeze({fingerprints:[{algorithm:"sha-256",value:"82:5A:68:3D:36:C3:0A:DE:AF:E7:32:43:D2:88:83:57:AC:2D:65:E5:80:C4:B6:FB:AF:1A:A0:21:9F:6D:0C:AD"}],role:"auto"})}function u(){return{id:P(),iceParameters:h.deepFreeze({iceLite:!0,password:"yku5ej8nvfaor28lvtrabcx0wkrpkztz",usernameFragment:"h3hk1iz6qqlnqlne"}),iceCandidates:h.deepFreeze([{foundation:"udpcandidate",address:"9.9.9.9",ip:"9.9.9.9",port:40533,priority:1078862079,protocol:"udp",type:"host",tcpType:"passive"},{foundation:"udpcandidate",address:"9.9.9.9",ip:"9:9:9:9:9:9",port:41333,priority:1078862089,protocol:"udp",type:"host",tcpType:"passive"}]),dtlsParameters:h.deepFreeze({fingerprints:[{algorithm:"sha-256",value:"A9:F4:E0:D2:74:D3:0F:D9:CA:A5:2F:9F:7F:47:FA:F0:C4:72:DD:73:49:D0:3B:14:90:20:51:30:1B:90:8E:71"},{algorithm:"sha-384",value:"03:D9:0B:87:13:98:F6:6D:BC:FC:92:2E:39:D4:E1:97:32:61:30:56:84:70:81:6E:D1:82:97:EA:D9:C1:21:0F:6B:C5:E7:7F:E1:97:0C:17:97:6E:CF:B3:EF:2E:74:B0"},{algorithm:"sha-512",value:"84:27:A4:28:A4:73:AF:43:02:2A:44:68:FF:2F:29:5C:3B:11:9A:60:F4:A8:F0:F5:AC:A0:E3:49:3E:B1:34:53:A9:85:CE:51:9B:ED:87:5E:B8:F4:8E:3D:FA:20:51:B8:96:EE:DA:56:DC:2F:5C:62:79:15:23:E0:21:82:2B:2C"}],role:"auto"}),sctpParameters:h.deepFreeze({port:5e3,OS:2048,MIS:2048,maxMessageSize:2e6})}}function m(){return h.deepFreeze({id:P()})}function R({id:o,codecMimeType:v}={}){switch(v){case"audio/opus":return{id:o??P(),producerId:P(),kind:"audio",rtpParameters:h.deepFreeze({codecs:[{mimeType:"audio/opus",payloadType:100,clockRate:48e3,channels:2,rtcpFeedback:[{type:"transport-cc"}],parameters:{useinbandfec:1,foo:"bar"}}],encodings:[{ssrc:46687003}],headerExtensions:[{uri:"urn:ietf:params:rtp-hdrext:sdes:mid",id:1},{uri:"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01",id:5},{uri:"urn:ietf:params:rtp-hdrext:ssrc-audio-level",id:10}],rtcp:{cname:"wB4Ql4lrsxYLjzuN",reducedSize:!0,mux:!0}})};case"audio/ISAC":return{id:o??P(),producerId:P(),kind:"audio",rtpParameters:h.deepFreeze({codecs:[{mimeType:"audio/ISAC",payloadType:111,clockRate:16e3,channels:1,rtcpFeedback:[{type:"transport-cc"}],parameters:{}}],encodings:[{ssrc:46687004}],headerExtensions:[{uri:"urn:ietf:params:rtp-hdrext:sdes:mid",id:1},{uri:"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01",id:5}],rtcp:{cname:"wB4Ql4lrsxYLjzuN",reducedSize:!0,mux:!0}})};case"video/VP8":return{id:o??P(),producerId:P(),kind:"video",rtpParameters:h.deepFreeze({codecs:[{mimeType:"video/VP8",payloadType:101,clockRate:9e4,rtcpFeedback:[{type:"nack"},{type:"nack",parameter:"pli"},{type:"ccm",parameter:"fir"},{type:"goog-remb"},{type:"transport-cc"}],parameters:{"x-google-start-bitrate":1500}},{mimeType:"video/rtx",payloadType:102,clockRate:9e4,rtcpFeedback:[],parameters:{apt:101}}],encodings:[{ssrc:99991111,rtx:{ssrc:99991112}}],headerExtensions:[{uri:"urn:ietf:params:rtp-hdrext:sdes:mid",id:1},{uri:"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time",id:4},{uri:"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01",id:5},{uri:"urn:3gpp:video-orientation",id:11},{uri:"urn:ietf:params:rtp-hdrext:toffset",id:12}],rtcp:{cname:"wB4Ql4lrsxYLjzuN",reducedSize:!0,mux:!0}})};case"video/H264":return{id:o??P(),producerId:P(),kind:"video",rtpParameters:h.deepFreeze({codecs:[{mimeType:"video/H264",payloadType:103,clockRate:9e4,rtcpFeedback:[{type:"nack"},{type:"nack",parameter:"pli"},{type:"ccm",parameter:"fir"},{type:"goog-remb"},{type:"transport-cc"}],parameters:{"level-asymmetry-allowed":1,"packetization-mode":1,"profile-level-id":"42e01f"}},{mimeType:"video/rtx",payloadType:104,clockRate:9e4,rtcpFeedback:[],parameters:{apt:103}}],encodings:[{ssrc:99991113,rtx:{ssrc:99991114}}],headerExtensions:[{uri:"urn:ietf:params:rtp-hdrext:sdes:mid",id:1},{uri:"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time",id:4},{uri:"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01",id:5},{uri:"urn:3gpp:video-orientation",id:11},{uri:"urn:ietf:params:rtp-hdrext:toffset",id:12}],rtcp:{cname:"wB4Ql4lrsxYLjzuN",reducedSize:!0,mux:!0}})};default:throw new TypeError(`unknown codecMimeType '${v}'`)}}function S(){return h.deepFreeze({id:P()})}function _({id:o}={}){return{id:o??P(),dataProducerId:P(),sctpStreamParameters:h.deepFreeze({streamId:666,maxPacketLifeTime:5e3,maxRetransmits:void 0})}}return le}var Oi;function la(){return Oi||(Oi=1,function(h){Object.defineProperty(h,"__esModule",{value:!0}),h.debug=h.testFakeParameters=h.FakeHandler=h.ortc=h.parseScalabilityMode=h.detectDeviceAsync=h.detectDevice=h.Device=h.version=h.types=void 0;const P=dr();h.debug=P.default,h.types=Vn(),h.version="3.11.0";var w=tn();Object.defineProperty(h,"Device",{enumerable:!0,get:function(){return w.Device}}),Object.defineProperty(h,"detectDevice",{enumerable:!0,get:function(){return w.detectDevice}}),Object.defineProperty(h,"detectDeviceAsync",{enumerable:!0,get:function(){return w.detectDeviceAsync}});var p=De();Object.defineProperty(h,"parseScalabilityMode",{enumerable:!0,get:function(){return p.parse}}),h.ortc=ie();var y=da();Object.defineProperty(h,"FakeHandler",{enumerable:!0,get:function(){return y.FakeHandler}}),h.testFakeParameters=pa()}(kr)),kr}var ua=la();class ha{constructor(P){this.localStream=null,this.remoteStream=null,this.consumers=[],this.device=null,this.roomId=null,this.constraints={video:{width:{min:640,ideal:1920,max:1920},height:{min:480,ideal:1e3,max:1e3},frameRate:{min:30},advanced:[{width:1920,height:1280},{frameRate:{min:50}},{frameRate:{min:40}}]},audio:!0},this.handleUserLeft=()=>{},this.handleUserConnection=()=>{},this.toggleMic=()=>{},this.toggleCamera=()=>{},this.toggleRecord=()=>{},this.onRouterCapabilities=async w=>{console.log("onRouterCapabilities",w),await this.loadDevice(w),this.pubish()},this.onProducerTransportCreated=async w=>{var y,g;console.log("onProducerTransportCreated");let p=await navigator.mediaDevices.getUserMedia(this.constraints);if(!this.outTransport){const u=(y=this.device)==null?void 0:y.createSendTransport(w.parameters);this.outTransport=u,u==null||u.on("connect",async({dtlsParameters:_},o,v)=>{this.socket.emit(re.ConnectProducerTransport,_),this.socket.addEventListener("producerConnected",()=>{console.log("producerConnected"),o()})}),u==null||u.on("produce",async({kind:_,rtpParameters:o},v,T)=>{console.log("kind",_);const D={transportId:u.id,kind:_,rtpParameters:o};this.socket.emit(re.PRODUCE,D),this.socket.addEventListener("produced",n=>{console.log("produced"),v(n)})}),u==null||u.on("connectionstatechange",_=>{switch(_){case"connecting":console.log("connecting");break;case"connected":console.log("connected"),this.localStream=p,this.handleUserConnection();break;case"failed":console.log("failed"),u.close();break}}),console.log("stream",p);const m=p==null?void 0:p.getVideoTracks()[0],R=p==null?void 0:p.getAudioTracks()[0];console.log("track",m);try{this.producerAudio=await(u==null?void 0:u.produce({track:R})),this.producerVideo=await(u==null?void 0:u.produce({track:m,encodings:[{rid:"r0",maxBitrate:1e5,scaleResolutionDownBy:4},{rid:"r1",maxBitrate:3e5,scaleResolutionDownBy:2},{rid:"r2",maxBitrate:9e5,scaleResolutionDownBy:1}],codecOptions:{videoGoogleStartBitrate:1e3}})),console.log((g=this.producerVideo)==null?void 0:g.rtpParameters.encodings)}catch(_){console.error(_)}const S=m.getSettings();console.log("Resolution: ",S.width," x ",S.height)}},this.onSubTransportCreated=async w=>{if(this.inTransport)console.log("I already have transport!"),this.consumer();else{console.log("onSubTransportCreated");const p=this.device.createRecvTransport(w.parameters);this.inTransport=p,p==null||p.on("connect",async({dtlsParameters:y},g,u)=>{this.socket.emit(re.ConnectConsumerTransport,y),this.socket.addEventListener("subConnected",()=>{g()})}),p==null||p.on("connectionstatechange",async y=>{switch(y){case"connecting":console.log("subscribing......");break;case"connected":console.log("connected");break;case"failed":console.log("failed"),p.close();break}}),this.consumer()}},this.consumer=()=>{console.log("consumer");const w=this.device.rtpCapabilities;this.socket.emit(re.CONSUME,w)},this.subscribe=()=>{this.socket.emit(re.CreateConsumerTransport)},this.onPause=w=>{const y=document.getElementById("addvideos").children;for(let g=y.length-1;g>=0;g--)y[g].getAttribute("consumerId")===w&&(console.log("addclasss"),y[g].classList.add("displayHide"))},this.onResume=w=>{const y=document.getElementById("addvideos").children;for(let g=y.length-1;g>=0;g--)y[g].getAttribute("consumerId")===w&&(console.log("addclasss"),y[g].classList.remove("displayHide"))},this.onSubscribed=async w=>{if(console.log("responseeee: ",w),w.kind==="video"){console.log("onSubscribed");const p=await this.inTransport.consume({id:w.id,producerId:w.producerId,kind:w.kind,rtpParameters:w.rtpParameters});this.socket.emit(re.RESUME,w.id),p.appData={producerId:w.producerId},this.consumers.push(p);const y=new MediaStream;y.addTrack(p.track),console.log("streeeeeeeeeeeeeam",y);const g=document.getElementById("addvideos"),u=document.createElement("video");g==null||g.appendChild(u),u.setAttribute("producerId",w.producerId),u.setAttribute("consumerId",w.id),u.srcObject=y,u.autoplay=!0,u.playsInline=!0,u.classList.add("smallFrame")}else{console.log("onSubscribed audioo");const p=await this.inTransport.consume({id:w.id,producerId:w.producerId,kind:w.kind,rtpParameters:w.rtpParameters});this.socket.emit(re.RESUME,w.id),p.appData={producerId:w.producerId},this.consumers.push(p);const y=new MediaStream;y.addTrack(p.track),console.log("audiooo",y);const g=document.getElementById("addvideos"),u=document.createElement("audio");g==null||g.appendChild(u),u.setAttribute("producerId",w.producerId),u.srcObject=y,u.autoplay=!0,u.muted=!1}},this.handleLeavingUser=async(w,p)=>{console.log("handleLeavingUser",w,p);const g=document.getElementById("addvideos").children;var u=this.consumers.findIndex(S=>JSON.stringify(S.appData)===w),m=this.consumers.findIndex(S=>JSON.stringify(S.appData)===p);this.consumers.splice(u,1),this.consumers.splice(m,1),this.consumers.length===0&&(this.inTransport.close(),this.inTransport=null,this.socket.emit("close-inTransport"));const R={producerId:w,audioProducerId:p};this.socket.emit("closeConsumers",R);for(let S=g.length-1;S>=0;S--)(g[S].getAttribute("producerId")===w||g[S].getAttribute("producerId")===p)&&(console.log("removing"),g[S].remove())},this.socket=P}registerSocketEvents(){this.socket.on(re.RouterCapabilities,this.onRouterCapabilities),this.socket.on(re.ProducerTransportCreated,this.onProducerTransportCreated),this.socket.on("pause",this.onPause),this.socket.on(re.RESUMED,this.onResume),this.socket.on(re.SubTransportCreated,P=>{console.log("subbbbbbbcREEEEEEt"),this.onSubTransportCreated(P)}),this.socket.on(re.SUBSCRIBED,P=>{console.log("subscribeeeeeeeeeeed"),this.onSubscribed(P)}),this.socket.on("user-joined",()=>{console.log("userjoineddddddd"),this.subscribe()}),this.socket.on("producerExist",()=>{console.log("producerExist"),this.subscribe()}),this.socket.on("user-left",this.handleLeavingUser)}async init(){try{console.log("webrtc init"),this.socket.emit(re.GETRouterRTPCapabilities)}catch(P){console.error("Initialization error:",P)}}async loadDevice(P){console.log("loadDevice");try{this.device=await ua.Device.factory(),await this.device.load({routerRtpCapabilities:P}),console.log("Device loaded successfully")}catch(w){w==="UnsupportedError"?console.log("browser not supported"):console.error("error while loading device:",w)}}pubish(){this.socket.emit(re.CreateProducerTransport)}}const an=io("http://localhost:3012"),X=new ha(an);document.addEventListener("DOMContentLoaded",function(){console.log("DOMload"),an.emit(re.GETRouterRTPCapabilities,on)});const fa=window.location.search,ma=new URLSearchParams(fa),on=ma.get("room");on||(window.location.href="lobby.html");const ga=document.getElementById("user-1"),Br=document.getElementById("camera-btn"),$r=document.getElementById("mic-btn"),Ai=document.getElementById("record-btn"),_a=async()=>{X.registerSocketEvents()};X.handleUserConnection=()=>{ga.srcObject=X.localStream};X.toggleCamera=()=>{var h,P;(h=X.producerVideo)!=null&&h.paused?(X.producerVideo.resume(),X.socket.emit("pause"),Br.style.backgroundColor="rgba(179,102,249,1)"):((P=X.producerVideo)==null||P.pause(),X.socket.emit("pause"),Br.style.backgroundColor="rgba(255,80,80,1)")};X.toggleMic=()=>{var h,P;(h=X.producerAudio)!=null&&h.paused?(X.producerAudio.resume(),X.producerAudio.track.enabled=!0,$r.style.backgroundColor="rgba(179,102,249,1)"):((P=X.producerAudio)==null||P.pause(),X.producerAudio.track.enabled=!1,$r.style.backgroundColor="rgba(255,80,80,1)")};var qr=!1;X.toggleRecord=()=>{qr?(X.socket.emit("close-record"),Ai.style.backgroundColor="rgba(179,102,249,1)",qr=!1):(X.socket.emit("start-record"),Ai.style.backgroundColor="rgba(102,249,122,1)",qr=!0)};Br.addEventListener("click",X.toggleCamera);$r.addEventListener("click",X.toggleMic);_a();
